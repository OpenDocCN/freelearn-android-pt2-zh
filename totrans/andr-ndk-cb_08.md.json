["```kt\n    #ifndef uint8_t\n    typedef unsigned char uint8_t;\n    #endif\n    #ifndef uint16_t\n    typedef unsigned short uint16_t;\n    #endif\n    #ifndef uint32_t\n    typedef unsigned int uint32_t;\n    #endif\n    ```", "```kt\n    #include <stdint.h>\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := libbmp\n    LOCAL_SRC_FILES := bmpfile.c\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    void naCreateABmp(JNIEnv* env, jclass clazz, jint width, jint height, jint depth) {\n      bmpfile_t *bmp;\n      int i, j;\n      rgb_pixel_t pixel = {128, 64, 0, 0};\n      for (i = 10, j = 10; j < height; ++i, ++j) {\n        bmp_set_pixel(bmp, i, j, pixel);\n        pixel.red++;\n        pixel.green++;\n        pixel.blue++;\n        bmp_set_pixel(bmp, i + 1, j, pixel);\n        bmp_set_pixel(bmp, i, j + 1, pixel);\n      }\n      bmp_save(bmp, \"/sdcard/test_shared.bmp\");\n      bmp_destroy(bmp);\n    }\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := PortingShared\n    LOCAL_C_INCLUDES := $(LOCAL_PATH)/../libbmp/\n    LOCAL_SRC_FILES := PortingShared.c\n    LOCAL_SHARED_LIBRARIES := libbmp\n    LOCAL_LDLIBS := -llog\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(call all-subdir-makefiles)\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    ```", "```kt\n    $ adb pull /sdcard/test_shared.bmp .\n    ```", "```kt\nstatic {\n       System.loadLibrary(\"bmp\");\n         System.loadLibrary(\"PortingShared\");\n}\n```", "```kt\n    include $(CLEAR_VARS)\n    ```", "```kt\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    ```", "```kt\n    include $(call all-subdir-makefiles)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    ```", "```kt\n    LOCAL_C_INCLUDES := $(LOCAL_PATH)/../libbmp/\n    ```", "```kt\n    LOCAL_SHARED_LIBRARIES := libbmp\n    ```", "```kt\n    LOCAL_LDLIBS := -llog\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := libbmp\n    LOCAL_SRC_FILES := bmpfile.c\n    include $(BUILD_STATIC_LIBRARY)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := PortingStatic\n    LOCAL_C_INCLUDES := $(LOCAL_PATH)/../libbmp/\n    LOCAL_SRC_FILES := PortingStatic.c\n    LOCAL_STATIC_LIBRARIES := libbmp\n    LOCAL_LDLIBS := -llog\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(call all-subdir-makefiles)\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    ```", "```kt\n    $ adb pull /sdcard/test_static.bmp .\n    ```", "```kt\nstatic {\n       System.loadLibrary(\"PortingStatic\");\n}\n```", "```kt\n    include $(BUILD_STATIC_LIBRARY)\n    ```", "```kt\n    LOCAL_STATIC_LIBRARIES := libbmp\n    ```", "```kt\n    #!/bin/bash\n    NDK=<path to Android ndk folder>/android-ndk-r8b\n    SYSROOT=$NDK/platforms/android-8/arch-arm/\n    CFLAGS=\"-mthumb\"\n    LDFLAGS=\"-Wl,--fix-cortex-a8\"\n    export CC=\"$NDK/toolchains/arm-linux-androideabi-4.4.3/prebuilt/linux-x86/bin/arm-linux-androideabi-gcc --sysroot=$SYSROOT\"\n    ./configure \\\n       --host=arm-linux-androideabi \\\n       --disable-shared \\\n       --prefix=$(pwd) \\\n       --exec-prefix=$(pwd) \n    make clean\n    make \n    make install\n    ```", "```kt\n    $ sudo chmod +x build_android.sh\n    ```", "```kt\n    $ ./build_android.sh\n    ```", "```kt\n    $NDK/platforms/android-<level>/arch-<arch>/\n    ```", "```kt\n    SYSROOT=$NDK/platforms/android-8/arch-arm/\n    ```", "```kt\n    export CFLAGS=\"-mthumb\"\n    export LDFLAGS=\"-Wl,--fix-cortex-a8\"\n    export CC=\"$NDK/toolchains/arm-linux-androideabi-4.4.3/prebuilt/linux-x86/bin/arm-linux-androideabi-gcc --sysroot=$SYSROOT\"\n    ```", "```kt\n    --prefix=$(pwd) \\\n    --exec-prefix=$(pwd)\n    ```", "```kt\n$ANDROID_NDK/build/tools/make-standalone-toolchain.sh --platform=android-8 --install-dir=/tmp/my-android-toolchain\n```", "```kt\nexport PATH=/tmp/my-android-toolchain/bin:$PATH\nexport CC=arm-linux-androideabi-gcc\n```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE := libbmp-prebuilt\n    LOCAL_SRC_FILES := libbmp-0.1.3/lib/libbmp.a\n    LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/libbmp-0.1.3/include/\n    include $(PREBUILT_STATIC_LIBRARY)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := PortingWithBuildSystem\n    LOCAL_SRC_FILES := PortingWithBuildSystem.c\n    LOCAL_STATIC_LIBRARIES := libbmp-prebuilt\n    LOCAL_LDLIBS := -llog\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    ```", "```kt\n    $ adb pull /sdcard/test_bs_static.bmp .\n    ```", "```kt\n    \tLOCAL_MODULE := libbmp-prebuilt\n    ```", "```kt\n    \tLOCAL_SRC_FILES := libbmp-0.1.3/lib/libbmp.a\n    ```", "```kt\n    LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/libbmp-0.1.3/include/\n    ```", "```kt\n    \tinclude $(PREBUILT_STATIC_LIBRARY) \n    ```", "```kt\n    LOCAL_STATIC_LIBRARIES := libbmp-prebuilt\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE := libbmp\n    LOCAL_SRC_FILES := bmpfile.c\n    LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)\n    include $(BUILD_STATIC_LIBRARY)\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := ImportModule\n    LOCAL_SRC_FILES := ImportModule.c\n    LOCAL_LDLIBS := -llog\n    LOCAL_STATIC_LIBRARIES := libbmp\n    include $(BUILD_SHARED_LIBRARY)\n    $(call import-add-path,$(LOCAL_PATH)/../modules)\n    $(call import-module,libbmp-0.1.3)\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    ```", "```kt\n    $ adb pull /sdcard/test_im.bmp .\n    ```", "```kt\n    $(call import-add-path,$(LOCAL_PATH)/../modules)\n    ```", "```kt\n    $(call import-module,libbmp-0.1.3)\n    ```", "```kt\n    $ANDROID_NDK/build/tools/make-standalone-toolchain.sh --platform=android-9 --install-dir=/tmp/my-android-toolchain\n    ```", "```kt\n    $ ./bootstrap.sh\n    ```", "```kt\n    NDK_TOOLCHAIN = /tmp/my-android-toolchain ;\n    using gcc : android4.6 :\n       $(NDK_TOOLCHAIN)/bin/arm-linux-androideabi-g++ :\n       <archiver>$(NDK_TOOLCHAIN)/bin/arm-linux-androideabi-ar\n       <ranlib>$(NDK_TOOLCHAIN)/bin/arm-linux-androideabi-ranlib\n       <compileflags>--sysroot=$(NDK_TOOLCHAIN)/sysroot\n       <compileflags>-I$(NDK_TOOLCHAIN)/arm-linux-androideabi/include/c++/4.6\n       <compileflags>-I$(NDK_TOOLCHAIN)/arm-linux-androideabi/include/c++/4.6/arm-linux-androideabi\n       <compileflags>-DNDEBUG\n       <compileflags>-D__GLIBC__\n       <compileflags>-DBOOST_FILESYSTEM_VERSION=3\n       <compileflags>-lstdc++\n       <compileflags>-mthumb\n       <compileflags>-fno-strict-aliasing\n       <compileflags>-O2\n           ;\n    ```", "```kt\n    $ ./b2 --without-python --without-mpi  toolset=gcc-android4.6 link=static runtime-link=static target-os=linux --stagedir=android > log.txt &\n    ```", "```kt\n    $ tail -f log.txt\n    ```", "```kt\n    #   include <sys/types.h>\n    #   include <sys/stat.h>\n    #   if !defined(__APPLE__) && !defined(__OpenBSD__) && !defined(__ANDROID__)\n    #     include <sys/statvfs.h>\n    #     define BOOST_STATVFS statvfs\n    #     define BOOST_STATVFS_F_FRSIZE vfs.f_frsize\n    #   else\n    #     ifdef __OpenBSD__\n    #       include <sys/param.h>\n    #     elif defined(__ANDROID__)\n    #         include <sys/vfs.h>\n    #     endif\n    #     include <sys/mount.h>\n    #     define BOOST_STATVFS statfs\n    #     define BOOST_STATVFS_F_FRSIZE   static_cast<boost::uintmax_t>(vfs.f_bsize)\n    #   endif\n    ```", "```kt\n    modules.poke : NO_BZIP2 : 1 ;\n    ```", "```kt\n    #define PAGE_SIZE sysconf(_SC_PAGESIZE)\n    ```", "```kt\n    void naExtractSubject(JNIEnv* pEnv, jclass clazz, jstring pInputStr) {\n       std::string line;\n       boost::regex pat( \"^Subject: (Re: |Aw: )*(.*)\" );\n       const char *str;\n       str = pEnv->GetStringUTFChars(pInputStr, NULL);\n       std::stringstream stream;  \n       stream << str;\n       while (1) {\n           std::getline(stream, line);\n           LOGI(1, \"%s\", line.c_str());\n           if (!stream.good()) {\n             break;\n           }\n           boost::smatch matches;\n           if (boost::regex_match(line, matches, pat)) {\n               LOGI(1, \"matched: %s\", matches[0].str().c_str());\n           } else {\n             LOGI(1, \"not matched\");\n           }\n       }\n    }\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE := boost_regex\n    LOCAL_SRC_FILES := boost_1_51_0/android/lib/libboost_regex.a\n    LOCAL_EXPORT_C_INCLUDES := $(LOCAL_PATH)/boost_1_51_0\n    include $(PREBUILT_STATIC_LIBRARY)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := PortingBoost\n    LOCAL_SRC_FILES := PortingBoost.cpp\n    LOCAL_LDLIBS := -llog\n    LOCAL_STATIC_LIBRARIES := boost_regex\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    APP_STL := gnustl_static\n    APP_CPPFLAGS := -fexceptions\n    ```", "```kt\n    $ adb logcat -v time PortingBoost:I *:S\n    ```", "```kt\ncassert, cctype, cerrno, cfloat, climits, cmath, csetjmp, csignal, cstddef, cstdint, cstdio, cstdlib, cstring, ctime, cwchar, new, stl_pair.h, typeinfo, utility\n```", "```kt\nAPP_STL := gnustl_static\n```", "```kt\n    LOCAL_CPP_FEATURES += exceptions\n    ```", "```kt\n    LOCAL_CPPFLAGS += -fexceptions\n    ```", "```kt\n    APP_CPPFLAGS += -fexceptions\n    ```", "```kt\n    LOCAL_CPP_FEATURES += rtti\n    ```", "```kt\n    LOCAL_CPPFLAGS += -frtti\n    ```", "```kt\n    APP_CPPFLAGS += -frtti\n    ```"]