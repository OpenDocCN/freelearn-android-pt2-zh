- en: Chapter 15. The Backend as a Service Options
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following topics:'
  prefs: []
  type: TYPE_NORMAL
- en: App42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backendless
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buddy
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firebase
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kinvey
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As your application and user base grow, it''s likely you''ll want to connect
    your app across devices and even users, such as a high score leaderboard. You
    have two choices:'
  prefs: []
  type: TYPE_NORMAL
- en: Create and maintain your own server
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Use a **Backend as a Service** (**BaaS**) provider
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: As a mobile developer, creating and maintaining a web server is a time consuming
    prospect that could likely divert you from your development efforts.
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Here''s some background information if you are unfamiliar with BaaS providers:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Wikipedia – Mobile backend as a service:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Mobile_backend_as_a_service](https://en.wikipedia.org/wiki/Mobile_backend_as_a_service)'
  prefs: []
  type: TYPE_NORMAL
- en: We're going to take a look at several BaaS providers with features specifically
    targeting Android developers. Only the providers offering native Android support
    and free subscription are included. (Providers offering only a free trial or paid-only
    plans were not included.) As your application outgrows the free tier, all these
    providers offer higher tier services with varying monthly fees.
  prefs: []
  type: TYPE_NORMAL
- en: 'The following table provides quick comparison of the monthly free service offered
    by each provider:'
  prefs: []
  type: TYPE_NORMAL
- en: '| Provider | Monthly Users | API Calls | Push Notification | File Storage |'
  prefs: []
  type: TYPE_TB
- en: '| --- | --- | --- | --- | --- |'
  prefs: []
  type: TYPE_TB
- en: '| Firebase | Unlimited | 100 SC | N/A | 1 GB |'
  prefs: []
  type: TYPE_TB
- en: '| Buddy | * | 20/sec | 5 Million | 10 GB |'
  prefs: []
  type: TYPE_TB
- en: '| App42 | * | 1 Million / month | 1 Million | 1 GB |'
  prefs: []
  type: TYPE_TB
- en: '| Kinvey | 1000 | * | * | 30 GB |'
  prefs: []
  type: TYPE_TB
- en: '| Backendless | 100 | 50/sec | 1 Million | 20 GB |'
  prefs: []
  type: TYPE_TB
- en: '* = not posted on their website'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: N/A = feature Not Available
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: SC = Simultaneous Connections
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Disclaimer**: The information for the preceding table and following recipes
    was obtained from their public websites, and is subject to change at their discretion.
    As you know, the mobile industry is constantly changing; expect prices and services
    to change. Use this information as a starting point only.'
  prefs: []
  type: TYPE_NORMAL
- en: Lastly, this is not meant to be an exhaustive list of BaaS providers. Hopefully,
    this chapter will provide a good introduction to what a BaaS can do and how you
    can make use of one for your app. The recipes that follow will look at each provider
    and take you through the steps of adding their library to your project. This will
    give you a direct comparison between the services. As you will see, some services
    are easier to use than others, and this may be a deciding factor.
  prefs: []
  type: TYPE_NORMAL
- en: App42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: App42 is the BaaS API product of ShepHertz, a cloud provider of multiple services,
    including gaming platforms, Platform as a Service, and Marketing Analytics. They
    have a very rich feature set, including many services especially useful for games.
  prefs: []
  type: TYPE_NORMAL
- en: 'The App42 Android SDK supports the following:'
  prefs: []
  type: TYPE_NORMAL
- en: User service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storage service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom code service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Push notification service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gift management service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Timer service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A/B test service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buddy service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avatar service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Achievement service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Leaderboard service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reward service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Upload service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Gallery service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geo service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Session service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Review service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Cart service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Catalogue service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Message service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recommender service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Email service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Logging service
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To register for App42/ShepHertz, visit the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://apphq.shephertz.com/register](https://apphq.shephertz.com/register)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a screenshot of the App4 sign up screen:'
  prefs: []
  type: TYPE_NORMAL
- en: '![App42](img/B05057_15_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new project in Android Studio and call it `App42`. Use the default
    **Phone & Tablet** option and select **Empty Activity** when prompted for **Activity
    Type**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Download and extract the App42 SDK from the following link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://github.com/shephertz/App42_ANDROID_SDK/archive/master.zip](https://github.com/shephertz/App42_ANDROID_SDK/archive/master.zip)'
  prefs: []
  type: TYPE_NORMAL
- en: After creating your App42 account (see the preceding link), log in to the AppHQ
    Management Console, and register your app. You will need the ApiKey and SecretKey.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add support for App42 to your project, start by opening the Android Manifest
    and following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the following folder in your file browser: `<project folder>\App42\app\libs`
    (if the `libs` folder does not exist, create it) and copy the `App42_ANDROID-CAMPAIGN_x.x.jar`
    file to the `app\libs` folder.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the app module''s Gradle build file: `build.gradle (Module: app)` and
    add the following to the `dependencies` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open `ActivityMain.java` and add the following import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to the `onCreate()` callback:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You're ready to run the application on a device or emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unfortunately, App42 does not support the Gradle build format, so you need to
    download the JAR file and copy it to the `\libs` folder manually.
  prefs: []
  type: TYPE_NORMAL
- en: In Step 3, replace `x.x` in `App42_ANDROID-CAMPAIGN_x.x.jar` with the current
    version number from the file you downloaded.
  prefs: []
  type: TYPE_NORMAL
- en: Replace the `YOUR_API_KEY` and `YOUR_SECRET_KEY` in step 5 with the credentials
    you received when you registered your application with App42.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s an example of registering a user with the App42 API:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information, refer to the App42 web page at [http://api.shephertz.com/](http://api.shephertz.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Backendless
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Besides **MBaaS** (**Mobile Backend as a Service**, as they call it), Backendless
    offers several other services such as Hosting, API Services, and Marketplace.
    Their MBaaS features include:'
  prefs: []
  type: TYPE_NORMAL
- en: User management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data persistence
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Geolocation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Media streaming
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Publish/Subscribe messaging
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Push notifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Custom business logic
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Analytics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Mobile code generation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To sign up for Backendless, follow this link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://develop.backendless.com/#registration](https://develop.backendless.com/#registration)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a screenshot of the Backendless sign up window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Backendless](img/B05057_15_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new project in Android Studio and call it `Backendless`. Use the default
    **Phone & Tablet** options, and select **Empty Activity** when prompted for **Activity
    Type**.
  prefs: []
  type: TYPE_NORMAL
- en: You will need a **Backendless** account (see the preceding link) and to register
    your application through their **Backendless** Console. Once you have your App
    ID and Secret Key, begin the following steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add `Backendless` to your project, open the Android Manifest and follow
    these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the app module Gradle build file: `build.gradle (Module: app)` and add
    the following to the `dependencies` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open `ActivityMain.java` and add the following import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to the `onCreate()` callback:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You're ready to run the application on a device or emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Replace `YOUR_APP_ID` and `YOUR_SECRET_KEY` in Step 4 with the credentials you
    received from the **Backendless** Console.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you prefer to download the SDK directly instead of using the Maven dependency,
    it is available here: [https://backendless.com/sdk/java/3.0.0/backendless-sdk-android.zip](https://backendless.com/sdk/java/3.0.0/backendless-sdk-android.zip).'
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s an example of registering a user with the `BackendlessUser` object:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information, refer to the Backendless web page at [https://backendless.com/](https://backendless.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Buddy
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Buddy is a bit different than the other BaaS providers in this list as they
    are heavily focused on connecting devices and sensors. To help maintain privacy
    regulations, Buddy lets you chose to host your data in the US or EU.
  prefs: []
  type: TYPE_NORMAL
- en: 'Buddy supports common scenarios like:'
  prefs: []
  type: TYPE_NORMAL
- en: Recording metrics events
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sending push notifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Receiving and securely storing telemetry data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Storing and managing binary files
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deep mobile analytics about how customers are using the application
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integrate device or application data with your company BI systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sandboxed, private data in the geographical location of your choice.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'If you''d like to review or contribute to the Buddy SDK, the source is available
    with the following Git command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To sign up for Buddy, follow this link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.buddyplatform.com/Signup](https://www.buddyplatform.com/Signup)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a screenshot of the Buddy sign up:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Buddy](img/B05057_15_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new project in Android Studio and call it `Buddy`. Use the default
    **Phone & Tablet** options and select **Empty Activity** when prompted for **Activity
    Type**.
  prefs: []
  type: TYPE_NORMAL
- en: You will need a Buddy account (see the preceding link), and will have to register
    your application through their Dashboard. Once you have your App ID and App Key,
    begin the following steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add Buddy to your project, open the Android Manifest and follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the app module Gradle build file: `build.gradle (Module: app)` and add
    the following to the `dependencies` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open `ActivityMain.java` and add the following import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to the `onCreate()` callback:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You're ready to run the application on a device or emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Replace `appId` and `appKey` in Step 4 with the credentials you received from
    the Buddy Dashboard.
  prefs: []
  type: TYPE_NORMAL
- en: Similar to most of the other BaaS providers, we simply add a reference to the
    Maven repository to our Gradle build. Then, we add an import and start calling
    the Buddy APIs.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s an example of registering a user with Buddy:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For more information, refer to the Buddy web page : [https://buddy.com/](https://buddy.com/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firebase
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Firebase is a BaaS provider primarily focused on database functionality. While
    they are not as fully featured as most of the other BaaS providers, they do databases
    well. They are the only provider on this list with autosyncing database functionality.
  prefs: []
  type: TYPE_NORMAL
- en: 'Firebase services include:'
  prefs: []
  type: TYPE_NORMAL
- en: Firebase real-time database
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firebase authentication
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Firebase hosting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: User authentication—e-mail and password, Facebook, Twitter, GitHub, and Google
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Since they were recently acquired by Google, you can expect further integration
    with Google Cloud solutions, as you can see on this link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://cloud.google.com/solutions/mobile/firebase-app-engine-android-studio](https://cloud.google.com/solutions/mobile/firebase-app-engine-android-studio)'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'To sign up with Firebase, visit this link:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://www.firebase.com/login/](https://www.firebase.com/login/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here''s a screenshot of the Firebase sign up window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Firebase](img/B05057_15_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new project in Android Studio and call it `Firebase`. Use the default
    **Phone & Tablet** options and select **Empty Activity** when prompted for **Activity
    Type**.
  prefs: []
  type: TYPE_NORMAL
- en: You will need the Firebase URL that is provided when you register your application
    with Firebase.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add Firebase to your project, start by opening the Android Manifest and
    following these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following permissions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the app module Gradle build file: `build.gradle (Module: app)` and add
    the following to the `dependencies` section:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE17]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open `ActivityMain.java` and add the following import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following code to the `onCreate()` callback:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE19]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You're ready to run the application on a device or emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Adding support for Firebase to your application is rather straight forward.
    Replace the `<YOUR-FIREBASE-APP>` placeholder with the link provided by Firebase
    when you registered your app.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Here''s an example of registering a user with Firebase:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE20]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information, refer to the Firebase web page at [https://www.firebase.com/](https://www.firebase.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Kinvey
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Kinvey is one of the earliest providers to begin offering mobile backend services.
    Their features include:'
  prefs: []
  type: TYPE_NORMAL
- en: User management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Data storage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: File storage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Push notifications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Social network integration
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Location services
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Lifecycle management
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Versioning
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
- en: Sign up for Kinvey at [https://console.kinvey.com/sign-up](https://console.kinvey.com/sign-up).
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'Here''s a screenshot of the Kinvey sign up window:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Kinvey](img/B05057_15_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Getting ready
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Create a new project in Android Studio and call it `Kinvey`. Use the default
    **Phone & Tablet** options and select **Empty Activity** when prompted for **Activity
    Type**.
  prefs: []
  type: TYPE_NORMAL
- en: 'Download and extract the Kinvey SDK from the following link: [download.kinvey.com/Android/kinvey-android-2.10.5.zip](http://download.kinvey.com/Android/kinvey-android-2.10.5.zip)'
  prefs: []
  type: TYPE_NORMAL
- en: You will need a Kinvey account (see the preceding link), and will have to register
    your application through their developer console. Once you have your App Key and
    App Secret, begin the following steps.
  prefs: []
  type: TYPE_NORMAL
- en: How to do it...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To add Kinvey to your project, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Add the following permission to the Android Manifest:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE21]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open the following folder in your file browser: `<project folder>\Kinvey\app\libs`
    (if the `libs` folder does not exist, create it) and copy all the files from the
    SDK `lib` and `libJar` folders to the `app\libs` folder.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Open the app module Gradle build file: `build.gradle (Module: app)` and add
    the following `repositories` and `dependencies` (leave any existing entries in
    place):'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE22]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Open `MainActivity.java` and add the following import:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE23]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: 'Add the following to the class declarations:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE24]'
  prefs:
  - PREF_IND
  type: TYPE_PRE
- en: You're ready to run the application on a device or emulator.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: How it works...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Kinvey isn't the easiest of the BaaS to set up as it doesn't offer a simple
    Gradle dependency. Instead, you need to add their libraries directly to the project
    libraries as we did in Step 2.
  prefs: []
  type: TYPE_NORMAL
- en: These steps will have the Kinvey client set up and ready to begin adding additional
    functionality to your application. Just make sure to replace the placeholders
    in the Kinvey Client Builder with your application credentials.
  prefs: []
  type: TYPE_NORMAL
- en: There's more...
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To verify your setup is working correctly, call the following code in the `onCreate()`
    method or on a button click:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE25]'
  prefs: []
  type: TYPE_PRE
- en: See also
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For more information, refer to the Kinvey web page at [http://www.kinvey.com/](http://www.kinvey.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
