["```kt\nActivity activity = solo.getCurrentActivity();\n\nImageView imageView = (ImageView) solo.getView(act.getResources().getIdentifier(\"appicon\", \"id\", act.getPackageName()));\n```", "```kt\nSolo.getView(\"com.robotium.R.id.icon\");\n```", "```kt\n<ToggleButton\n  android:id=\"@+id/toggleConnection\"android:layout_width=\"fill_parent\"android:layout_height=\"wrap_content\"android:layout_marginTop=\"50dp\"android:textOn=\"@string/on\"android:checked=\"true\"android:textOff=\"@string/off\"/>\n\n<TextView\n  android:id=\"@+id/tvConnectionLogs\"android:layout_width=\"fill_parent\"android:layout_height=\"wrap_content\"android:maxLines=\"5\"android:test=\"@string/connection_logs\"android:layout_marginTop=\"120dip\"/>\n```", "```kt\n  <string name=\"on\">Connect</string>\n  <string name=\"off\">Disconnect</string>\n  <string name=\"connection_logs\">Successful</string>\n```", "```kt\npackage com.android.testinterapp;\n\nimport android.app.Activity;\nimport android.test.ActivityInstrumentationTestCase2;\n\nimport com.android.interapp.MainActivity;\nimport com.jayway.android.robotium.solo.Solo;\n\npublic class TestInterApp extends ActivityInstrumentationTestCase2<MainActivity> {\n  private Solo  solo;\n\n  public TestInterApp() {\n    super(MainActivity.class);\n  }\n\n  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    this.solo = new Solo(this.getInstrumentation(), this.getActivity());\n  }\n\n  public void testInterAppBlackBox() {\n\n    // Gets the activity object from solo class using\n    // method getCurrentActivity()\n    Activity activity = solo.getCurrentActivity();\n\n    // Gets the resource ID using the resource name and type passed\n    // in the getIdentifier method\n    int connectOnId = activity.getResources().getIdentifier(\"on\", \"string\", activity.getPackageName());\n\n    // Gets the string by using the resource id in the earlier step\n    String connect = activity.getResources().getString(connectOnId);\n\n    this.solo.clickOnToggleButton(connect);\n\n    // Similarly for the text view field, get the resource ID using the resource name and type passed in the getIdentifier method\n    int connectionLogId = activity.getResources().getIdentifier(\"connection_logs\", \"string\", activity.getPackageName());\n\n    // Gets the string by using the resource id in the earlier step\n    String connectionLogText = activity.getResources().getString(connectionLogId);\n\n    assertTrue(this.solo.searchText(connectionLogText));\n\n  }\n\n  @Override\n  protected void tearDown() throws Exception {\n    this.solo.finishOpenedActivities();\n  }\n}\n```"]