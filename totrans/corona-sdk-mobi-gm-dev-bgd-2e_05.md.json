["```kt\nlocal square = display.newRect( 0, 0, 50, 50 )\nsquare:setFillColor( 1,1,1 )\nsquare.x = 50; square.y = 100\n\nlocal square2 = display.newRect( 0, 0, 50, 50 )\nsquare2:setFillColor( 1,1,1 )\nsquare2.x = 50; square2.y = 300\n\ntransition.to( square, { time=1500, x=250, y=0 } )\ntransition.from( square2, { time=1500, x=250, y=0, transition = easing.outExpo } )\n```", "```kt\n    local function myEvent()\n      print( \"myEvent called\" )\n    end\n    timer.performWithDelay( 1000, myEvent )\n    ```", "```kt\n        local count = 0\n\n        local function myEvent()\n          count = count + 1\n          print( count )\n\n          if count >= 3 then\n            timer.cancel( myTimerID ) -- Cancels myTimerID\n            end\n          end\n        ```", "```kt\n        local count = 0\n\n        local function myEvent()\n          count = count + 1\n          print( count )\n\n          if count >= 5 then\n            timer.pause( myTimerID ) -- Pauses myTimerID\n            end\n        end\n\n        myTimerID = timer.performWithDelay(1000, myEvent, 0)\n        ```", "```kt\n        local function myEvent()\n          print( \"myEvent called\" )\n        end\n\n        myTimerID = timer.performWithDelay( 3000, myEvent )  -- wait 3 seconds\n\n        result = timer.pause( myTimerID ) -- Pauses myTimerID\n        print( \"Time paused at \" .. result )\n\n        result = timer.resume( myTimerID ) -- Resumes myTimerID\n        print( \"Time resumed at \" .. result )\n        ```", "```kt\ngraphics.newImageSheet( filename, [baseDir, ] options )\n```", "```kt\nlocal options =\n{\n  width = 128,\n  height = 128,\n  numFrames = 5,\n  sheetContentWidth=384, \n  sheetContentHeight=256\n}\nlocal sheet = graphics.newImageSheet( \"mySheet.png\", options )\n```", "```kt\n    local sequenceData =\n    {\n      name=\"run\", start=1, count=5, time=200, loopCount=0\n    }\n\n    local myCharacter = display.newSprite(imageSheet, sequenceData)\n    ```", "```kt\n    local sequenceData =\n    {\n      name=\"jump\", \n      frames= { 6, 7, 8 }, \n      time=200,\n      loopCount=0\n    }\n\n    local myCharacter = display.newSprite(imageSheet, sequenceData)\n    ```", "```kt\n    local sequenceData =\n    {\n      { name=\"run\", start=1, count=5, time=200 },\n      {name=\"jump\", frames= { 6, 7, 8 }, time=200, loopCount=0 }\n    }\n\n    local myCharacter = display.newSprite(imageSheet, sequenceData)\n    ```", "```kt\n    display.setStatusBar( display.HiddenStatusBar ) -- Hides the status bar in iOS only\n\n    -- Display groups\n    local hudGroup = display.newGroup() -- Displays the HUD\n    local gameGroup = display.newGroup()\n    local levelGroup = display.newGroup()\n    local stars = display.newGroup() -- Displays the stars\n\n    -- Modules\n    local physics = require (\"physics\")\n\n    local mCeil = math.ceil\n    local mAtan2 = math.atan2\n    local mPi = math.pi\n    local mSqrt = math.sqrt\n\n    -- Game Objects\n    local background\n    local ground\n    local powerShot\n    local arrow\n    local panda\n    local poof\n    local starGone\n    local scoreText\n    local gameOverDisplay\n\n    -- Variables\n    local gameIsActive = false\n    local waitingForNewRound\n    local restartTimer\n    local counter\n    local timerInfo \n    local numSeconds = 30 -- Time the round starts at\n    local counterSize = 50\n    local gameScore = 0 -- Round starts at a score of 0\n    local starWidth = 30\n    local starHeight = 30\n    ```", "```kt\n    local startNewRound = function()\n      if panda then\n    ```", "```kt\n      local activateRound = function()\n\n        waitingForNewRound = false\n\n        if restartTimer then\n          timer.cancel( restartTimer )\n        end\n\n        ground:toFront()\n        panda.x = 240\n        panda.y = 300\n        panda.rotation = 0\n        panda.isVisible = true\n    ```", "```kt\n        local pandaLoaded = function()\n\n          gameIsActive = true\n          panda.inAir = false\n          panda.isHit = false\n          panda:toFront()\n\n          panda.bodyType = \"static\"\n\n        end\n    ```", "```kt\n        transition.to( panda, { time=1000, y=225, onComplete=pandaLoaded } )\n        end\n\n        activateRound()\n\n      end\n    end\n    ```", "```kt\n    local callNewRound = function()\n      local isGameOver = false\n    ```", "```kt\n      local pandaGone = function()\n\n        panda:setLinearVelocity( 0, 0 )\n        panda.bodyType = \"static\"\n        panda.isVisible = false\n        panda.rotation = 0\n\n        poof.x = panda.x; poof.y = panda.y\n        poof.alpha = 0\n        poof.isVisible = true\n    ```", "```kt\n        local fadePoof = function()\n           transition.to( poof, { time=100, alpha=0 } )\n        end\n        transition.to( poof, { time=50, alpha=1.0, onComplete=fadePoof } )\n\n        restartTimer = timer.performWithDelay( 300, function()\n           waitingForNewRound = true; \n           end, 1)\n\n      end\n\n      local poofTimer = timer.performWithDelay( 500, pandaGone, 1 )\n    ```", "```kt\n      if isGameOver == false then\n        restartTimer = timer.performWithDelay(1500, startNewRound, 1)\n      end\n    end\n    ```", "```kt\n    local setScore = function( scoreNum )\n    ```", "```kt\n      local newScore = scoreNum\n      gameScore = newScore\n\n      if gameScore < 0 then gameScore = 0; end\n    ```", "```kt\n      scoreText.text = gameScore\n      scoreText.xScale = 0.5; scoreText.yScale = 0.5\n      scoreText.x = (480 - (scoreText.contentWidth * 0.5)) - 15\n      scoreText.y = 20\n    end\n    ```", "```kt\n    local callGameOver = function()\n    ```", "```kt\n      gameIsActive = false\n      physics.pause()\n\n      panda:removeSelf()\n      panda = nil\n      stars:removeSelf()\n      stars = nil\n    ```", "```kt\n      local shade = display.newRect( 0, 0, 480, 320 )\n      shade:setFillColor( 0, 0, 0, 0.5)\n      shade.x = display.contentCenterX\n      shade.y = display.contentCenterY\n\n      gameOverDisplay = display.newImage( \"gameOverScreen.png\")\n      gameOverDisplay.x = 240; gameOverDisplay.y = 160\n      gameOverDisplay.alpha = 0\n\n      hudGroup:insert( shade )\n      hudGroup:insert( gameOverDisplay )\n\n      transition.to( shade, { time=200 } )\n      transition.to( gameOverDisplay, { time=500, alpha=1 } )\n    ```", "```kt\n      local newScore = gameScore\n      setScore( newScore )\n\n      counter.isVisible = false\n\n      scoreText.isVisible = false\n      scoreText.text = \"Score: \" .. gameScore\n      scoreText.xScale = 0.5; scoreText.yScale = 0.5\n      scoreText.x = 280\n      scoreText.y = 160\n      scoreText:toFront()\n      timer.performWithDelay( 1000, function() scoreText.isVisible = true; end, 1 )\n\n    end\n    ```", "```kt\n    local drawBackground = function()\n\n      background = display.newImage( \"background.png\" )\n      background.x = 240; background.y = 160\n\n      gameGroup:insert( background )\n\n      ground = display.newImage( \"ground.png\" )\n      ground.x = 240; ground.y = 300\n\n      local groundShape = { -240,-18, 240,-18, 240,18, -240,18 }\n      physics.addBody( ground, \"static\", { density=1.0, bounce=0, friction=0.5, shape=groundShape } )\n\n      gameGroup:insert( ground )\n\n    end\n    ```", "```kt\n    local hud = function()\n    ```", "```kt\n      local helpText = display.newImage(\"help.png\")\n      helpText.x = 240; helpText.y = 160\n      helpText.isVisible = true\n      hudGroup:insert( helpText )\n\n      timer.performWithDelay( 10000, function() helpText.isVisible = false; end, 1 )\n\n      transition.to( helpText, { delay=9000, time=1000, x=-320, transition=easing.inOutExpo })\n    ```", "```kt\n      counter = display.newText( \"Time: \" .. tostring(numSeconds), 0, 0, \"Helvetica-Bold\", counterSize )\n      counter:setFillColor( 1, 1, 1 )\n      counter.xScale = 0.5; counter.yScale = 0.5\n      counter.x = 60; counter.y = 15 \n      counter.alpha = 0\n\n      transition.to( counter, { delay=9000, time=1000, alpha=1, transition=easing.inOutExpo })\n\n      hudGroup:insert( counter )\n\n      scoreText = display.newText( \"0\", 470, 22, \"Helvetica-Bold\", 52 )\n      scoreText: setFillColor( 1, 1, 1 )--> white\n      scoreText.text = gameScore\n      scoreText.xScale = 0.5; scoreText.yScale = 0.5\n      scoreText.x = (480 - (scoreText.contentWidth * 0.5)) - 15\n      scoreText.y = 15\n      scoreText.alpha = 0\n\n      transition.to( scoreText, { delay=9000, time=1000, alpha=1, transition=easing.inOutExpo })\n\n      hudGroup:insert( scoreText )\n\n    end\n    ```", "```kt\n    local myTimer = function()\n    ```", "```kt\n      numSeconds = numSeconds - 1\n      counter.text = \"Time: \" .. tostring( numSeconds )\n      print(numSeconds)\n    ```", "```kt\n      if numSeconds < 1 or stars.numChildren <= 0 then\n        timer.cancel(timerInfo)\n        panda:pause()\n        restartTimer = timer.performWithDelay( 300, function() callGameOver(); end, 1 )\n      end\n\n    end\n    ```", "```kt\n    local startTimer = function()\n      print(\"Start Timer\")\n      timerInfo = timer.performWithDelay( 1000, myTimer, 0 )\n    end\n    ```", "```kt\n    local createPowerShot = function()\n      powerShot = display.newImage( \"glow.png\" )\n      powerShot.xScale = 1.0; powerShot.yScale = 1.0\n      powerShot.isVisible = false\n\n      gameGroup:insert( powerShot )\n    end\n    ```", "```kt\n    local createPanda = function()\n    ```", "```kt\n      local onPandaCollision = function( self, event )\n        if event.phase == \"began\" then\n\n          if panda.isHit == false then\n\n            panda.isHit = true\n\n            if event.other.myName == \"star\" then\n              callNewRound( true, \"yes\" )\n            else\n              callNewRound( true, \"no\" )\n            end\n\n            if event.other.myName == \"wall\" then\n              callNewRound( true, \"yes\" )\n            else\n              callNewRound( true, \"no\" )\n            end\n\n            elseif panda.isHit then\n              return true\n            end\n        end\n      end\n    ```", "```kt\n      arrow = display.newImage( \"arrow.png\" )\n      arrow.x = 240; arrow.y = 225\n      arrow.isVisible = false\n\n      gameGroup:insert( arrow )\n    ```", "```kt\n      local sheetData = { width=128, height=128, numFrames=5, sheetContentWidth=384, sheetContentHeight=256 }\n      local sheet = graphics.newImageSheet( \"pandaSprite.png\", sheetData )\n\n      local sequenceData = \n      {\n        { name=\"set\", start=1, count=2, time=200 }, \n        { name=\"crouch\", start=3, count= 1, time=1 }, \n        { name=\"air\", start=4, count=2, time=100 }  \n      }\n\n      panda = display.newSprite( sheet, sequenceData )\n\n      panda:setSequence(\"set\")\n      panda:play()\n    ```", "```kt\n      panda.x = 240; panda.y = 225\n      panda.isVisible = false\n\n      panda.isReady = false\n      panda.inAir = false\n      panda.isHit = false\n      panda.isBullet = true\n      panda.trailNum = 0\n\n      panda.radius = 12\n      physics.addBody( panda, \"static\", { density=1.0, bounce=0.4, friction=0.15, radius=panda.radius } )\n      panda.rotation = 0\n    ```", "```kt\n      panda.collision = onPandaCollision\n      panda:addEventListener( \"collision\", panda )\n    ```", "```kt\n      poof = display.newImage( \"poof.png\" )\n      poof.alpha = 1.0\n      poof.isVisible = false\n    ```", "```kt\n      gameGroup:insert( panda )\n      gameGroup:insert( poof )\n    end\n    ```", "```kt\n      panda:setSequence(\"set\")\n      panda:play()\n    ```", "```kt\n    local onStarCollision = function( self, event )\n    ```", "```kt\n      if event.phase == \"began\" and self.isHit == false then\n\n        self.isHit = true\n        print( \"star destroyed!\")\n        self.isVisible = false\n\n        stars.numChildren = stars.numChildren - 1\n\n        if stars.numChildren < 0 then\n          stars.numChildren = 0\n        end\n\n        self.parent:remove( self )\n        self = nil\n\n        local newScore = gameScore + 500\n        setScore( newScore )\n      end\n    end\n    ```", "```kt\n    local onScreenTouch = function( event )\n    ```", "```kt\n      if gameIsActive then\n        if event.phase == \"began\" and panda.inAir == false then\n\n          panda.y = 225\n          panda.isReady = true\n          powerShot.isVisible = true\n          powerShot.alpha = 0.75\n          powerShot.x = panda.x; powerShot.y = panda.y\n          powerShot.xScale = 0.1; powerShot.yScale = 0.1\n\n          arrow.isVisible = true\n\n          panda:setSequence(\"crouch\")\n          panda:play()\n    ```", "```kt\n        elseif event.phase == \"ended\" and panda.isReady then\n\n          local fling = function()\n            powerShot.isVisible = false\n            arrow.isVisible = false\n\n            local x = event.x\n            local y = event.y\n            local xForce = (panda.x-x) * 4\n            local yForce = (panda.y-y) * 4\n\n            panda:setSequence(\"air\")\n            panda:play()\n\n            panda.bodyType = \"dynamic\"\n            panda:applyForce( xForce, yForce, panda.x, panda.y )\n            panda.isReady = false\n            panda.inAir = true\n\n          end\n\n        transition.to( powerShot, { time=175, xScale=0.1, yScale=0.1, onComplete=fling} )\n\n        end\n\n        if powerShot.isVisible == true then\n\n          local xOffset = panda.x\n          local yOffset = panda.y\n\n          local distanceBetween = mCeil(mSqrt( ((event.y - yOffset) ^ 2) + ((event.x - xOffset) ^ 2) ))\n\n          powerShot.xScale = -distanceBetween * 0.02\n          powerShot.yScale = -distanceBetween * 0.02\n\n          local angleBetween = mCeil(mAtan2( (event.y - yOffset), (event.x - xOffset) ) * 180 / mPi) + 90\n\n          panda.rotation = angleBetween + 180\n          arrow.rotation = panda.rotation\n        end\n\n      end\n    end\n    ```", "```kt\n    local reorderLayers = function()\n\n      gameGroup:insert( levelGroup )\n      ground:toFront()\n      panda:toFront()\n      poof:toFront()\n      hudGroup:toFront()\n\n    end\n    ```", "```kt\n    local createStars = function()\n\n      local numOfRows = 4\n      local numOfColumns = 12\n      local starPlacement = {x = (display.contentWidth  * 0.5) - (starWidth * numOfColumns ) / 2  + 10, y = 50}\n\n      for row = 0, numOfRows - 1 do\n        for column = 0, numOfColumns - 1 do\n\n          -- Create a star\n          local star = display.newImage(\"star.png\")\n          star.name = \"star\"\n          star.isHit = false\n          star.x = starPlacement.x + (column * starWidth)\n          star.y = starPlacement.y + (row * starHeight)\n          physics.addBody(star, \"static\", {density = 1, friction = 0, bounce = 0, isSensor = true})\n          stars.insert(stars, star)\n\n          star.collision = onStarCollision\n          star:addEventListener( \"collision\", star )\n\n          local function starAnimation()\n            local starRotation = function()\n              transition.to( star, { time=10000, rotation = 1080, onComplete=starAnimation })\n            end\n\n            transition.to( star, { time=10000, rotation = -1080, onComplete=starRotation })\n          end\n\n          starAnimation()\n\n        end\n      end\n\n      local leftWall  = display.newRect (0, 0, 0, display.contentHeight)\n      leftWall.name = \"wall\"\n\n      local rightWall = display.newRect (display.contentWidth, 0, 0, display.contentHeight)\n        rightWall.name = \"wall\"\n\n        physics.addBody (leftWall, \"static\", {bounce = 0.0, friction = 10})\n        physics.addBody (rightWall, \"static\", {bounce = 0.0, friction = 10})\n\n        reorderLayers()\n    end\n    ```", "```kt\n    local gameInit = function()\n      physics.start( true )\n      physics.setGravity( 0, 9.8 )\n\n      drawBackground()\n      createPowerShot()\n      createPanda()\n      createStars()\n      hud()\n    ```", "```kt\n      Runtime:addEventListener( \"touch\", onScreenTouch )\n    ```", "```kt\n      local roundTimer = timer.performWithDelay( 10000, function() startNewRound(); end, 1 )\n      local gameTimer = timer.performWithDelay( 10000, function() startTimer(); end, 1 )\n    end\n\n    gameInit()\n    ```", "```kt\n     {\n     name=\"run\", start=1, count=5, time=100, loopCount=1 \n     }\n\n    ```", "```kt\n     {\n     name=\"run\", start=1, count=5, time=100, loopCount=0 \n     }\n\n    ```", "```kt\n     {\n     name=\"run\", start=1, count=5, time=100, loopCount=-1\n     }\n\n    ```", "```kt\n     {\n     name=\"run\", start=1, count=5, time=100, loopCount=100\n     }\n\n    ```"]