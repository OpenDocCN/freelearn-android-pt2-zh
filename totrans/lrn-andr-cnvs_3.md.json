["```kt\nBitmap ourNewBitmap = Bitmap.CreateBitmap(100,100,Bitmap.Config.ARGB_8888);\nCanvas ourNewCanvas = new Canvas(ourNewBitmap);\n```", "```kt\nclass DrawView extends View {\n  Paint paint = new Paint();\n  public DrawView(Context context) {\n    super(context);\n    paint.setColor(Color.BLUE);\n  }\n  @Override\n  public void onDraw(Canvas canvas) {\n    super.onDraw(canvas);\n    canvas.drawLine(10, 10, 90, 10, paint);\n  }\n}\n```", "```kt\nclass OurGameView extends SurfaceView implements SurfaceHolder.Callback {\n  Thread thread = null;\n  SurfaceHolder surfaceHolder;\n  volatile boolean running = false;\n  public void OurGameView (Context context) {\n    super(context);\n    surfaceHolder = getHolder();\n  }\n\n  public void onResumeOurGameView (){\n    running = true;\n    thread = new Thread(this);\n    thread.start();\n  }\n    public void onPauseOurGameView(){\n  boolean retry = true;\n  running = false;\n  while(retry){\n    thread.join();\n    retry = false;\n  }\n\n  public void run() {\n  while(running){\n    if(surfaceHolder.getSurface().isValid()){\n      Canvas canvas = surfaceHolder.lockCanvas();\n    //... actual drawing on canvas\n      surfaceHolder.unlockCanvasAndPost(canvas);\n      }\n    }\n  }\n}\n```", "```kt\npackage com.learningandroidcanvasmini.myfirstcanvasapp;\nimport android.os.Bundle;\nimport android.app.Activity;\nimport android.view.Menu;\npublic class MyFirstCanvasAppMainActivity extends Activity {\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_my_first_canvas_app_main);\n  }\n  @Override\n  public boolean onCreateOptionsMenu(Menu menu) {\n    // Inflate the menu; this adds items to the action bar if it //is present.\n    getMenuInflater().inflate(R.menu.my_first_canvas_app_main,menu);\n    return true;\n  }\n}\n```", "```kt\nLinearLayout myLinearLayout;\n```", "```kt\nmyLinearLayout = new LinearLayout(this);\n```", "```kt\nImageView MySecondImageView = new ImageView(this);\nMySecondImageView.setImageResource(R.drawable.lacm_5396_01_14);\nMySecondImageView.setAdjustViewBounds(true);\nMySecondImageView.setLayoutParams(new ImageView.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\nmyLinearLayout.addView(MySecondImageView);\nsetContentView(myLinearLayout);\n```", "```kt\nmyLinearLayout.addView(MySecondImageView);\n```", "```kt\nsetContentView(myLinearLayout);\n```", "```kt\npackage com.learningandroidcanvasmini.myfirstcanvasapp;\nimport android.os.Bundle;\nimport android.app.Activity;\nimport android.view.Menu;\nimport android.widget.ImageView;\nimport android.widget.LinearLayout;\n\npublic class MyFirstCanvasAppMainActivity extends Activity {\n  LinearLayout myLinearLayout;  \n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_my_first_canvas_app_main);\n  myLinearLayout = new LinearLayout(this);\n  ImageView MySecondImageView = new ImageView(this);\n  MySecondImageView.setImageResource(R.drawable.lacm_5396_01_14);\n  MySecondImageView.setAdjustViewBounds(true);\n  MySecondImageView.setLayoutParams(new ImageView.LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT));\n  myLinearLayout.addView(MySecondImageView);\n  setContentView(myLinearLayout);  \n  }\n  @Override\n  public boolean onCreateOptionsMenu(Menu menu) {\n    // Inflate the menu; this adds items to the action bar if it //is present.\n    getMenuInflater().inflate(R.menu.my_first_canvas_app_main, menu);\n    return true;\n  }\n\n}\n```", "```kt\nResources myRes = mContext.getResources();\nDrawable myImage = myRes.getDrawable(R.drawable.5396_01_14);\n```", "```kt\n<transition \n>\n  <item android:drawable=\"@drawable/image_expand\">\n    <item android:drawable=\"@drawable/image_collapse\">\n      </transition>\n\n```", "```kt\nResources myRes = mContext.getResources();\nTransitionDrawable myTransition = (TransitionDrawable)\n  res.getDrawable(R.drawable.expand_collapse);\nImageView myImage = (ImageView) findViewById(R.id.toggle_image);\n  myImage.setImageDrawable(myTransition);\n\n```", "```kt\nmyTransition.startTransition(1000);\n```", "```kt\n    public class MyCustomDrawableView extends View {.....\n    ```", "```kt\n    myDrawable = new ShapeDrawable(new OvalShape());\n    ```", "```kt\n    myDrawable.getPaint().setColor(0xff74fA23);\n    ```", "```kt\n    myDrawable.setBounds(x, y, x + width, y + height);\n    ```", "```kt\n    protected void onDraw(Canvas canvas) {\n      myDrawable.draw(canvas);\n    }\n    ```", "```kt\n    MyCustomDrawableView myCustomDrawableView;\n    .\n    .\n    .\n    myCustomDrawableView = new MyCustomDrawableView(this);\n\n      setContentView(myCustomDrawableView);\n    ```", "```kt\npackage com.learningandroidcanvasmini.myshapedrawablesapp;\nimport android.os.Bundle;\nimport android.app.Activity;\nimport android.content.Context;\nimport android.graphics.Canvas;\nimport android.graphics.drawable.ShapeDrawable;\nimport android.graphics.drawable.shapes.OvalShape;\nimport android.view.Menu;\nimport android.view.View;\n\npublic class MyShapeDrawablesMainActivity extends Activity {\n  MyCustomDrawableView myCustomDrawableView;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_my_shape_drawables_main);\n\n    myCustomDrawableView = new MyCustomDrawableView(this);\n      setContentView(myCustomDrawableView);\n  }\n  @Override\n  public boolean onCreateOptionsMenu(Menu menu) {\n    // Inflate the menu; this adds items to the action bar if it is \n    //present.\n    getMenuInflater().inflate(R.menu.my_shape_drawables_main, menu);\n    return true;\n  }\n\n  public class MyCustomDrawableView extends View {\n    private ShapeDrawable myDrawable;\n\n    public MyCustomDrawableView(Context context) {\n      super(context);\n\n      int x = 10;\n      int y = 10;\n      int width = 300;\n      int height = 50;\n\n      myDrawable = new ShapeDrawable(new OvalShape());\n      myDrawable.getPaint().setColor(0xff74fA23);\n      myDrawable.setBounds(x, y, x + width, y + height);\n    }\n\n    protected void onDraw(Canvas canvas) {\n      myDrawable.draw(canvas);\n    }\n  }\n\n}\n```"]