["```kt\nIntentFilter ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\nIntent intentBatteryStatus = context.registerReceiver(null, ifilter);\n```", "```kt\nint status = intentBatteryStatus.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\nboolean isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING ||\n                     status == BatteryManager.BATTERY_STATUS_FULL;\n```", "```kt\nint chargePlug = batteryStatus.getIntExtra(BatteryManager.EXTRA_PLUGGED, -1);\nboolean isUSBCharging = chargePlug == BatteryManager.BATTERY_PLUGGED_USB;\nboolean isACCharging = chargePlug == BatteryManager.BATTERY_PLUGGED_AC;\n```", "```kt\n<receiver android:name=\".PowerConnectionBroadcastReceiver\">\n  <intent-filter>\n    <action android:name=\"android.intent.action. ACTION_POWER_CONNECTED\"/>\n    <action android:name=\"android.intent.action. ACTION_POWER_DISCONNECTED\"/>\n  </intent-filter>\n</receiver>\n```", "```kt\npublic class PowerConnectionReceiver extends BroadcastReceiver {\n    @Override\n    public void onReceive(Context context, Intent intent) {\n        int status = intentBatteryStatus.getIntExtra (BatteryManager.EXTRA_STATUS, -1);\n        boolean isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING ||\n                     status == BatteryManager.BATTERY_STATUS_FULL;\n\n        int chargePlug = batteryStatus.getIntExtra (BatteryManager.EXTRA_PLUGGED, -1);\n          boolean isUSBCharging = chargePlug == BatteryManager.BATTERY_PLUGGED_USB;\n          boolean isACCharging = chargePlug == BatteryManager.BATTERY_PLUGGED_AC;\n    }\n}\n```", "```kt\nint level = intentBatteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL, -1);\nint scale = intentBatteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE, -1);\n\nfloat batteryPercentage = level / (float)scale;\n```", "```kt\n<receiver android:name=\".BatteryLevelBroadcastReceiver\">\n<intent-filter>\n  <action android:name=\"android.intent.action.ACTION_BATTERY_LOW\"/>\n  <action android:name=\"android.intent.action.ACTION_BATTERY_OKAY\"/>\n  </intent-filter>\n</receiver>\n```", "```kt\nConnectivityManager connectivityManager =\n        (ConnectivityManager)context.getSystemService (Context.CONNECTIVITY_SERVICE);\n\nNetworkInfo activeNetwork = connectivityManager.getActiveNetworkInfo();\nboolean isConnected = activeNetwork != null &&\n                      activeNetwork.isConnectedOrConnecting();\n```", "```kt\nboolean isWiFi = activeNetwork.getType() == ConnectivityManager.TYPE_WIFI;\n```", "```kt\nWifiInfo wifiInfo = wifiManager.getConnectionInfo();\nint speedMbps = wifiInfo.getLinkSpeed();\n```", "```kt\n  <receiver android:name=\".NetworkChangeReceiver\" >\n            <intent-filter>\n                <action android:name=\"android.net.conn. CONNECTIVITY_CHANGE\" />\n</intent-filter>\n        </receiver>\n```", "```kt\npublic class NetworkChangeReceiver extends BroadcastReceiver {\n\n    @Override\n    public void onReceive(final Context context, final Intent intent) {\n        final ConnectivityManager connectionManager = (ConnectivityManager) context\n                .getSystemService(Context.CONNECTIVITY_SERVICE);\n\n        final NetworkInfo wifi = connectionManager\n                .getNetworkInfo(ConnectivityManager.TYPE_WIFI);\n\n        final NetworkInfo mobile = connectionManager\n                .getNetworkInfo(ConnectivityManager.TYPE_MOBILE);\n\n        if (wifi.isAvailable() || mobile.isAvailable()) {\n            //perform operation\n\n        }\n    }\n}\n```", "```kt\nComponentName myReceiver = new ComponentName(context, Receiver.class);\n\nPackageManager packageManager = getPackageManager();\n\npackageManager.setComponentEnabledSetting(myReceiver,\n        PackageManager.COMPONENT_ENABLED_STATE_ENABLED,\n        PackageManager.DONT_KILL_APP)\n```"]