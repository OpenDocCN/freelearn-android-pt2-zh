["```kt\n    <uses-permission name=\"android.permission.INTERNET\"/>\n    <uses-permission name=\"android.permission.WRITE_EXTERNAL_STORAGE\"/>\n    <!--<uses-permission name=\"android.permission.READ_PHONE_STATE\"/>-->\n    <!--<uses-permission name=\"android.permission.ACCESS_FINE_LOCATION\"/>-->\n    <!--<uses-permission name=\"android.permission.DISABLE_KEYGUARD\"/>-->\n    <!--<uses-permission name=\"android.permission.WAKE_LOCK\"/>-->\n    <uses-permission name=\"android.permission.CAMERA\"/>\n    <!--<uses-permission name=\"android.permission.RECORD_AUDIO\"/>-->\n    <!--<uses-permission name=\"android.permission.ACCESS_NETWORK_STATE\"/>-->\n    <!--<uses-permission name=\"android.permission.ACCESS_WIFI_STATE\"/>-->\n\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n    <uses-permission android:name=\"android.permission.DISABLE_KEYGUARD\" />\n\n    ```", "```kt\n    import flash.desktop.NativeApplication;\n    import flash.desktop.SystemIdleMode;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setIdleMode():void {\n    NativeApplication.nativeApplication.systemIdleMode = SystemIdleMode.KEEP_AWAKE;\n    }\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    device screenpreventing, from dimmingtraceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 20\n    traceField.width = stage.stageWidth-40;\n    traceField.height = stage.stageHeight - traceField.y;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function checkIdleMode():void {\n    traceField.text = \"System Idle Mode: \" + NativeApplication. nativeApplication.systemIdleMode;\n    }\n\n    ```", "```kt\n    <application android:enabled=\"true\">\n    <activity android:excludeFromRecents=\"false\">\n    <intent-filter>\n    <action android:name=\"android.intent.action.MAIN\"/>\n    <category android:name=\"android.intent.category.LAUNCHER\"/>\n    </intent-filter>\n    <intent-filter>\n    <action android:name=\"android.intent.action.VIEW\"/>\n    <category android:name=\"android.intent.category.BROWSABLE\"/>\n    <category android:name=\"android.intent.category.DEFAULT\"/>\n    <data android:scheme=\"fvm\"/>\n    </intent-filter>\n    </activity>\n    </application>\n\n    ```", "```kt\n    import flash.desktop.NativeApplication;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.InvokeEvent;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 40;\n    traceField.width = stage.stageWidth-40;\n    traceField.height =stage.stageHeight - traceField.y;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    NativeApplication.nativeApplication. addEventListener(InvokeEvent.INVOKE, onInvoke);\n    }\n\n    ```", "```kt\n    protected function onInvoke(e:InvokeEvent):void {\n    traceField.text = \"\";\n    traceField.text = \"Invoke Reason: \" + e.reason + \"\\n\"; traceField.appendText(\"Directory URL: \" + e.currentDirectory. url + \"\\n\\n\");\n    var args:Array = e.arguments;\n    if (arguments.length > 0) {\n    traceField.appendText(\"Message: \" + args.toString() + \"\\n\");\n    }\n    }\n\n    ```", "```kt\n<uses-feature android:name=\"android.hardware.camera\" android:required=\"false\"/>\n<uses-feature android:name=\"android.hardware.camera.autofocus\" android:required=\"false\"/>\n<uses-feature android:name=\"android.hardware.camera.flash\" android:required=\"false\"/>\n\n```", "```kt\n<uses-feature android:name=\"android.hardware.microphone\" android:required=\"false\"/>\n\n```", "```kt\n<uses-feature android:name=\"android.hardware.location\" android:required=\"false\"/>\n<uses-feature android:name=\"android.hardware.location.network\" android:required=\"false\"/>\n<uses-feature android:name=\"android.hardware.location.gps\" android:required=\"false\"/>\n\n```", "```kt\n<uses-feature android:name=\"android.hardware.accelerometer\" android:required=\"false\"/>\n\n```", "```kt\n    <manifest android:installLocation=\"auto\"/>\n\n    ```", "```kt\n    <manifest android:installLocation=\"preferExternal\"/>\n\n    ```", "```kt\n    import com.hurlant.crypto.hash.MD5;\n    import flash.data.SQLConnection;\n    import flash.data.SQLMode;\n    import flash.data.SQLStatement;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.SQLEvent;\n    import flash.filesystem.File;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.utils.ByteArray;\n\n    ```", "```kt\n    private const pass:String = \"AIR@ndr0idIsKo0l\";\n    private var sqlConnection:SQLConnection;\n    private var encryptionPass:ByteArray;\n    private var encryptionKey:ByteArray;\n    private var md5:MD5;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 40;\n    traceField.width = stage.stageWidth-40;\n    traceField.height =stage.stageHeight - traceField.y;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function encryptDB():void {\n    encryptionPass = new ByteArray();\n    encryptionPass.writeUTFBytes(pass);\n    md5 = new MD5();\n    encryptionKey = new ByteArray();\n    encryptionKey = md5.hash(encryptionPass);\n    sqlConnection = new SQLConnection();\n    sqlConnection.addEventListener(SQLEvent.OPEN, dbOpened);\n    sqlConnection.open(File.applicationStorageDirectory. resolvePath(\"encrypted.db\"), SQLMode.CREATE, false, 1024, encryptionKey);\n    }\n\n    ```", "```kt\n    protected function dbOpened(e:SQLEvent):void {\n    traceField.appendText(\"Encrypted DB Created!\\n\\n\");\n    traceField.appendText(\"Pass: \" + pass + \"\\n\\n\");\n    traceField.appendText(\"Key: \" + encryptionKey.toString());\n    }\n\n    ```"]