["```kt\n        <renderMode>auto</renderMode>\n\n        ```", "```kt\n        <renderMode>gpu</renderMode>\n\n        ```", "```kt\n        <renderMode>cpu</renderMode>\n\n        ```", "```kt\n    displayObject.cacheAsBitmap = true;\n    displayObject.cacheAsBitmapMatrix =new Matrix();\n\n    ```", "```kt\n    import flash.desktop.NativeApplication:\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n\n    ```", "```kt\n    protected function registerListeners():void {\n    NativeApplication.nativeApplication.addEventListener(Event. DEACTIVATE, appDeactivate);\n    }\n\n    ```", "```kt\n    protected function appDeactivate(e:Event):void {\n    NativeApplication.nativeApplication.exit();\n    }\n\n    ```", "```kt\n    import flash.desktop.NativeApplication;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.KeyboardEvent;\n    import flash.ui.Keyboard;\n\n    ```", "```kt\n    protected function registerListeners():void {\n    NativeApplication.nativeApplication. addEventListener(KeyboardEvent.KEY_DOWN, onBackPressed);\n    }\n\n    ```", "```kt\nprotected function onBackPressed(e:KeyboardEvent):void {\nif(e.keyCode == Keyboard.BACK){\nNativeApplication.nativeApplication.exit();\n}\n}\n\n```", "```kt\nprotected function onBackPressed(e:KeyboardEvent):void {\nif(e.keyCode == Keyboard.BACK){\nKeyboardEvent.preventDefault();\n}\n}\n\n```", "```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.system.Capabilities;\n    import flash.system.System;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.utils.getTimer;\n\n    ```", "```kt\n    private var prevTime:Number;\n    private var numFrames:Number;\n    private var frameRate:Number;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 40;\n    traceField.width = stage.stageWidth-40;\n    traceField.height = stage.stageHeight - traceField.y;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    prevTime = getTimer();\n    numFrames = 0;\n    this.addEventListener(Event.ENTER_FRAME, onEnterFrame);\n    }\n\n    ```", "```kt\n    protected function onEnterFrame(e:Event):void {\n    traceField.text = \"CPU Arch: \" + Capabilities.cpuArchitecture + \"\\n\";\n    traceField.appendText(\"Manufacturer: \" + Capabilities. manufacturer + \"\\n\");\n    traceField.appendText(\"OS: \" + Capabilities.os + \"\\n\\n\");\n    traceField.appendText(\"Free Memory: \" + System.freeMemory + \"\\n\");\n    traceField.appendText(\"Total Memory: \" + System.totalMemory + \"\\n\\n\");\n    numFrames++;\n    var timeNow:Number = getTimer();\n    var timePast:Number = timeNow - prevTime;\n    if(timePast > 1000){\n    var fpm:Number = numFrames/timePast;\n    frameRate = Math.floor(fpm * 1000);\n    prevTime = timeNow;\n    numFrames = 0;\n    }\n    traceField.appendText(\"Framerate: \" + frameRate);\n    }\n\n    ```", "```kt\nthis.stage.frameRate = 10;\nthis.stage.quality = StageQuality.LOW;\n\n```"]