["```kt\n        display.setStatusBar( display.HiddenStatusBar )\n        local gameGroup = display.newGroup()\n    ```", "```kt\n        local physics = require \"physics\"\n    ```", "```kt\n        local background\n        local ground\n        local charObject\n        local friedEgg\n        local scoreText\n        local eggText\n        local livesText\n        local shade\n        local gameOverScreen\n    ```", "```kt\n        local gameIsActive = false\n        local startDrop -- Timer object\n        local gameLives = 3\n        local gameScore = 0\n        local eggCount = 0\n        local mRand = math.random\n    ```", "```kt\n        local eggDensity = 1.0\n        local eggShape = { -12,-13, 12,-13, 12,13, -12,13 }\n        local panShape = { 15,-13, 65,-13, 65,13, 15,13 }\n    ```", "```kt\n        system.setAccelerometerInterval( 100 )\n        local eggCaughtSound = audio.loadSound( \"friedEgg.wav\" )\n        local gameOverSound = audio.loadSound( \"gameOver.wav\" )\n    ```", "```kt\n    local moveChar = function(event)\n    ```", "```kt\n      charObject.x = display.contentCenterX - (display.contentCenterX* (event.yGravity*3))\n    ```", "```kt\n      if((charObject.x - charObject.width * 0.5) < 0) then charObject.x = charObject.width * 0.5\n      elseif((charObject.x + charObject.width * 0.5) > display.contentWidth) then\n      charObject.x = display.contentWidth - charObject.width * 0.5\n      end\n    end\n    ```", "```kt\ngameScore = 100\nscoreText = display.newText( \"Score: \" .. gameScore, 0, 0, \"Arial\", 45 )\nscoreText:setTextColor( 1, 1, 1)\nscoreText.x = 160; scoreText.y = 100\n```", "```kt\n        local setScore = function( scoreNum )\n    ```", "```kt\n          local newScore = scoreNum\n          gameScore = newScore\n          if gameScore < 0 then gameScore = 0; end\n    ```", "```kt\n          scoreText.text = \"Score: \" .. gameScore\n          scoreText.xScale = 0.5; scoreText.yScale = 0.5\n          scoreText.x = (scoreText.contentWidth * 0.5) + 15\n          scoreText.y = 15\n        end\n    ```", "```kt\n        local drawBackground = function()\n    ```", "```kt\n          background = display.newImageRect( \"bg.png\", 480, 320 )\n          background.x = 240; background.y = 160\n          gameGroup:insert( background )\n    ```", "```kt\n          ground = display.newImageRect( \"grass.png\", 480, 75 )\n          ground.x = 240; ground.y = 325\n          ground.myName = \"ground\"\n          local groundShape = { -285,-18, 285,-18, 285,18, -285,18}\n          physics.addBody( ground, \"static\", { density=1.0, bounce=0, friction=0.5, shape=groundShape } )\n          gameGroup:insert( ground )\n        end\n    ```", "```kt\n        local hud = function()\n    ```", "```kt\n          eggText = display.newText( \"Caught: \" .. eggCount, 0, 0, \"Arial\", 45 )\n          eggText:setTextColor( 1, 1, 1 )\n          eggText.xScale = 0.5; eggText.yScale = 0.5\n          eggText.x = (480 - (eggText.contentWidth * 0.5)) - 15\n          eggText.y = 305\n          gameGroup:insert( eggText )\n    ```", "```kt\n          livesText = display.newText( \"Lives: \" .. gameLives, 0, 0, \"Arial\", 45 )\n          livesText:setTextColor( 1, 1, 1 )--> white\n          livesText.xScale = 0.5; livesText.yScale = 0.5  --> for clear retina display text\n          livesText.x = (480 - (livesText.contentWidth * 0.5)) - 15\n          livesText.y = 15\n          gameGroup:insert( livesText )\n    ```", "```kt\n          scoreText = display.newText( \"Score: \" .. gameScore, 0, 0, \"Arial\", 45 )\n          scoreText:setTextColor( 1, 1, 1 )--> white\n          scoreText.xScale = 0.5; scoreText.yScale = 0.5  --> for clear retina display text\n          scoreText.x = (scoreText.contentWidth * 0.5) + 15\n          scoreText.y = 15\n          gameGroup:insert( scoreText )\n        end\n    ```", "```kt\n        local livesCount = function()\n    ```", "```kt\n          gameLives = gameLives - 1\n          livesText.text = \"Lives: \" .. gameLives\n          livesText.xScale = 0.5; livesText.yScale = 0.5  --> for clear retina display text\n          livesText.x = (480 - (livesText.contentWidth * 0.5)) - 15\n          livesText.y = 15\n          print(gameLives .. \" eggs left\")\n          if gameLives < 1 then\n            callGameOver()\n          end\n        end\n    ```", "```kt\nphysics.addBody( displayObject, [bodyType,] bodyElement1, [bodyElement2, ...] )\n```", "```kt\nlocal hexagon = display.newImage(\"hexagon.png\")\nhexagon.x = hexagon.contentWidth\nhexagon.y = hexagon.contentHeight\nhexagonShape = { -20,-40, 20, -40, 40, 0, 20,40, -20,40, -40,0 }\nphysics.addBody( hexagon, \"static\", { density = 1.0, friction = 0.8, bounce = 0.3, shape=hexagonShape } )\n```", "```kt\n        local createChar = function()\n    ```", "```kt\n    local sheetData = { width=128, height=128, numFrames=4, sheetContentWidth=256, sheetContentHeight=256 }\n    local sheet = graphics.newImageSheet( \"charSprite.png\", sheetData )\n\n        local sequenceData = \n        {\n          { name=\"move\", start=1, count=4, time=400 } \n        }\n\n        charObject = display.newSprite( sheet, sequenceData )\n        charObject:setSequence(\"move\")\n        charObject:play()\n    ```", "```kt\n        charObject.x = 240; charObject.y = 250\n        physics.addBody( charObject, \"static\", { density=1.0, bounce=0.4, friction=0.15, shape=panShape } )\n        charObject.rotation = 0\n        charObject.isHit = false -- When object is not hit\n        charObject.myName = \"character\"\n    ```", "```kt\n        friedEgg = display.newImageRect( \"friedEgg.png\", 40, 23 )\n        friedEgg.alpha = 1.0\n        friedEgg.isVisible = false\n        gameGroup:insert( charObject )\n        gameGroup:insert( friedEgg )\n      end\n    ```", "```kt\nnewBody.isAwake = true\nlocal object = newBody.isAwake\n```", "```kt\nnewBody.isBodyActive = true\nlocal object = newBody.isBodyActive\n```", "```kt\nnewBody.isBullet = true\nlocal object = newBody.isBullet\n```", "```kt\nnewBody.isSensor = true\n```", "```kt\nnewBody.isSleepingAllowed = true\nlocal object = newBody.isSleepingAllowed\n```", "```kt\nnewBody.isFixedRotation = true\nlocal object = newBody.isFixedRotation\n```", "```kt\nnewBody.angularVelocity = 50\nlocal myVelocity = newBody.angularVelocity\n```", "```kt\nnewBody.linearDamping = 5\nlocal object = newBody.linearDamping\n```", "```kt\nnewBody.angularDamping = 5\nlocal object = newBody.angularDamping\n```", "```kt\nnewBody.bodyType = \"kinematic\"\nlocal currentBodyType = newBody.bodyType\n```", "```kt\n        local onEggCollision = function( self, event )\n    ```", "```kt\n          if event.force > 1 and not self.isHit then\n            audio.play( eggCaughtSound )\n    ```", "```kt\n            self.isHit = true\n            print( \"Egg destroyed!\")\n            self.isVisible = false\n            friedEgg.x = self.x; friedEgg.y = self.y\n            friedEgg.alpha = 0\n            friedEgg.isVisible = true\n    ```", "```kt\n            local fadeEgg = function()\n              transition.to( friedEgg, { time=500, alpha=0 } )\n            end\n            transition.to( friedEgg, { time=50, alpha=1.0, onComplete=fadeEgg } )\n            self.parent:remove( self )\n            self = nil\n    ```", "```kt\n            if event.other.myName == \"character\" then\n              eggCount = eggCount + 1\n              eggText.text = \"Caught: \" .. eggCount\n              eggText.xScale = 0.5; eggText.yScale = 0.5  --> for clear retina display text\n              eggText.x = (480 - (eggText.contentWidth * 0.5)) - 15\n              eggText.y = 305\n              print(\"egg caught\")\n              local newScore = gameScore + 500\n              setScore( newScore )\n            elseif event.other.myName == \"ground\" then\n              livesCount()\n              print(\"ground hit\")\n            end\n          end\n        end\n    ```", "```kt\n        local eggDrop = function()\n    ```", "```kt\n          local egg = display.newImageRect( \"egg.png\", 26, 30 )\n          egg.x = 240 + mRand( 120 ); egg.y = -100\n          egg.isHit = false\n          physics.addBody( egg, \"dynamic\",{ density=eggDensity, bounce=0, friction=0.5, shape=eggShape } )\n          egg.isFixedRotation = true\n          gameGroup:insert( egg )\n    ```", "```kt\n          egg.postCollision = onEggCollision\n          egg:addEventListener( \"postCollision\", egg )\n        end\n    ```", "```kt\n        local eggTimer = function()\n          startDrop = timer.performWithDelay( 1000, eggDrop, 0 )\n        end\n    ```", "```kt\n          if gameLives < 1 then\n            timer.cancel( startDrop )\n            print(\"timer cancelled\")\n          end\n    ```", "```kt\n        local callGameOver = function()\n    ```", "```kt\n          audio.play( gameOverSound )\n          gameIsActive = false\n          physics.pause()\n    ```", "```kt\n          shade = display.newRect( 0, 0, 570, 320 )\n          shade:setFillColor( 0, 0, 0 )\n          shade.x = 240; shade.y = 160\n          shade.alpha = 0  -- Getting shade ready to display at game end\n    ```", "```kt\n          gameOverScreen = display.newImageRect( \"gameOver.png\", 400, 300 )\n          local newScore = gameScore\n          setScore( newScore )\n          gameOverScreen.x = 240; gameOverScreen.y = 160\n          gameOverScreen.alpha = 0\n          gameGroup:insert( shade )\n          gameGroup:insert( gameOverScreen )\n          transition.to( shade, { time=200, alpha=0.65 } )\n          transition.to( gameOverScreen, { time=500, alpha=1 } )\n    ```", "```kt\n          scoreText.isVisible = false\n          scoreText.text = \"Score: \" .. gameScore\n          scoreText.xScale = 0.5; scoreText.yScale = 0.5  --> for clear retina display text\n          scoreText.x = 240\n          scoreText.y = 160\n          scoreText:toFront()  -- Moves to front of current display group\n          timer.performWithDelay( 0,\n            function() scoreText.isVisible = true; end, 1 )\n        end\n    ```", "```kt\n        local gameActivate = function()\n          gameIsActive = true\n        end\n    ```", "```kt\n        local gameStart = function()\n    ```", "```kt\n          physics.start( true )\n          physics.setGravity( 0, 9.8 )\n    ```", "```kt\n          drawBackground()\n          createChar()\n          eggTimer()\n          hud()\n          gameActivate()\n          Runtime:addEventListener(\"accelerometer\", moveChar)\n        end\n    ```", "```kt\n        gameStart()\n        return gameGroup\n    ```"]