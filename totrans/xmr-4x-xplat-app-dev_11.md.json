["```kt\n<StackLayout Orientation=\"Vertical\" Padding=\"10,20,10,10\"> \n    <Label Text=\"My Label\" XAlign=\"Center\" /> \n    <Button Text=\"My Button\" /> \n    <Entry Text=\"My Entry\" /> \n    <Image Source=\"https://www.xamarin.com/content/images/ \n      pages/branding/assets/xamagon.png\" /> \n    <Switch IsToggled=\"true\" /> \n    <Stepper Value=\"10\" /> \n</StackLayout> \n\n```", "```kt\npublic class UIDemoPageFromCode : ContentPage \n{ \n  public UIDemoPageFromCode() \n  { \n    var layout = new StackLayout  \n    { \n      Orientation = StackOrientation.Vertical, \n      Padding = new Thickness(10, 20, 10, 10), \n    }; \n\n    layout.Children.Add(new Label  \n    { \n      Text = \"My Label\", \n      XAlign = TextAlignment.Center, \n    }); \n\n    layout.Children.Add(new Button  \n    { \n      Text = \"My Button\", \n    }); \n\n    layout.Children.Add(new Image  \n    { \n      Source = \"https://www.xamarin.com/content/images/pages/ \n        branding/assets/xamagon.png\", \n    }); \n\n    layout.Children.Add(new Switch  \n    { \n      IsToggled = true, \n    }); \n\n    layout.Children.Add(new Stepper  \n    { \n      Value = 10, \n    }); \n\n    Content = layout; \n  } \n} \n\n```", "```kt\npublic class BaseViewModel : BindableObject \n{ \n  protected readonly IWebService service =  \n    DependencyService.Get<IWebService>(); \n  protected readonly ISettings settings =  \n    DependencyService.Get<ISettings>(); \n\n  bool isBusy = false; \n\n  public bool IsBusy \n  { \n    get { return isBusy; } \n    set \n    { \n      isBusy = value; \n      OnPropertyChanged(); \n    } \n  } \n} \n\n```", "```kt\n[assembly: Dependency(typeof(XamSnap.FakeWebService))] \n[assembly: Dependency(typeof(XamSnap.FakeSettings))] \n\n```", "```kt\npublic Command LoginCommand { get; set; } \n\n```", "```kt\nConversation[] conversations; \n\npublic Conversation[] Conversations \n{ \n  get { return conversations; } \n  set \n  { \n    conversations = value; \n    OnPropertyChanged(); \n  } \n} \n\n```", "```kt\npublic partial class LoginPage : ContentPage \n{     \n  readonly LoginViewModel loginViewModel = new LoginViewModel(); \n\n  public LoginPage() \n  { \n    Title = \"XamSnap\"; \n    BindingContext = loginViewModel; \n\n    loginViewModel.LoginCommand = new Command(async () => \n    { \n      try \n      { \n        await loginViewModel.Login(); \n        await Navigation.PushAsync(new ConversationsPage()); \n      } \n      catch (Exception exc) \n      { \n        await DisplayAlert(\"Oops!\", exc.Message, \"Ok\");                 \n      } \n    }); \n\n    InitializeComponent(); \n  } \n} \n\n```", "```kt\n<StackLayout Orientation=\"Vertical\" Padding=\"10,10,10,10\"> \n    <Entry  \n        Placeholder=\"Username\" Text=\"{Binding UserName}\" /> \n    <Entry  \n        Placeholder=\"Password\" Text=\"{Binding Password}\"  \n        IsPassword=\"true\" /> \n    <Button  \n        Text=\"Login\" Command=\"{Binding LoginCommand}\" /> \n    <ActivityIndicator  \n        IsVisible=\"{Binding IsBusy}\"  \n        IsRunning=\"true\" /> \n</StackLayout> \n\n```", "```kt\npublic partial class ConversationsPage : ContentPage \n{     \n  readonly MessageViewModel messageViewModel =  \n    new MessageViewModel(); \n\n  public ConversationsPage() \n  { \n    Title = \"Conversations\"; \n    BindingContext = messageViewModel; \n\n    InitializeComponent(); \n  } \n\n  protected async override void OnAppearing() \n  { \n    try \n    { \n      await messageViewModel.GetConversations(); \n    } \n    catch (Exception exc) \n    { \n      await DisplayAlert(\"Oops!\", exc.Message, \"Ok\"); \n    } \n  } \n} \n\n```", "```kt\n<ListView ItemsSource=\"{Binding Conversations}\"> \n    <ListView.ItemTemplate> \n        <DataTemplate> \n            <TextCell Text=\"{Binding UserName}\" /> \n        </DataTemplate> \n    </ListView.ItemTemplate> \n</ListView> \n\n```", "```kt\nMainPage = new NavigationPage(new LoginPage());  \n\n```"]