["```kt\n//Gain reference to speak button \nButton speak = (Button) findViewById(R.id.speech_btn); \n//Set up click listener \nspeak.setOnClickListener(\n       new View.OnClickListener() { \n       @Override \n       public void onClick(View v) { \n             //Speech recognition does not currently work on simulated devices, \n             //it is the user attempting to run the app in a simulated device \n             //they will get a Toast \n             if(\"generic\".equals(Build.BRAND. toLowerCase())){ \n                 Toast toast = Toast.makeText(getApplicationCon text(),\"ASR is not supported on virtual devices\", Toast.LENGTH_SHORT); \n                toast.show(); \n                Log.d(LOGTAG, \"ASR attempt on virtual device\"); \n             } \n             else{ \n                setRecognitionParams(); //Read parameters from GUI \n                listen(); //Set up the recognizer and start listening \n             } \n       } \n});\n```", "```kt\nIntent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n// Specify language model\nintent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, languageModel);\n// Specify how many results to receive. Results listed in order of confidence\nintent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, numberRecoResults);\n// Start listening\nstartActivityForResult(intent, ASR_CODE);\n```", "```kt\nprotected void onActivityResult(int requestCode, int resultCode, Intent data) { \n    if (requestCode == ASR_CODE) { \n        if (resultCode == RESULT_OK) { \n           //Retrieves the N-best list and the confidences from the ASR result \n           ArrayList<String> nBestList = \n             data.getStringArrayListE xtra(RecognizerIntent.EXTRA_RESULTS); \n           float[] nBestConfidences = \n             data.getFloatArrayExtra(RecognizerIntent.EXTRA_CONFIDENCE_SCORES;\n\n           /** Creates a collection of strings, each one with a recognition result and its confidence, e.g. \"Phrase matched (conf: 0.5)\" */\n           ArrayList<String> nBestView = new ArrayList<String>(); \n\n           for(int i=0; i<nBestList.size(); i++){ \n               if(nBestConfidences[i]<0) \n                 nBestView.add(nBestList.get(i) + \" (no confidence value available)\"); \n               else \n                 nBestView.add(nBestList.get(i) + \" (conf: \" + nBestConfidences[i] + \")\"); \n           } \n\n           //Includes the collection in the listview of the GUI \n           setListView(nBestView); \n\n           //Adds information to log \n           Log.i(LOGTAG, \"There were : \"+ nBestView. size()+\" recognition results\"); \n       } \n       else { \n           //Reports error in log \n           Log.e(LOGTAG, \"Recognition was not successful\"); \n      } \n   } \n} \n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\" />\n```", "```kt\nList<ResolveInfo> intActivities = packManager.queryIntentActivities(new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH), 0);\n\nif (intActivities.size() != 0) {\n    myASR = SpeechRecognizer.createSpeechRecognizer(ctx);\n    myASR.setRecognitionListener(this);\n}\n```", "```kt\npublic void listen(String languageModel, int maxResults) throws Exception{ \n\n      if((languageModel.equals(RecognizerIntent.LANGUAGE_MODEL_FREE_FORM) || languageModel.equals(RecognizerIntent.LANGUAGE_MODEL_WEB_SEARCH)) && (maxResults>=0){ \n          Intent intent = \n                new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH); \n          // Specify the calling package to identify the application \n          intent.putExtra(RecognizerIntent.EXTRA_CALLING_PACKAGE, ctx. getPackageName()); \n\n          // Specify language model\tintent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, \n          languageModel); \n\n          // Specify how many results to receive. \n          // Results listed in order of confidence \n          intent.putExtra(RecognizerIntent.EXTRA_MAX_RESULTS, maxResults); \n\n          // Start recognition \n          myASR.startListening(intent); \n      }\n      else \n          throw new Exception(\"Invalid parameters for listen method\"); \n}\n```", "```kt\npublic void onResults(Bundle results) {\nprocessAsrResults(results.getStringArrayList(SpeechRecognizer.RESULTS_RECOGNITION),results.getFloatArray(SpeechRecognizer.CONFIDENCE_SCORES));\n}\n```", "```kt\nButton button = (Button) findViewById(R.id.speech_btn); button.setText(getResources().getString(R.string.speechbtn_listening));\nbutton.setBackgroundColor(getResources().getColor(R.color.speechbtn_listening));\n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\n```"]