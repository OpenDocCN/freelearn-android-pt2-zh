["```kt\n    import flash.display.Sprite;\n    import flash.display.Stage;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.media.Camera;\n    import flash.media.CameraUI;\n    import flash.media.Microphone;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 44;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0x333333;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.mouseEnabled = false;\n    traceField.width = stage.stageWidth;\n    traceField.height = stage.stageHeight;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function checkCamera():void {\n    traceField.appendText(\"Camera: \" + Camera.isSupported + \"\\n\");\n    traceField.appendText(\"CameraUI: \" + CameraUI.isSupported + \"\\n\");\n    traceField.appendText(\"Microphone: \" + Microphone.isSupported + \"\\n\");\n    }\n\n    ```", "```kt\n    import flash.display.BitmapData;\n    import flash.display.Sprite;\n    import flash.display.Stage;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.TouchEvent;\n    import flash.media.Camera;\n    import flash.media.CameraRoll;\n    import flash.media.Video;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n\n    ```", "```kt\n    private var video:Video;\n    private var camera:Camera;\n    private var capture:BitmapData;\n    private var cameraRoll:CameraRoll;\n    private var videoHolder:Sprite;\n\n    ```", "```kt\n    protected function setupVideo():void {\n    videoHolder = new Sprite();\n    videoHolder.x = stage.stageWidth/2;\n    videoHolder.y = stage.stageHeight/2;\n    video = new Video(360, 480);\n    videoHolder.addChild(video);\n    video.x = -180;\n    video.y = -240;\n    videoHolder.rotation = 90;\n    addChild(videoHolder);\n    }\n\n    ```", "```kt\n    protected function setupCamera():void {\n    camera = Camera.getCamera();\n    camera.setMode(480, 360, 24);\n    video.attachCamera(camera);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    stage.addEventListener(TouchEvent.TOUCH_TAP, saveImage);\n    }\n\n    ```", "```kt\n    protected function saveImage(e:TouchEvent):void {\n    capture = new BitmapData(360, 480);\n    capture.draw(video);\n    cameraRoll = new CameraRoll();\n    if(CameraRoll.supportsAddBitmapData){\n    cameraRoll.addBitmapData(capture);\n    }\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.events.MediaEvent;\n    import flash.events.TouchEvent;\n    import flash.media.CameraUI;\n    import flash.media.MediaType;\n    import flash.media.MediaPromise;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var camera:CameraUI;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 22;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0xFFFFFF;\n    traceField = newTextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.mouseEnabled = false;\n    traceField.width = stage.stageWidth;\n    traceField.height = stage.stageHeight;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupCamera():void {\n    if(CameraUI.isSupported) {\n    camera = new CameraUI();\n    registerListeners();\n    }else{\n    traceField.appendText(\"CameraUI is not supported...\");\n    }\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    camera.addEventListener(MediaEvent.COMPLETE, photoReady);\n    stage.addEventListener(TouchEvent.TOUCH_TAP, launchCamera);\n    }\n\n    ```", "```kt\n    protected function launchCamera(e:TouchEvent):void {\n    camera.launch(MediaType.IMAGE);\n    }\n\n    ```", "```kt\n    protected function photoReady(e:MediaEvent):void {\n    var promise:MediaPromise = e.data;\n    traceField.appendText(\"mediaType: \" + promise.mediaType + \"\\n\");\n    traceField.appendText(\"relativePath: \" + promise.relativePath + \"\\n\");\n    traceField.appendText(\"creationDate: \" + promise.file.creationDate + \"\\n\");\n    traceField.appendText(\"extension: \" + promise.file.extension + \"\\n\");\n    traceField.appendText(\"name: \" + promise.file.name + \"\\n\");\n    traceField.appendText(\"size: \" + promise.file.size + \"\\n\");\n    traceField.appendText(\"type: \" + promise.file.type + \"\\n\");\n    traceField.appendText(\"nativePath: \" + promise.file.nativePath + \"\\n\");\n    traceField.appendText(\"url: \" + promise.file.url + \"\\n\");\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.events.MediaEvent;\n    import flash.events.TouchEvent;\n    import flash.media.CameraUI;\n    import flash.media.MediaPromise;\n    import flash.media.MediaType;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n\n    ```", "```kt\n    private var camera:CameraUI;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 22;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0xFFFFFF;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.mouseEnabled = false;\n    traceField.width = stage.stageWidth;\n    traceField.height = stage.stageHeight;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupCamera():void {\n    if(CameraUI.isSupported) {\n    camera = new CameraUI();\n    registerListeners();\n    }else{\n    traceField.appendText(\"CameraUI is not supported...\");\n    }\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    camera.addEventListener(MediaEvent.COMPLETE, videoReady);\n    stage.addEventListener(TouchEvent.TOUCH_TAP, launchCamera);\n    }\n\n    ```", "```kt\n    protected function launchCamera(e:TouchEvent):void {\n    camera.launch(MediaType.VIDEO);\n    }\n\n    ```", "```kt\n    protected function videoReady(e:MediaEvent):void {\n    var promise:MediaPromise = e.data;\n    traceField.appendText(\"mediaType: \" + promise.mediaType + \"\\n\");\n    traceField.appendText(\"relativePath: \" + promise.relativePath + \"\\n\");\n    traceField.appendText(\"creationDate: \" + promise.file.creationDate + \"\\n\");\n    traceField.appendText(\"extension: \" + promise.file.extension + \"\\n\");\n    traceField.appendText(\"name: \" + promise.file.name + \"\\n\");\n    traceField.appendText(\"size: \" + promise.file.size + \"\\n\");\n    traceField.appendText(\"type: \" + promise.file.type + \"\\n\");\n    traceField.appendText(\"nativePath: \" + promise.file.nativePath + \"\\n\");\n    traceField.appendText(\"url: \" + promise.file.url + \"\\n\");\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.Stage;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.SampleDataEvent;\n    import flash.media.Microphone;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var mic:Microphone;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 44;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0x333333;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.mouseEnabled = false;\n    traceField.width = stage.stageWidth;\n    traceField.height = stage.stageHeight;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupMic():void {\n    mic = Microphone.getMicrophone();\n    mic.setSilenceLevel(0);\n    mic.rate = 44;\n    mic.setLoopBack(false);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    mic.addEventListener(SampleDataEvent.SAMPLE_DATA, onMicData);\n    }\n\n    ```", "```kt\n    public function onMicData(e:SampleDataEvent):void {\n    traceField.text = \"\";\n    traceField.appendText(\"activityLevel: \" + e.target.activityLevel + \"\\n\");\n    traceField.appendText(\"codec: \" + e.target.codec + \"\\n\");\n    traceField.appendText(\"gain: \" + e.target.gain + \"\\n\");\n    traceField.appendText(\"bytesAvailable: \" + e.data.bytesAvailable + \"\\n\");\n    traceField.appendText(\"length: \" + e.data.length + \"\\n\");\n    traceField.appendText(\"position: \" + e.data.position + \"\\n\");\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.Stage;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.SampleDataEvent;\n    import flash.events.TouchEvent;\n    import flash.media.Microphone;\n    import flash.media.Sound;\n    import flash.media.SoundChannel;\n    import flash.utils.ByteArray;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var mic:Microphone;\n    private var micRec:ByteArray;\n    private var output:Sound;\n    private var outputChannel:SoundChannel;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 44;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0x333333;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.mouseEnabled = false;\n    traceField.width = stage.stageWidth;\n    traceField.height = stage.stageHeight;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupMic():void {\n    mic = Microphone.getMicrophone();\n    mic.setSilenceLevel(0);\n    mic.rate = 44;\n    mic.setLoopBack(false);\n    micRec = new ByteArray();\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    stage.addEventListener(TouchEvent.TOUCH_TAP, startRecording);\n    traceField.text = \"Tap to Record\";\n    }\n\n    ```", "```kt\n    protected function startRecording(e:TouchEvent):void {\n    stage.removeEventListener(TouchEvent.TOUCH_TAP, startRecording);\n    stage.addEventListener(TouchEvent.TOUCH_TAP, stopRecording);\n    mic.addEventListener(SampleDataEvent.SAMPLE_DATA, onMicData);\n    traceField.text = \"Recording Audio \\nTap to Stop\";\n    }\n\n    ```", "```kt\n    protected function onMicData(e:SampleDataEvent):void {\n    micRec.writeBytes(e.data);\n    }\n\n    ```", "```kt\n    protected function stopRecording(e:TouchEvent):void {\n    mic.removeEventListener(SampleDataEvent.SAMPLE_DATA, onMicData);\n    stage.removeEventListener(TouchEvent.TOUCH_TAP, stopRecording);\n    stage.addEventListener(TouchEvent.TOUCH_TAP, playBackAudio);\n    traceField.text = \"Tap to Playback\";\n    }\n\n    ```", "```kt\n    protected function playBackAudio(e:TouchEvent):void {\n    stage.removeEventListener(TouchEvent.TOUCH_TAP, playBackAudio);\n    micRec.position = 0;\n    output = new Sound();\n    output.addEventListener(SampleDataEvent.SAMPLE_DATA, onSampleDataRequest);\n    outputChannel = output.play();\n    traceField.text = \"Playing Audio\";\n    }\n\n    ```", "```kt\n    protected function onSampleDataRequest(e:SampleDataEvent):void {\n    var out:ByteArray = new ByteArray();\n    for(var i:int = 0; i < 8192 && micRec.bytesAvailable; i++ ) {\n    var micsamp:Number = micRec.readFloat();\n    // left channel\n    out.writeFloat(micsamp);\n    // right channel\n    out.writeFloat(micsamp);\n    }\n    e.data.writeBytes(out);\n    }\n\n    ```"]