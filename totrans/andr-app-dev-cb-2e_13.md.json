["```kt\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\"/>\n    ```", "```kt\n    compile 'com.google.android.gms:play-services:8.4.0'\n    ```", "```kt\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Get Location\"\n        android:layout_centerInParent=\"true\"\n        android:onClick=\"getLocation\"/>\n    ```", "```kt\n    GoogleApiClient mGoogleApiClient;\n    TextView mTextView;\n    Button mButton;\n    ```", "```kt\n    GoogleApiClient.ConnectionCallbacks mConnectionCallbacks = new GoogleApiClient.ConnectionCallbacks() {\n        @Override\n        public void onConnected(Bundle bundle) {\n            mButton.setEnabled(true);\n        }\n        @Override\n        public void onConnectionSuspended(int i) {}\n    };\n    ```", "```kt\n    GoogleApiClient.OnConnectionFailedListener mOnConnectionFailedListener = new GoogleApiClient.OnConnectionFailedListener() {\n        @Override\n        public void onConnectionFailed(ConnectionResult connectionResult) {\n            Toast.makeText(MainActivity.this, connectionResult.toString(), Toast.LENGTH_LONG).show();\n        }\n    };\n    ```", "```kt\n    mTextView = (TextView) findViewById(R.id.textView);\n    mButton = (Button) findViewById(R.id.button);\n    mButton.setEnabled(false);\n    setupGoogleApiClient();\n    ```", "```kt\n    protected synchronized void setupGoogleApiClient() {\n        mGoogleApiClient = new GoogleApiClient.Builder(this)\n            .addConnectionCallbacks(mConnectionCallbacks)\n            .addOnConnectionFailedListener(mOnConnectionFailedListener)\n            .addApi(LocationServices.API)\n            .build();\n        mGoogleApiClient.connect();\n    }\n    ```", "```kt\n    public void getLocation(View view) {\n        try {\n            Location lastLocation = LocationServices.FusedLocationApi.getLastLocation(\n                mGoogleApiClient);\n            if (lastLocation != null) {\n                mTextView.setText(\n                    DateFormat.getTimeInstance().format(lastLocation.getTime()) + \"\\n\" + \"Latitude=\"+lastLocation.getLatitude() + \"\\n\" + \"Longitude=\" + lastLocation.getLongitude());\n            } else {\n                Toast.makeText(MainActivity.this, \"null\", Toast.LENGTH_LONG).show();\n            }\n        }\n        catch (SecurityException e) {e.printStackTrace();}\n    }\n    ```", "```kt\n<uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n```", "```kt\n    private final int REQUEST_RESOLVE_GOOGLE_CLIENT_ERROR=1;\n    boolean mResolvingError;\n    ```", "```kt\n    private void showGoogleAPIErrorDialog(int errorCode) {\n      GoogleApiAvailability googleApiAvailability = GoogleApiAvailability.getInstance();\n      Dialog errorDialog = googleApiAvailability.getErrorDialog(this, errorCode, REQUEST_RESOLVE_GOOGLE_CLIENT_ERROR);\n      errorDialog.show();\n    }\n    ```", "```kt\n    @Override\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n      if (requestCode == REQUEST_RESOLVE_GOOGLE_CLIENT_ERROR) {\n        mResolvingError = false;\n        if (resultCode == RESULT_OK && !mGoogleApiClient.isConnecting() && !mGoogleApiClient.isConnected()) {\n            mGoogleApiClient.connect();\n        }\n      }\n    }\n    ```", "```kt\n    if (mResolvingError) {\n      return;\n    } else if (connectionResult.hasResolution()) {\n      mResolvingError = true;\n      try {\n        connectionResult.startResolutionForResult(MainActivity.this, REQUEST_RESOLVE_GOOGLE_CLIENT_ERROR);\n      } catch (IntentSender.SendIntentException e) {\n        mGoogleApiClient.connect();\n      }\n    } else {\n      showGoogleAPIErrorDialog(connectionResult.getErrorCode());\n    }\n    ```", "```kt\nconnectionResult.hasResolution()\n```", "```kt\nErrorDialogFragment errorFragment = new ErrorDialogFragment();\nBundle args = new Bundle();\nargs.putInt(\"dialog_error\", errorCode);\nerrorFragment.setArguments(args);\nerrorFragment.show(getSupportFragmentManager(), \"errordialog\");\n```", "```kt\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    ```", "```kt\n    compile 'com.google.android.gms:play-services:8.4.0'\n    ```", "```kt\n    <TextView\n        android:id=\"@+id/textView\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n    ```", "```kt\n    GoogleApiClient mGoogleApiClient;\n    LocationRequest mLocationRequest;\n    TextView mTextView;\n    ```", "```kt\n    LocationListener  mLocationListener = new LocationListener() {\n        @Override\n        public void onLocationChanged(Location location) {\n            if (location != null) {\n                mTextView.setText(\n                    DateFormat.getTimeInstance().format(location.getTime()) + \"\\n\" + \"Latitude=\"+location.getLatitude()+\"\\n\" + \"Longitude=\"+location.getLongitude());\n            }\n        }\n    };\n    ```", "```kt\n    GoogleApiClient.ConnectionCallbacks mConnectionCallbacks = new GoogleApiClient.ConnectionCallbacks() {\n        @Override\n        public void onConnected(Bundle bundle) {\n            Log.i(\"onConnected()\", \"start\");\n            try {\n                LocationServices.FusedLocationApi.requestLocationUpdates(\n                    mGoogleApiClient, mLocationRequest, mLocationListener);\n            } catch (SecurityException e) {\n                Log.i(\"onConnected()\",\"SecurityException: \"+e.getMessage());\n            }\n        }\n        @Override\n        public void onConnectionSuspended(int i) {}\n    };\n    ```", "```kt\n    GoogleApiClient.OnConnectionFailedListener mOnConnectionFailedListener = new GoogleApiClient.OnConnectionFailedListener() {\n        @Override\n        public void onConnectionFailed(ConnectionResult connectionResult) {\n            Toast.makeText(MainActivity.this, connectionResult.toString(), Toast.LENGTH_LONG).show();\n            Log.i(\"onConnected()\", \"SecurityException: \" +connectionResult.toString());\n        }\n    };\n    ```", "```kt\n    mTextView = (TextView) findViewById(R.id.textView);\n    setupLocationRequest();\n    ```", "```kt\n    protected synchronized void setupLocationRequest() {\n        mLocationRequest = new LocationRequest();\n        mLocationRequest.setInterval(10000);\n        mLocationRequest.setFastestInterval(10000);\n        mLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY);\n        mGoogleApiClient = new GoogleApiClient.Builder(this)\n                .addConnectionCallbacks(mConnectionCallbacks)\n                .addOnConnectionFailedListener(mOnConnectionFailedListener)\n                .addApi(LocationServices.API)\n                .build();\n        mGoogleApiClient.connect();\n    }\n    ```", "```kt\nmLocationRequest = new LocationRequest();\nmLocationRequest.setInterval(10000);\nmLocationRequest.setFastestInterval(10000);\nmLocationRequest.setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)\n```", "```kt\nLocationServices.FusedLocationApi.removeLocationUpdates(\n    mGoogleApiClient, mLocationListener);\n```", "```kt\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\"/>\n    ```", "```kt\n    compile 'com.google.android.gms:play-services:8.4.0'\n    ```", "```kt\n    public class GeofenceIntentService extends IntentService {\n    ```", "```kt\n    public GeofenceIntentService() {\n        super(\"GeofenceIntentService\");\n    }\n    ```", "```kt\n    protected void onHandleIntent(Intent intent) {\n        GeofencingEvent geofencingEvent = GeofencingEvent.fromIntent(intent);\n        if (geofencingEvent.hasError()) {\n            Toast.makeText(getApplicationContext(), \"Geofence error code= \" + geofencingEvent.getErrorCode(), Toast.LENGTH_SHORT).show();\n            return;\n        }\n        int geofenceTransition = geofencingEvent.getGeofenceTransition();\n        if (geofenceTransition == Geofence.GEOFENCE_TRANSITION_DWELL) {\n            sendNotification();\n        }\n    }\n    ```", "```kt\n    private void sendNotification() {\n        Log.i(\"GeofenceIntentService\", \"sendNotification()\");\n        Uri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)\n                .setSmallIcon(R.mipmap.ic_launcher)\n                .setContentTitle(\"Geofence Alert\")\n                .setContentText(\"GEOFENCE_TRANSITION_DWELL\")\n                .setSound(notificationSoundUri)\n                .setLights(Color.BLUE, 500, 500);\n        NotificationManager notificationManager = (NotificationManager) getApplicationContext().getSystemService(Context.NOTIFICATION_SERVICE);\n        notificationManager.notify(0, notificationBuilder.build());\n    }\n    ```", "```kt\n    <service android:name=\".GeofenceIntentService\"/>\n    ```", "```kt\n    private final int MINIMUM_RECOMENDED_RADIUS=100;\n    GoogleApiClient mGoogleApiClient;\n    PendingIntent mGeofencePendingIntent;\n    ```", "```kt\n    ResultCallback mResultCallback = new ResultCallback() {\n        @Override\n        public void onResult(Result result) {\n            Log.i(\"onResult()\", \"result: \" + result.getStatus().toString());\n        }\n    };\n    ```", "```kt\n    GoogleApiClient.ConnectionCallbacks mConnectionCallbacks = new GoogleApiClient.ConnectionCallbacks() {\n        @Override\n        public void onConnected(Bundle bundle) {\n            try {\n              LocationServices.GeofencingApi.addGeofences(\n                  mGoogleApiClient,\n                  createGeofencingRequest(),\n                  getGeofencePendingIntent()\n              ).setResultCallback(mResultCallback);\n            } catch (SecurityException e) {\n                Log.i(\"onConnected()\", \"SecurityException: \" + e.getMessage());\n            }\n        }\n        @Override\n        public void onConnectionSuspended(int i) {}\n    };\n    ```", "```kt\n    GoogleApiClient.OnConnectionFailedListener mOnConnectionFailedListener = new GoogleApiClient.OnConnectionFailedListener() {\n        @Override\n        public void onConnectionFailed(ConnectionResult connectionResult) {\n            Log.i(\"onConnectionFailed()\", \"connectionResult: \" +connectionResult.toString());\n        }\n    };\n    ```", "```kt\n      setupGoogleApiClient();\n    ```", "```kt\n    protected synchronized void setupGoogleApiClient() {\n        mGoogleApiClient = new GoogleApiClient.Builder(this)\n            .addConnectionCallbacks(mConnectionCallbacks)\n            .addOnConnectionFailedListener(mOnConnectionFailedListener)\n            .addApi(LocationServices.API)\n            .build();\n        mGoogleApiClient.connect();\n    }\n    ```", "```kt\n    protected synchronized void setupGoogleApiClient() {\n        mGoogleApiClient = new GoogleApiClient.Builder(this)\n            .addConnectionCallbacks(mConnectionCallbacks)\n            .addOnConnectionFailedListener(mOnConnectionFailedListener)\n            .addApi(LocationServices.API)\n            .build();\n        mGoogleApiClient.connect();\n    }\n    ```", "```kt\n    private PendingIntent getGeofencePendingIntent() {\n        if (mGeofencePendingIntent != null) {\n            return mGeofencePendingIntent;\n        }\n        Intent intent = new Intent(this, GeofenceIntentService.class);\n        return PendingIntent.getService(this, 0, intent, PendingIntent.FLAG_UPDATE_CURRENT);\n    }\n    ```", "```kt\n    private List createGeofenceList() {\n        List<Geofence> geofenceList = new ArrayList<Geofence>();\n        geofenceList.add(new Geofence.Builder()\n                .setRequestId(\"GeofenceLocation\")\n                .setCircularRegion(\n                        37.422006, //Latitude\n                        -122.084095, //Longitude\n                        MINIMUM_RECOMENDED_RADIUS)\n                .setLoiteringDelay(30000)\n                .setExpirationDuration(Geofence.NEVER_EXPIRE)\n                .setTransitionTypes(Geofence.GEOFENCE_TRANSITION_DWELL)\n        .build());\n        return geofenceList;\n    }\n    ```", "```kt\n    private GeofencingRequest createGeofencingRequest() {\n        GeofencingRequest.Builder builder = new GeofencingRequest.Builder();\n        builder.setInitialTrigger(GeofencingRequest.INITIAL_TRIGGER_DWELL);\n        builder.addGeofences(createGeofenceList());\n        return builder.build();\n    }\n    ```", "```kt\n.setRequestId(\"GeofenceLocation\")\n.setCircularRegion(\n        37.422006, //Latitude\n        -122.084095, //Longitude\n        MINIMUM_RECOMENDED_RADIUS)\n.setLoiteringDelay(30000)\n.setExpirationDuration(Geofence.NEVER_EXPIRE)\n.setTransitionTypes(Geofence.GEOFENCE_TRANSITION_DWELL)\n```", "```kt\n.setTransitionTypes(Geofence.GEOFENCE_TRANSITION_ENTER | Geofence.GEOFENCE_TRANSITION_EXIT)\n```", "```kt\nLocationServices.GeofencingApi.removeGeofences(\n    mGoogleApiClient,\n    getGeofencePendingIntent()\n).setResultCallback(mResultCallback);\n```"]