["```kt\n    <ToggleButton\n        android:id=\"@+id/buttonLights\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Lights\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_above=\"@+id/buttonAction\"\n        android:onClick=\"clickLights\" />\n    <Button\n        android:id=\"@+id/buttonAction\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Action\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"clickVibrate\"/>\n    <Button\n        android:id=\"@+id/buttonSound\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Sound\"\n        android:layout_below=\"@+id/buttonAction\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"clickSound\"/>\n    ```", "```kt\n    <uses-permission android:name=\"android.permission.VIBRATE\"></uses-permission>\n    ```", "```kt\n    private CameraManager mCameraManager;\n    private String mCameraId=null;\n    private ToggleButton mButtonLights;\n    ```", "```kt\n    private String getCameraId() {\n        try {\n            String[] ids = mCameraManager.getCameraIdList();\n            for (String id : ids) {\n                CameraCharacteristics c = mCameraManager.getCameraCharacteristics(id);\n                Boolean flashAvailable = c.get(CameraCharacteristics.FLASH_INFO_AVAILABLE);\n                Integer facingDirection = c.get(CameraCharacteristics.LENS_FACING);\n                if (flashAvailable != null && flashAvailable && facingDirection != null && facingDirection == CameraCharacteristics.LENS_FACING_BACK) {\n                    return id;\n                }\n            }\n        } catch (CameraAccessException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n    ```", "```kt\n    mButtonLights = (ToggleButton)findViewById(R.id.buttonLights);\n    if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n        mCameraManager = (CameraManager) this.getSystemService(Context.CAMERA_SERVICE);\n        mCameraId = getCameraId();\n        if (mCameraId==null) {\n            mButtonLights.setEnabled(false);\n        } else {\n            mButtonLights.setEnabled(true);\n        }\n    } else {\n        mButtonLights.setEnabled(false);\n    }\n    ```", "```kt\n    public void clickLights(View view) {\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            try {\n                mCameraManager.setTorchMode(mCameraId, mButtonLights.isChecked());\n            } catch (CameraAccessException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n\n    public void clickVibrate(View view) {\n        ((Vibrator)getSystemService(VIBRATOR_SERVICE)).vibrate(1000);\n    }\n\n    public void clickSound(View view) {\n        Uri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n        Ringtone ringtone = RingtoneManager.getRingtone(getApplicationContext(), notificationSoundUri);\n        ringtone.play();\n    }\n    ```", "```kt\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M){}\n```", "```kt\nUri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n```", "```kt\n<uses-permission android:name=\"android.permission.VIBRATE\"></uses-permission>\n```", "```kt\nToast.makeText(MainActivity.this, \"\", Toast.LENGTH_SHORT).show();\n```", "```kt\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Show Toast\"\n        android:id=\"@+id/button\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"showToast\"/>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <layer-list >\n        <item\n            android:left=\"4px\"\n            android:top=\"4px\"\n            android:right=\"4px\"\n            android:bottom=\"4px\">\n            <shape android:shape=\"rectangle\" >\n                <solid android:color=\"@android:color/black\" />\n                <stroke android:width=\"5px\" android:color=\"@android:color/white\"/>\n            </shape>\n        </item>\n    </layer-list>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n        android:id=\"@+id/toast_layout_root\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"horizontal\"\n        android:background=\"@drawable/border_square\">\n        <ImageView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/imageView\"\n            android:layout_weight=\"1\"\n            android:src=\"img/ic_launcher\" />\n        <TextView\n            android:id=\"@android:id/message\"\n            android:layout_width=\"0dp\"\n            android:layout_height=\"match_parent\"\n            android:layout_weight=\"1\"\n            android:textColor=\"@android:color/white\"\n            android:padding=\"10dp\" />\n    </LinearLayout>\n    ```", "```kt\n    public void showToast(View view) {\n        LayoutInflater inflater = (LayoutInflater)this.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View layout = inflater.inflate(R.layout.toast_custom, null);\n        ((TextView) layout.findViewById(android.R.id.message)).setText(\"Custom Toast\");\n        Toast toast = new Toast(this);\n        toast.setGravity(Gravity.CENTER, 0, 0);\n        toast.setDuration(Toast.LENGTH_LONG);\n        toast.setView(layout);\n        toast.show();\n    }\n    ```", "```kt\n    <Button\n        android:id=\"@+id/buttonClose\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Delete\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"confirmDelete\"/>\n    ```", "```kt\n    public void confirmDelete(View view) {\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n        builder.setTitle(\"Delete\")\n            .setMessage(\"Are you sure you?\")\n            .setPositiveButton(android.R.string.ok, new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int id) {\n                    Toast.makeText(MainActivity.this, \"OK Pressed\", Toast.LENGTH_SHORT).show();\n            }})\n            .setNegativeButton(android.R.string.cancel, new DialogInterface.OnClickListener() {\n                public void onClick(DialogInterface dialog, int id) {\n                    Toast.makeText(MainActivity.this, \"Cancel Pressed\", Toast.LENGTH_SHORT).show();\n            }});\n        builder.create().show();\n    }\n    ```", "```kt\nbuilder.setNeutralButton()\n```", "```kt\n.setIcon(R.mipmap.ic_launcher)\n```", "```kt\n.setItems()\n.setAdapter()\n.setSingleChoiceItems()\n.setMultiChoiceItems()\n```", "```kt\n.setView()\n```", "```kt\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Show Dialog\"\n        android:id=\"@+id/button\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"startProgress\"/>\n    ```", "```kt\n    private ProgressDialog mDialog;\n    final int THIRTY_SECONDS=30*1000;\n    ```", "```kt\n    public void startProgress(View view) {\n        mDialog= new ProgressDialog(this);\n        mDialog.setMessage(\"Doing something...\");\n        mDialog.setCancelable(false);\n        mDialog.show();\n        new Handler().postDelayed(new Runnable() {\n            public void run() {\n                mDialog.dismiss();\n            }}, THIRTY_SECONDS);\n    ```", "```kt\nmDialog.setCancelable(false);\n```", "```kt\nmDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);\n```", "```kt\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\n    ```", "```kt\n    <Button\n        android:id=\"@+id/buttonSound\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Lights, Action, and Sound\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"clickLightsActionSound\"/>\n    ```", "```kt\n    public void clickLightsActionSound(View view) {\n        Uri notificationSoundUri = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);\n        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this)\n            .setSmallIcon(R.mipmap.ic_launcher)\n            .setContentTitle(\"LightsActionSoundRedux\")\n            .setContentText(\"Lights, Action & Sound\")\n            .setSound(notificationSoundUri)\n            .setLights(Color.BLUE, 500, 500)\n            .setVibrate(new long[]{250,500,250,500,250,500});\n        NotificationManager notificationManager = (NotificationManager) this.getSystemService(Context.NOTIFICATION_SERVICE);\n        notificationManager.notify(0, notificationBuilder.build());\n    }\n    ```", "```kt\n.setSmallIcon()\n.setContentText()\n```", "```kt\n.setSound(notificationSoundUri)\n.setLights(Color.BLUE, 500, 500)\n.setVibrate(new long[]{250,500,250,500,250,500});\n```", "```kt\nNotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(this).setSmallIcon(R.mipmap.ic_launcher)\n        .setContentTitle(\"LightsActionSoundRedux\")\n        .setContentText(\"Lights, Action & Sound\");\nIntent activityIntent = new Intent(this,MainActivity.class);\nPendingIntent pendingIntent = PendingIntent.getActivity(this,0,activityIntent,0);\nnotificationBuilder.addAction(android.R.drawable.ic_dialog_email, \"Email\", pendingIntent);\nnotificationManager.notify(0, notificationBuilder.build());\n```", "```kt\n.setContentIntent(pendingIntent)\n```", "```kt\n    NotificationCompat.Builder notificationBuilderInboxStyle = new NotificationCompat.Builder(this).setSmallIcon(R.mipmap.ic_launcher);\n    NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();\n    inboxStyle.setBigContentTitle(\"InboxStyle - Big Content Title\")\n        .addLine(\"Line 1\")\n        .addLine(\"Line 2\");\n    notificationBuilderInboxStyle.setStyle(inboxStyle);\n    notificationManager.notify(0, notificationBuilderInboxStyle.build());\n    ```", "```kt\n    NotificationCompat.Builder notificationBuilderBigPictureStyle = new NotificationCompat.Builder(this).setSmallIcon(R.mipmap.ic_launcher).setContentTitle(\"LightsActionSoundRedux\").setContentText(\"BigPictureStyle\");\n    NotificationCompat.BigPictureStyle bigPictureStyle = new NotificationCompat.BigPictureStyle();\n    bigPictureStyle.bigPicture(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher));\n    notificationBuilderBigPictureStyle.setStyle(bigPictureStyle);\n    notificationManager.notify(0, notificationBuilderBigPictureStyle.build());\n    ```", "```kt\n    NotificationCompat.Builder notificationBuilderBigTextStyle = new NotificationCompat.Builder(this).setSmallIcon(R.mipmap.ic_launcher).setContentTitle(\"LightsActionSoundRedux\");\n    NotificationCompat.BigTextStyle BigTextStyle = new NotificationCompat.BigTextStyle();\n    BigTextStyle.bigText(\"This is an example of the BigTextStyle expanded notification.\");\n    notificationBuilderBigTextStyle.setStyle(BigTextStyle);\n    notificationManager.notify(0, notificationBuilderBigTextStyle.build());\n    ```", "```kt\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Show Notification\"\n        android:id=\"@+id/button\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"showNotification\"/>\n    ```", "```kt\n    @Deprecated\n    public void showNotification(View view) {\n        Intent activityIntent = new Intent(this,MainActivity.class);\n        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, activityIntent, 0);\n\n        Notification notification;\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            notification = new Notification.Builder(this).setVisibility(Notification.VISIBILITY_PUBLIC)\n                .setSmallIcon(Icon.createWithResource(this, R.mipmap.ic_launcher))\n                .addAction(new Notification.Action.Builder(Icon.createWithResource(this, android.R.drawable.ic_media_previous), \"Previous\", pendingIntent).build())\n                .addAction(new Notification.Action.Builder(Icon.createWithResource(this, android.R.drawable.ic_media_pause), \"Pause\", pendingIntent).build())\n                .addAction(new Notification.Action.Builder(Icon.createWithResource(this, android.R.drawable.ic_media_next), \"Next\", pendingIntent).build())\n                .setContentTitle(\"Music\")\n                .setContentText(\"Now playing...\")\n                .setLargeIcon(Icon.createWithResource(this, R.mipmap.ic_launcher))\n                .setStyle(new Notification.MediaStyle().setShowActionsInCompactView(1)).build();\n        } else {\n            notification = new Notification.Builder(this)\n                .setVisibility(Notification.VISIBILITY_PUBLIC)\n                .setSmallIcon(R.mipmap.ic_launcher)\n                .addAction(new Notification.Action.Builder(android.R.drawable.ic_media_previous, \"Previous\", pendingIntent).build())\n                .addAction(new Notification.Action.Builder(android.R.drawable.ic_media_pause, \"Pause\", pendingIntent).build())\n                .addAction(new Notification.Action.Builder(android.R.drawable.ic_media_next, \"Next\", pendingIntent).build())\n                .setContentTitle(\"Music\")\n                .setContentText(\"Now playing...\")\n                .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))\n                .setStyle(new Notification.MediaStyle()\n                .setShowActionsInCompactView(1)).build();\n        }\n        NotificationManager notificationManager = (NotificationManager) this.getSystemService(Context.NOTIFICATION_SERVICE);\n        notificationManager.notify(0, notification);\n    }\n    ```", "```kt\n@Deprecated\n```", "```kt\nif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M)\n```", "```kt\n.setVisibility(Notification.VISIBILITY_PUBLIC)\n```", "```kt\n.setShowActionsInCompactView(1)\n```", "```kt\n.setMediaSession(mMediaSession.getSessionToken())\n```", "```kt\n    <uses-permission android:name=\"android.permission.VIBRATE\"/>\n    ```", "```kt\n    <activity android:name=\".MainActivity\"\n        android:launchMode=\"singleInstance\">\n    ```", "```kt\n    <ToggleButton\n        android:id=\"@+id/buttonLight\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Flashlight\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"clickLight\"/>\n    ```", "```kt\n    private static final String ACTION_STOP=\"STOP\";\n    private CameraManager mCameraManager;\n    private String mCameraId=null;\n    private ToggleButton mButtonLight;\n    ```", "```kt\n    mButtonLight = (ToggleButton)findViewById(R.id.buttonLight);\n\n    mCameraManager = (CameraManager) this.getSystemService(Context.CAMERA_SERVICE);\n    mCameraId = getCameraId();\n    if (mCameraId==null) {\n        mButtonLight.setEnabled(false);\n    } else {\n        mButtonLight.setEnabled(true);\n    }\n    ```", "```kt\n    @Override\n    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n        if (ACTION_STOP.equals(intent.getAction())) {\n            setFlashlight(false);\n        }\n    }\n    ```", "```kt\n    private String getCameraId() {\n        try {\n            String[] ids = mCameraManager.getCameraIdList();\n            for (String id : ids) {\n                CameraCharacteristics c = mCameraManager.getCameraCharacteristics(id);\n                Boolean flashAvailable = c.get(CameraCharacteristics.FLASH_INFO_AVAILABLE);\n                Integer facingDirection = c.get(CameraCharacteristics.LENS_FACING);\n                if (flashAvailable != null && flashAvailable && facingDirection != null && facingDirection == CameraCharacteristics.LENS_FACING_BACK) {\n                    return id;\n                }\n            }\n        } catch (CameraAccessException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n    ```", "```kt\n    public void clickLight(View view) {\n        setFlashlight(mButtonLight.isChecked());\n        if (mButtonLight.isChecked()) {\n            showNotification();\n        }\n    }\n\n    private void setFlashlight(boolean enabled) {\n        mButtonLight.setChecked(enabled);\n        try {\n            mCameraManager.setTorchMode(mCameraId, enabled);\n        } catch (CameraAccessException e) {\n            e.printStackTrace();\n        }\n    }\n    ```", "```kt\n    private void showNotification() {\n        Intent activityIntent = new Intent(this,MainActivity.class);\n        activityIntent.setAction(ACTION_STOP);\n        PendingIntent pendingIntent = PendingIntent.getActivity(this,0,activityIntent,0);\n        final Builder notificationBuilder = new Builder(this).setContentTitle(\"Flashlight\")\n            .setContentText(\"Press to turn off the flashlight\")\n            .setSmallIcon(R.mipmap.ic_launcher)\n            .setLargeIcon(BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher))\n            .setContentIntent(pendingIntent)\n            .setVibrate(new long[]{DEFAULT_VIBRATE})\n            .setPriority(PRIORITY_MAX);\n        NotificationManager notificationManager = (NotificationManager) this.getSystemService(Context.NOTIFICATION_SERVICE);\n        notificationManager.notify(0, notificationBuilder.build());\n    }\n    ```", "```kt\n.setVibrate()\n.setPriority(PRIORITY_MAX)\n```", "```kt\nactivityIntent.setAction(ACTION_STOP);\n```", "```kt\nheadsupContentView()\n```"]