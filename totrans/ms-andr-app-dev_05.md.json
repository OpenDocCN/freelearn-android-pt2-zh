["```kt\nview.findViewById(R.id.settingsButtonListExample).setOnClickListener(new View.OnClickListener() {\n  @Override\n  public void onClick(View view) {\n    //Show the dialog here\n  }\n});\n```", "```kt\n/**\n* Settings Fragment\n*/\npublic class SettingsFragment extends Fragment implements View.OnClickListener {\n\n  @Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n  Bundle savedInstanceState) {\n    // Inflate the layout for this fragment\n    View view = inflater.inflate(R.layout.fragment_settings, container, false);\n\n    view.findViewById(R.id.settingsButtonListExample).setOnClickListener(this);\n\n    view.findViewById(R.id.ViewX).setOnClickListener(this);\n\n    view.findViewById(R.id.imageY).setOnClickListener(this);\n\n    return view;\n  }\n\n  @Override\n  public void onClick(View view) {\n    switch (view.getId()){\n      case (R.id.settingsButtonListExample) :\n      showDialog();\n      break;\n      case (R.id.viewX) :\n      //Example\n      break;\n      case (R.id.imageY) :\n      //Example\n      break;\n\n      //...\n    }\n  }\n\n  public void showListDialog(){\n    //Show Dialog here\n  }\n}\n```", "```kt\n/**\n*  Show a dialog with different options to choose from\n*/\npublic void showListDialog(){\n\n  AlertDialog.Builder builder = new AlertDialog.Builder(getActivity());\n\n  final ArrayAdapter<String> arrayAdapter = new ArrayAdapter<String>(\n  getActivity(),\n  android.R.layout.select_dialog_singlechoice);\n  arrayAdapter.add(\"Option 0\");\n  arrayAdapter.add(\"Option 1\");\n  arrayAdapter.add(\"Option 2\");\n\n  builder.setTitle(\"Choose an option\");\n\n  builder.setAdapter(arrayAdapter,\n  new DialogInterface.OnClickListener() {\n    @Override\n    public void onClick(DialogInterface dialogInterface, int i) {\n      Toast.makeText(getActivity(),\"Option choosen \"+i, Toast.LENGTH_SHORT).show();\n      dialogInterface.dismiss();\n    }\n  });\n\n  builder.show();\n}\n```", "```kt\n@ParseClassName(\"JobContact\")\npublic class JobContact extends ParseObject {\n\n  public JobContact() {\n    // A default constructor is required.\n  }\n\n  public String getName() {\n    return getString(\"name\");\n  }\n\n  public String getDescription() {\n    return getString(\"description\");\n  }\n\n  public String getCountry() {\n    return getString(\"country\");\n  }\n\n  public String getEmail() {\n    return getString(\"email\");\n  }\n\n}\n\npublic class Country {\n\n  String countryCode;\n\n  public Country(String countryCode) {\n    this.countryCode = countryCode;\n  }\n\n}\n```", "```kt\npublic void retrieveJobContacts(){\n  ParseQuery<JobContact> query = ParseQuery.getQuery(\"JobContact\");\n  query.orderByAscending(\"country\");\n  query.findInBackground(new FindCallback<JobContact>() {\n    @Override\n    public void done(List<JobContact> jobContactsList, ParseException e) {\n      mListItems = new ArrayList<Object>();\n      String currentCountry = \"\";\n      for (JobContact jobContact: jobContactsList) {\n        if (!currentCountry.equals(jobContact.getCountry())){\n          currentCountry = jobContact.getCountry();\n          mListItems.add(new Country(currentCountry));\n        }\n        mListItems.add(jobContact);\n      }\n    }\n  });\n}\n```", "```kt\npublic class JobContactsAdapter extends BaseAdapter {\n  @Override\n  public int getCount() {\n    return 0;\n  }\n\n  @Override\n  public Object getItem(int i) {\n    return null;\n  }\n\n  @Override\n  public long getItemId(int i) {\n    return 0;\n  }\n\n  @Override\n  public View getView(int i, View view, ViewGroup viewGroup) {\n    return null;\n  }\n}\n```", "```kt\npublic class JobContactsAdapter extends BaseAdapter {\n\n  private List<Object> mItemsList;\n  private Context mContext;\n\n  public JobContactsAdapter(List<Object> list, Context context){\n    mItemsList = list;\n    mContext = context;\n  }\n\n  @Override\n  public int getCount() {\n    return mItemsList.size();\n  }\n\n  @Override\n  public Object getItem(int i) {\n    return mItemsList.get(i);\n  }\n\n  @Override\n  public long getItemId(int i) {\n    //Not needed\n    return 0;\n  }\n\n  @Override\n  public View getView(int i, View view, ViewGroup viewGroup) {\n    return null;\n  }\n}\n```", "```kt\n@Override\npublic int getItemViewType(int position) {\n  return mItemsList.get(position) instanceof Country ? 0 : 1;\n}\n\n@Override\npublic int getViewTypeCount() {\n  return 2;\n}\n```", "```kt\n@Override\npublic View getView(int i, View view, ViewGroup viewGroup) {\n\n  View rowView = null;\n  switch (getItemViewType(i)){\n\n    case (0) :\n    rowView = View.inflate(mContext, R.layout.row_job_country,null);\n    Country country = (Country) mItemsList.get(i);\n    ((TextView) rowView.findViewById(R.id.rowJobCountryTitle)).setText(country.getName());\n    ((ImageView) rowView.findViewById(R.id.rowJobCountryImage)).setImageResource(country.getImageRes(mContext));\n    break;\n\n    case (1) :\n    rowView = View.inflate(mContext, R.layout.row_job_contact,null);\n    JobContact company = (JobContact) mItemsList.get(i);\n    ((TextView) rowView.findViewById(R.id.rowJobContactName)).setText(company.getName());\n    ((TextView) rowView.findViewById(R.id.rowJobContactEmail)).setText(company.getEmail());\n    ((TextView) rowView.findViewById(R.id.rowJobContactDesc)).setText(company.getDescription());\n  }\n\n  return rowView;\n}\n```", "```kt\npublic class ContactFragment extends android.support.v4.app.ListFragment {\n\n  List<Object> mListItems;\n\n  public ContactFragment() {\n    // Required empty public constructor\n  }\n\n  @Override\n  public void onViewCreated(View view, Bundle bundle) {\n    super.onViewCreated(view,bundle);\n    retrieveJobContacts();\n  }\n\n  public void retrieveJobContacts(){\n    ParseQuery<JobContact> query = ParseQuery.getQuery(\"JobContact\");\n    query.orderByAscending(\"country\");\n    query.findInBackground(new FindCallback<JobContact>() {\n      @Override\n      public void done(List<JobContact> jobContactsList, ParseException e) {\n        mListItems = new ArrayList<Object>();\n        String currentCountry = \"\";\n        for (JobContact jobContact: jobContactsList) {\n          if (!currentCountry.equals(jobContact.getCountry())){\n            currentCountry = jobContact.getCountry();\n            mListItems.add(new Country(currentCountry));\n          }\n          mListItems.add(jobContact);\n        }\n        setListAdapter(new JobContactsAdapter(mListItems,getActivity()));\n      }\n    });\n  }\n}\n```", "```kt\npublic int getImageRes(Context ctx){\n  return ctx.getResources().getIdentifier(countryCode, \"drawable\", ctx.getPackageName());\n}\n```", "```kt\n@Override\npublic View getView(int i, View view, ViewGroup viewGroup) {\n\n  switch (getItemViewType(i)){\n\n    case (0) :\n    if (view == null){\n      view = View.inflate(mContext, R.layout.row_job_country,null);\n    }\n    Country country = (Country) mItemsList.get(i);\n    ((TextView) view.findViewById(R.id.rowJobCountryTitle)).setText(country.getName());\n    ((ImageView) view.findViewById(R.id.rowJobCountryImage)).setImageResource(country.getImageRes(mContext));\n    break;\n\n    case (1) :\n    if (view == null){\n      view = View.inflate(mContext, R.layout.row_job_contact,null);\n    }\n    JobContact company = (JobContact) mItemsList.get(i);\n    ((TextView) view.findViewById(R.id.rowJobContactName)).setText(company.getName());\n    ((TextView) view.findViewById(R.id.rowJobContactEmail)).setText(company.getEmail());\n    ((TextView) view.findViewById(R.id.rowJobContactDesc)).setText(company.getDescription());\n  }\n\n  return view;\n}\n```", "```kt\n@Override\npublic View getView(int i, View view, ViewGroup viewGroup) {\n\n  switch (getItemViewType(i)){\n\n    case (0) :\n    CountryViewHolder holderC;\n    if (view == null){\n      view = View.inflate(mContext, R.layout.row_job_country,null);\n      holderC = new CountryViewHolder();\n      holderC.name = (TextView) view.findViewById(R.id.rowJobCountryTitle);\n      holderC.flag = (ImageView) view.findViewById(R.id.rowJobCountryImage);\n      view.setTag(view);\n    } else {\n      holderC = (CountryViewHolder) view.getTag();\n    }\n    Country country = (Country) mItemsList.get(i);\n    holderC.name.setText(country.getName());\n    holderC.flag.setImageResource(country.getImageRes(mContext));\n    break;\n    case (1) :\n    CompanyViewHolder holder;\n    if (view == null){\n      view = View.inflate(mContext, R.layout.row_job_contact,null);\n      holder = new CompanyViewHolder();\n      holder.name = (TextView) view.findViewById(R.id.rowJobContactName);\n      holder.email = (TextView) view.findViewById(R.id.rowJobContactEmail);\n      holder.desc = (TextView) view.findViewById(R.id.rowJobOfferDesc);\n      view.setTag(holder);\n    } else {\n      holder = (CompanyViewHolder) view.getTag();\n    }\n    JobContact company = (JobContact) mItemsList.get(i);\n    holder.name.setText(company.getName());\n    holder.email.setText(company.getEmail());\n    holder.desc.setText(company.getDescription());\n  }\n\n  return view;\n}\n\nprivate class CountryViewHolder{\n\n  public TextView name;\n  public ImageView flag;\n\n}\n\nprivate class CompanyViewHolder{\n\n  public TextView name;\n  public TextView email;\n  public TextView desc;\n\n}\n```", "```kt\nCountryViewHolder holderC;\nif (view == null){\n  view = View.inflate(mContext, R.layout.row_job_country,null);\n  holderC = new CountryViewHolder(view);\n  view.setTag(view);\n} else {\n  holderC = (CountryViewHolder) view.getTag();\n}\nholderC.bindView((Country)mItemsList.get(i));\nbreak;\n\nprivate class CountryViewHolder{\n\n  public TextView name;\n  public ImageView flag;\n\n  public CountryViewHolder(View view) {\n    this.name = (TextView) view.findViewById(R.id.rowJobCountryTitle);\n    this.flag = (ImageView) view.findViewById(R.id.rowJobCountryImage);\n  }\n\n  public void bindView(Country country){\n    this.name.setText(country.getName());\n    this.flag.setImageResource(country.getImageRes(mContext));\n  }\n\n}\n```", "```kt\npublic View getView(int position, View convertView,\nViewGroup parent) {\n\n  ...\n\n  new LoadImageAsyncTask(list.get(position).getImageUrl, holder)\n  .executeOnExecutor(AsyncTask.THREAD_POOL_EXECUTOR, null);\n\n  return convertView;\n}\n```", "```kt\ndependencies {\n  compile fileTree(dir: 'libs', include: ['*.jar'])\n  compile 'com.android.support:appcompat-v7:21.0.3'\n  compile 'com.parse.bolts:bolts-android:1.+'\n  compile fileTree(dir: 'libs', include: 'Parse-*.jar')\n  compile 'com.mcxiaoke.volley:library-aar:1.0.1'\n  compile 'com.android.support:recyclerview-v7:21.0.3'\n}\n```", "```kt\n<android.support.v7.widget.RecyclerView\n  android:id=\"@+id/my_recycler_view\"\n  android:scrollbars=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\"/>\n```", "```kt\npublic class JobOffersAdapter  {\n\n  public class MyViewHolder extends RecyclerView.ViewHolder{\n\n    public TextView textViewName;\n    public TextView textViewDescription;\n\n    public  MyViewHolder(View v){\n      super(v);\n      textViewName = (TextView)v.findViewById(R.id.rowJobOfferTitle);\n      textViewDescription = (TextView)v.findViewById(R.id.rowJobOfferDesc);\n    }\n  }\n}\n```", "```kt\n@Override\npublic MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n  return null;\n}\n\n@Override\npublic void onBindViewHolder(MyViewHolder holder, int position) {\n\n}\n\n@Override\npublic int getItemCount() {\n  return 0;\n}\n```", "```kt\npublic class JobOffersAdapter extends RecyclerView.Adapter<JobOffersAdapter.MyViewHolder>  {\n\n  private  List<JobOffer> mOfferList;\n\n  public JobOffersAdapter(List<JobOffer> offersList) {\n    this.mOfferList = offersList;\n  }\n\n  @Override\n  public MyViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n    View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.row_job_offer, parent, false);\n    return new MyViewHolder(v);\n  }\n\n  @Override\n  public void onBindViewHolder(MyViewHolder holder, int position) {\n    holder.textViewName.setText(mOfferList.get(position).getTitle());\n    holder.textViewDescription.setText(mOfferList.get(position).getDescription());\n  }\n\n  @Override\n  public int getItemCount() {\n    return mOfferList.size();\n  }\n\n  public class MyViewHolder extends RecyclerView.ViewHolder{\n\n    public TextView textViewName;\n    public TextView textViewDescription;\n\n    public  MyViewHolder(View v){\n      super(v);\n      textViewName = (TextView)v.findViewById(R.id.rowJobOfferTitle);\n      textViewDescription = (TextView)v.findViewById(R.id.rowJobOfferDesc);\n    }\n  }\n}\n```", "```kt\npublic class ListFragment extends android.support.v4.app.Fragment {\n\n  public List<JobOffer> mListItems;\n  public RecyclerView mRecyclerView;\n\n  public ListFragment() {\n    // Required empty public constructor\n  }\n\n  @Override\n  public View onCreateView(LayoutInflater inflater, ViewGroup container,\n  Bundle savedInstanceState) {\n    // Inflate the layout for this fragment\n    View view = inflater.inflate(R.layout.fragment_list, container, false);\n\n    mRecyclerView = (RecyclerView) view.findViewById(R.id.my_recycler_view);\n\n    // use this setting to improve performance if you know that changes\n    // in content do not change the layout size of the RecyclerView\n    mRecyclerView.setHasFixedSize(true);\n\n    // use a linear layout manager\n    mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));\n\n    //Retrieve the list of offers\n    retrieveJobOffers();\n\n    return view;\n  }\n```", "```kt\npublic void retrieveJobOffers(){\n\n  ParseQuery<JobOffer> query = ParseQuery.getQuery(\"JobOffer\");\n  query.findInBackground(new FindCallback<JobOffer>() {\n\n    @Override\n    public void done(List<JobOffer> jobOffersList, ParseException e) {\n      mListItems = jobOffersList;\n      JobOffersAdapter adapter = new JobOffersAdapter(mListItems);\n      mRecyclerView.setAdapter(adapter);\n    }\n\n  });\n}\n```", "```kt\nmrecyclerView.addOnItemTouchListener(new MyRecyclerItemClickListener(getActivity(), recyclerView, new MyRecyclerItemClickListener.OnItemClickListener() {\n\n  @Override\n  public void onItemClick(View view, int position){\n    // ...\n  }\n\n  @Override\n  public void onItemLongClick(View view, int position){\n    // ...\n  }\n}));\n\npublic class MyRecyclerItemClickListener implements RecyclerView.OnItemTouchListener\n{\n  public static interface OnItemClickListener\n  {\n    public void onItemClick(View view, int position);\n    public void onItemLongClick(View view, int position);\n  }\n\n  private OnItemClickListener mListener;\n  private GestureDetector mGestureDetector;\n\n  public MyRecyclerItemClickListener(Context context, final RecyclerView recyclerView, OnItemClickListener listener)\n  {\n    mListener = listener;\n\n    mGestureDetector = new GestureDetector(context, new GestureDetector.SimpleOnGestureListener()\n    {\n      @Override\n      public boolean onSingleTapUp(MotionEvent e)\n      {\n        return true;\n      }\n\n      @Override\n      public void onLongPress(MotionEvent e)\n      {\n        View child = recyclerView.findChildViewUnder(e.getX(), e.getY());\n\n        if(child != null && mListener != null)\n        {\n          mListener.onItemLongClick(child, recyclerView.getChildPosition(child));\n        }\n      }\n    });\n  }\n\n  @Override\n  public boolean onInterceptTouchEvent(RecyclerView view, MotionEvent e)\n  {\n    View child = view.findChildViewUnder(e.getX(), e.getY());\n\n    if(child != null && mListener != null && mGestureDetector.onTouchEvent(e))\n    {\n      mListener.onItemClick(child, view.getChildPosition(child));\n    }\n\n    return false;\n  }\n\n  @Override\n  public void onTouchEvent(RecyclerView view, MotionEvent motionEvent){\n    //Empty\n  }\n}\n@Override\npublic void onRequestDisallowInterceptTouchEvent(RecyclerView view){\n  //Empty\n}\n```", "```kt\npublic class MyViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener, View.OnLongClickListener{\n\n  public TextView textViewName;\n  public TextView textViewDescription;\n\n  public  MyViewHolder(View v){\n    super(v);\n    textViewName = (TextView)v.findViewById(R.id.rowJobOfferTitle);\n    textViewDescription = (TextView)v.findViewById(R.id.rowJobOfferDesc);\n    textViewName.setOnClickListener(this);\n    v.setOnLongClickListener(this);\n  }\n\n  @Override\n  public void onClick(View view) {\n    switch (view.getId()){\n      case R.id.rowJobOfferTitle :\n      //Click\n      break;\n    }\n  }\n\n  @Override\n  public boolean onLongClick(View view) {\n    //Delete the element here\n    return false;\n  }\n}\n```", "```kt\n@Override\npublic boolean onLongClick(View view) {\n  mOfferList.remove(getPosition());\n  notifyItemRemoved(getPosition());\n  return true;\n}\n```"]