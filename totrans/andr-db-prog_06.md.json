["```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout \nandroid:orientation=\"vertical\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\" >\n<ListView\nandroid:id=\"@android:id/android:list\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\" />\n</LinearLayout>\n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout \nandroid:orientation=\"vertical\"\nandroid:layout_width=\"fill_parent\"\nandroid:layout_height=\"wrap_content\"\nandroid:padding=\"10dip\" >\n<TextView\nandroid:id=\"@+id/name_entry\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:textSize=\"28dip\" />\n<TextView\nandroid:id=\"@+id/number_entry\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:textSize=\"16dip\" />\n<TextView\nandroid:id=\"@+id/number_type_entry\"\nandroid:layout_width=\"wrap_content\"\nandroid:layout_height=\"wrap_content\"\nandroid:textColor=\"#DDD\"\nandroid:textSize=\"14dip\" />\n</LinearLayout>\n\n```", "```kt\npublic class SimpleContactsActivity extends ListActivity {\n@Override\npublic void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.list);\n// MAKE QUERY TO CONTACT CONTENTPROVIDER\nString[] projections = new String[] { Phone._ID, Phone.DISPLAY_NAME, Phone.NUMBER, Phone.TYPE };\nCursor c = getContentResolver().query(Phone.CONTENT_URI, projections, null, null, null);\nstartManagingCursor(c);\n// THE DESIRED COLUMNS TO BE BOUND\nString[] columns = new String[] { Phone.DISPLAY_NAME, Phone.NUMBER, Phone.TYPE };\n// THE XML DEFINED VIEWS FOR EACH FIELD TO BE BOUND TO\nint[] to = new int[] { R.id.name_entry, R.id.number_entry, R.id.number_type_entry };\n// CREATE ADAPTER WITH CURSOR POINTING TO DESIRED DATA\nSimpleCursorAdapter cAdapter = new SimpleCursorAdapter(this, R.layout.list_entry, c, columns, to);\n// SET THIS ADAPTER AS YOUR LIST ACTIVITY'S ADAPTER\nthis.setListAdapter(cAdapter);\n}\n}\n\n```", "```kt\n// THE DESIRED COLUMNS TO BE BOUND\nString[] columns = new String[] { Phone.DISPLAY_NAME, Phone.NUMBER, Phone.TYPE };\n// THE XML DEFINED VIEWS FOR EACH FIELD TO BE BOUND TO\nint[] to = new int[] { R.id.name_entry, R.id.number_entry, R.id.number_type_entry };\n\n```", "```kt\n// CREATE ADAPTER WITH CURSOR POINTING TO DESIRED DATA\nSimpleCursorAdapter cAdapter = new SimpleCursorAdapter(this, R.layout.list_entry, c, columns, to);\n\n```", "```kt\npublic class CustomContactsAdapter extends SimpleCursorAdapter {\nprivate int layout;\npublic CustomContactsAdapter(Context context, int layout, Cursor c, String[] from, int[] to) {\nsuper(context, layout, c, from, to);\nthis.layout = layout;\n}\n@Override\npublic View newView(Context context, Cursor cursor, ViewGroup parent) {\nfinal LayoutInflater inflater = LayoutInflater.from(context);\nView v = inflater.inflate(layout, parent, false);\nreturn v;\n}\n@Override\npublic void bindView(View v, Context context, Cursor c) {\nint nameCol = c.getColumnIndex(Phone.DISPLAY_NAME);\nint numCol = c.getColumnIndex(Phone.NUMBER);\nint typeCol = c.getColumnIndex(Phone.TYPE);\nString name = c.getString(nameCol);\nString number = c.getString(numCol);\nint type = c.getInt(typeCol);\nString numType = \"\";\nswitch (type) {\ncase Phone.TYPE_HOME:\nnumType = \"HOME\";\nbreak;\ncase Phone.TYPE_MOBILE:\nnumType = \"MOBILE\";\nbreak;\ncase Phone.TYPE_WORK:\nnumType = \"WORK\";\nbreak;\ndefault:\nnumType = \"MOBILE\";\nbreak;\n}\n// FIND THE VIEW AND SET THE NAME\nTextView name_text = (TextView) v.findViewById (R.id.name_entry);\nname_text.setText(name);\nTextView number_text = (TextView) v.findViewById (R.id.number_entry);\nnumber_text.setText(number);\nTextView type_text = (TextView) v.findViewById\n(R.id.number_type_entry);\ntype_text.setText(numType);\n}\n}\n\n```", "```kt\nSimpleCursorAdapter cAdapter = new SimpleCursorAdapter(this, R.layout.list_entry, c, columns, to);\n\n```", "```kt\nCustomContactsAdapter cAdapter = new CustomContactsAdapter(this, R.layout.list_entry, c, columns, to);\n\n```", "```kt\npublic class ContactEntry {\nprivate String mName;\nprivate String mNumber;\nprivate String mType;\npublic ContactEntry(String name, String number, int type) {\nmName = name;\nmNumber = number;\nString numType = \"\";\nswitch (type) {\ncase Phone.TYPE_HOME:\nnumType = \"HOME\";\nbreak;\ncase Phone.TYPE_MOBILE:\nnumType = \"MOBILE\";\nbreak;\ncase Phone.TYPE_WORK:\nnumType = \"WORK\";\nbreak;\ndefault:\nnumType = \"MOBILE\";\nbreak;\n}\nmType = numType;\n}\npublic String getName() {\nreturn mName;\n}\npublic String getNumber() {\nreturn mNumber;\n}\npublic String getType() {\nreturn mType;\n}\n}\n\n```", "```kt\npublic class ContactBaseAdapter extends BaseAdapter {\n// REMEMBER CONTEXT SO THAT IT CAN BE USED TO INFLATE VIEWS\nprivate LayoutInflater mInflater;\n// LIST OF CONTACTS\nprivate List<ContactEntry> mItems = new ArrayList<ContactEntry>();\n// CONSTRUCTOR OF THE CUSTOM BASE ADAPTER\npublic ContactBaseAdapter(Context context, List<ContactEntry> items) {\n// HERE WE CACHE THE INFLATOR FOR EFFICIENCY\nmInflater = LayoutInflater.from(context);\nmItems = items;\n}\npublic int getCount() {\nreturn mItems.size();\n}\npublic Object getItem(int position) {\nreturn mItems.get(position);\n}\npublic View getView(int position, View convertView, ViewGroup parent) {\nContactViewHolder holder;\n// IF VIEW IS NULL THEN WE NEED TO INSTANTIATE IT BY INFLATING IT - I.E. INITIATING THAT ROWS VIEW IN THE LIST\nif (convertView == null) {\nconvertView = mInflater.inflate(R.layout.list_entry, null);\nholder = new ContactViewHolder();\nholder.name_entry = (TextView) convertView.findViewById (R.id.name_entry);\nholder.number_entry = (TextView) convertView. findViewById(R.id.number_entry);\nholder.type_entry = (TextView) convertView.findViewById (R.id.number_type_entry);\nconvertView.setTag(holder);\n} else {\n// GET VIEW HOLDER BACK FOR FAST ACCESS TO FIELDS\nholder = (ContactViewHolder) convertView.getTag();\n}\n// EFFICIENTLY BIND DATA WITH HOLDER\nContactEntry c = mItems.get(position);\nholder.name_entry.setText(c.getName());\nholder.number_entry.setText(c.getNumber());\nholder.type_entry.setText(c.getType());\nreturn convertView;\n}\nstatic class ContactViewHolder {\nTextView name_entry;\nTextView number_entry;\nTextView type_entry;\n}\n}\n\n```", "```kt\nif (convertView == null) {\nconvertView = mInflater.inflate(R.layout.list_entry, null);\nholder = new ContactViewHolder();\nholder.name_entry = (TextView) convertView.findViewById (R.id.name_entry);\nholder.number_entry = (TextView) convertView. findViewById(R.id.number_entry);\nholder.type_entry = (TextView) convertView.findViewById (R.id.number_type_entry);\nconvertView.setTag(holder);\n} else {\n// GET VIEW HOLDER BACK FOR FAST ACCESS TO FIELDS\nholder = (ContactViewHolder) convertView.getTag();\n}\n\n```", "```kt\npublic class CustomBaseAdapterActivity extends ListActivity {\n@Override\npublic void onCreate(Bundle savedInstanceState) {\nsuper.onCreate(savedInstanceState);\nsetContentView(R.layout.list);\n// MAKE QUERY TO CONTACT CONTENTPROVIDER\nString[] projections = new String[] { Phone._ID, Phone.DISPLAY_NAME, Phone.NUMBER, Phone.TYPE };\nCursor c = getContentResolver().query(Phone.CONTENT_URI, projections, null, null, null);\nstartManagingCursor(c);\nList<ContactEntry> contacts = new ArrayList<ContactEntry>();\nwhile (c.moveToNext()) {\nint nameCol = c.getColumnIndex(Phone.DISPLAY_NAME);\nint numCol = c.getColumnIndex(Phone.NUMBER);\nint typeCol = c.getColumnIndex(Phone.TYPE);\nString name = c.getString(nameCol);\nString number = c.getString(numCol);\nint type = c.getInt(typeCol);\ncontacts.add(new ContactEntry(name, number, type));\n}\n// CREATE ADAPTER USING LIST OF CONTACT OBJECTS\nContactBaseAdapter cAdapter = new ContactBaseAdapter(this, contacts);\n// SET THIS ADAPTER AS YOUR LIST ACTIVITY'S ADAPTER\nthis.setListAdapter(cAdapter);\n}\n}\n\n```", "```kt\n// CREATE ADAPTER USING LIST OF CONTACT OBJECTS\nContactBaseAdapter cAdapter = new ContactBaseAdapter(this, contacts);\n\n```", "```kt\n@Override\nprotected void onListItemClick(ListView l, View v, int position, long id) { }\n\n```", "```kt\n@Override\nprotected void onListItemClick(ListView l, View v, int position, long id) {\nsuper.onListItemClick(l, v, position, id);\nCursor c = (Cursor) cAdapter.getItem(position);\nint nameCol = c.getColumnIndex(Phone.DISPLAY_NAME);\nint numCol = c.getColumnIndex(Phone.NUMBER);\nint typeCol = c.getColumnIndex(Phone.TYPE);\nString name = c.getString(nameCol);\nString number = c.getString(numCol);\nint type = c.getInt(typeCol);\nSystem.out.println(\"CLICKED ON \" + name + \" \" + number + \" \" + type);\n}\n\n```", "```kt\n@Override\nprotected void onListItemClick(ListView l, View v, int position, long id) {\nsuper.onListItemClick(l, v, position, id);\nContactEntry c = contacts.get(position);\nString name = c.getName();\nString number = c.getNumber();\nString type = c.getType();\nSystem.out.println(\"CLICKED ON \" + name + \" \" + number + \" \" + type);\n}\n\n```"]