["```kt\n    <TextView\n        android:id=\"@+id/textView\"\n        android:text=\"Hello World!\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\" />\n\n    <EditText\n        android:id=\"@+id/editTextName\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:hint=\"Enter your name\" />\n\n    <Button\n        android:id=\"@+id/button\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Save\"\n        android:layout_centerHorizontal=\"true\"\n        android:layout_below=\"@id/editTextName\"\n        android:onClick=\"saveName\"/>\n    ```", "```kt\n    private final String NAME=\"NAME\";\n    private EditText mEditTextName;\n    ```", "```kt\n    TextView textView = (TextView)findViewById(R.id.textView);\n    SharedPreferences sharedPreferences = getPreferences(MODE_PRIVATE);\n    String name = sharedPreferences.getString(NAME,null);\n    if (name==null) {\n        textView.setText(\"Hello\");\n    } else {\n        textView.setText(\"Welcome back \" + name + \"!\");\n    }\n    mEditTextName = (EditText)findViewById(R.id.editTextName);\n    ```", "```kt\n    public void saveName(View view) {\n        SharedPreferences.Editor editor = getPreferences(MODE_PRIVATE).edit();\n        editor.putString(NAME, mEditTextName.getText().toString());\n        editor.commit();\n    }\n    ```", "```kt\n    <EditText\n        android:id=\"@+id/editText\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:inputType=\"textMultiLine\"\n        android:ems=\"10\"\n        android:layout_above=\"@+id/buttonRead\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_centerHorizontal=\"true\" />\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Read\"\n        android:id=\"@+id/buttonRead\"\n        android:layout_centerVertical=\"true\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"readFile\"/>\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Write\"\n        android:id=\"@+id/buttonWrite\"\n        android:layout_below=\"@+id/buttonRead\"\n        android:layout_centerHorizontal=\"true\"\n        android:onClick=\"writeFile\"/>\n    ```", "```kt\n    private final String FILENAME=\"testfile.txt\";\n    EditText mEditText;\n    ```", "```kt\n    mEditText = (EditText)findViewById(R.id.editText);\n    ```", "```kt\n    public void writeFile(View view) {\n        try {\n            FileOutputStream fileOutputStream = openFileOutput(FILENAME, Context.MODE_PRIVATE);\n            fileOutputStream.write(mEditText.getText().toString().getBytes());\n            fileOutputStream.close();\n        } catch (java.io.IOException e) {\n            e.printStackTrace();\n        }\n    }\n    ```", "```kt\n    public void readFile(View view) {\n        StringBuilder stringBuilder = new StringBuilder();\n        try {\n            InputStream inputStream = openFileInput(FILENAME);\n            if ( inputStream != null ) {\n                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);\n                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n                String newLine = null;\n                while ((newLine = bufferedReader.readLine()) != null ) {\n                    stringBuilder.append(newLine+\"\\n\");\n                }\n                inputStream.close();\n            }\n        } catch (java.io.IOException e) {\n            e.printStackTrace();\n        }\n        mEditText.setText(stringBuilder);\n    }\n    ```", "```kt\ngetCacheDir()\n```", "```kt\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\n    ```", "```kt\n    private final String FILENAME=\"testfile.txt\";\n    EditText mEditText;\n    ```", "```kt\n    mEditText = (EditText)findViewById(R.id.editText);\n    ```", "```kt\n    public boolean isExternalStorageWritable() {\n        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState())) {\n            return true;\n        }\n        return false;\n    }\n\n    public boolean isExternalStorageReadable() {\n        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) ||\n                Environment.MEDIA_MOUNTED_READ_ONLY.equals(Environment.getExternalStorageState())) {\n            return true;\n        }\n        return false;\n    }\n    ```", "```kt\n    public void writeFile(View view) {\n        if (isExternalStorageWritable()) {\n            try {\n                File textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n                FileOutputStream fileOutputStream = new FileOutputStream(textFile);\n                fileOutputStream.write(mEditText.getText().toString().getBytes());\n                fileOutputStream.close();\n            } catch (java.io.IOException e) {\n                e.printStackTrace();\n                Toast.makeText(this, \"Error writing file\", Toast.LENGTH_LONG).show();\n            }\n        } else {\n            Toast.makeText(this, \"Cannot write to External Storage\", Toast.LENGTH_LONG).show();\n        }\n    }\n    ```", "```kt\n    public void readFile(View view) {\n        if (isExternalStorageReadable()) {\n            StringBuilder stringBuilder = new StringBuilder();\n            try {\n                File textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n                FileInputStream fileInputStream = new FileInputStream(textFile);\n                if (fileInputStream != null ) {\n                    InputStreamReader inputStreamReader = new InputStreamReader(fileInputStream);\n                    BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n                    String newLine = null;\n                    while ( (newLine = bufferedReader.readLine()) != null ) {\n                        stringBuilder.append(newLine+\"\\n\");\n                    }\n                    fileInputStream.close();\n                }\n                mEditText.setText(stringBuilder);\n            } catch (java.io.IOException e) {\n                e.printStackTrace();\n                Toast.makeText(this, \"Error reading file\", Toast.LENGTH_LONG).show();\n            }\n        } else {\n            Toast.makeText(this, \"Cannot read External Storage\", Toast.LENGTH_LONG).show();\n        }\n    }\n    ```", "```kt\nFile textFile = new File(Environment.getExternalStorageDirectory(), FILENAME);\n```", "```kt\ngetExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC)\n```", "```kt\nif (Environment.getExternalStorageDirectory().getFreeSpace() < RQUIRED_FILE_SPACE) {\n    //Not enough space\n} else {\n    //We have enough space\n}\n```", "```kt\ntextFile.delete()\n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:orientation=\"vertical\">\n        <TextView\n            android:id=\"@+id/textViewRaw\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:gravity=\"center_horizontal|center_vertical\"/>\n        <TextView\n            android:id=\"@+id/textViewAsset\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"0dp\"\n            android:layout_weight=\"1\"\n            android:gravity=\"center_horizontal|center_vertical\"/>\n    </LinearLayout>\n    ```", "```kt\n    private String getText(InputStream inputStream) {\n        StringBuilder stringBuilder = new StringBuilder();\n        try {;\n            if ( inputStream != null ) {\n                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);\n                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);\n                String newLine = null;\n                while ((newLine = bufferedReader.readLine()) != null ) {\n                    stringBuilder.append(newLine+\"\\n\");\n                }\n                inputStream.close();\n            }\n        } catch (java.io.IOException e) {\n            e.printStackTrace();\n        }\n        return stringBuilder.toString();\n    }\n    ```", "```kt\n    TextView textViewRaw = (TextView)findViewById(R.id.textViewRaw);\n    textViewRaw.setText(getText(this.getResources().openRawResource(R.raw.raw_text)));\n\n    TextView textViewAsset = (TextView)findViewById(R.id.textViewAsset);\n    try {\n        textViewAsset.setText(getText(this.getAssets().open(\"asset_text.txt\")));\n    } catch (IOException e) {\n        e.printStackTrace();\n    }\n    ```", "```kt\nthis.getResources().openRawResource(R.raw.raw_text)\n```", "```kt\nthis.getAssets().open(\"asset_text.txt\")\n```", "```kt\n    <EditText\n        android:id=\"@+id/et_word\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentTop=\"true\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:hint=\"Word\"/>\n    <EditText\n        android:id=\"@+id/et_definition\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_below=\"@+id/editTextWord\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:hint=\"Definition\"/>\n    <Button\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:text=\"Save\"\n        android:id=\"@+id/button_add_update\"\n        android:layout_alignParentRight=\"true\"\n        android:layout_alignParentTop=\"true\" />\n    <ListView\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:id=\"@+id/listView\"\n        android:layout_below=\"@+id/et_definition\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentBottom=\"true\" />\n    ```", "```kt\n    public class DictionaryDatabase extends SQLiteOpenHelper {\n    ```", "```kt\n    private static final String DATABASE_NAME = \"dictionary.db\";\n    private static final String TABLE_DICTIONARY = \"dictionary\";\n\n    private static final String FIELD_WORD = \"word\";\n    private static final String FIELD_DEFINITION = \"definition\";\n    private static final int DATABASE_VERSION = 1;\n    ```", "```kt\n    DictionaryDatabase(Context context) {\n        super(context, DATABASE_NAME, null, DATABASE_VERSION);\n    }\n\n    @Override\n    public void onCreate(SQLiteDatabase db) {\n        db.execSQL(\"CREATE TABLE \" + TABLE_DICTIONARY +\n                \"(_id integer PRIMARY KEY,\" +\n                FIELD_WORD + \" TEXT, \" +\n                FIELD_DEFINITION + \" TEXT);\");\n    }\n\n    @Override\n    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n        //Handle database upgrade as needed\n    }\n    ```", "```kt\n    public void saveRecord(String word, String definition) {\n        long id = findWordID(word);\n        if (id>0) {\n            updateRecord(id, word,definition);\n        } else {\n            addRecord(word,definition);\n        }\n    }\n\n    public long addRecord(String word, String definition) {\n        SQLiteDatabase db = getWritableDatabase();\n\n        ContentValues values = new ContentValues();\n        values.put(FIELD_WORD, word);\n        values.put(FIELD_DEFINITION, definition);\n        return db.insert(TABLE_DICTIONARY, null, values);\n    }\n\n    public int updateRecord(long id, String word, String definition) {\n        SQLiteDatabase db = getWritableDatabase();\n        ContentValues values = new ContentValues();\n        values.put(\"_id\", id);\n        values.put(FIELD_WORD, word);\n        values.put(FIELD_DEFINITION, definition);\n        return db.update(TABLE_DICTIONARY, values, \"_id = ?\", new String[]{String.valueOf(id)});\n    }\n    public int deleteRecord(long id) {\n        SQLiteDatabase db = getWritableDatabase();\n        return db.delete(TABLE_DICTIONARY, \"_id = ?\", new String[]{String.valueOf(id)});\n    }\n    ```", "```kt\n    public long findWordID(String word) {\n        long returnVal = -1;\n        SQLiteDatabase db = getReadableDatabase();\n        Cursor cursor = db.rawQuery(\"SELECT _id FROM \" + TABLE_ DICTIONARY + \" WHERE \" + FIELD_WORD + \" = ?\", new String[]{word});\n        Log.i(\"findWordID\",\"getCount()=\"+cursor.getCount());\n        if (cursor.getCount() == 1) {\n            cursor.moveToFirst();\n            returnVal = cursor.getInt(0);\n        }\n        return returnVal;\n    }\n\n    public String getDefinition(long id) {\n        String returnVal = \"\";\n        SQLiteDatabase db = getReadableDatabase();\n        Cursor cursor = db.rawQuery(\"SELECT definition FROM \" + TABLE_ DICTIONARY + \" WHERE _id = ?\", new String[]{String.valueOf(id)});\n        if (cursor.getCount() == 1) {\n            cursor.moveToFirst();\n            returnVal = cursor.getString(0);\n        }\n        return returnVal;\n    }\n\n    public Cursor getWordList() {\n        SQLiteDatabase db = getReadableDatabase();\n        String query = \"SELECT _id, \" + FIELD_WORD + \" FROM \" + TABLE_DICTIONARY + \" ORDER BY \" + FIELD_WORD + \" ASC\";\n        return db.rawQuery(query, null);\n    }\n    ```", "```kt\n    EditText mEditTextWord;\n    EditText mEditTextDefinition;\n    DictionaryDatabase mDB;\n    ListView mListView;\n    ```", "```kt\n    private void saveRecord() {\n        mDB.saveRecord(mEditTextWord.getText().toString(), mEditTextDefinition.getText().toString());\n        mEditTextWord.setText(\"\");\n        mEditTextDefinition.setText(\"\");\n        updateWordList();\n    }\n    ```", "```kt\n    private void updateWordList() {\n        SimpleCursorAdapter simpleCursorAdapter = new SimpleCursorAdapter(\n            this,\n            android.R.layout.simple_list_item_1,\n            mDB.getWordList(),\n            new String[]{\"word\"},\n            new int[]{android.R.id.text1},\n            0);\n        mListView.setAdapter(simpleCursorAdapter);\n    }\n    ```", "```kt\n    mDB = new DictionaryDatabase(this);\n\n    mEditTextWord = (EditText)findViewById(R.id.editTextWord);\n    mEditTextDefinition = (EditText)findViewById(R.id.editTextDefinition);\n\n    Button buttonAddUpdate = (Button)findViewById(R.id.buttonAddUpdate);\n    buttonAddUpdate.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            saveRecord();\n        }\n    });\n\n    mListView = (ListView)findViewById(R.id.listView);\n    mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n        @Override\n        public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n            Toast.makeText(MainActivity.this, mDB.getDefinition(id),Toast.LENGTH_SHORT).show();\n        }\n    });\n    mListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n        @Override\n        public boolean onItemLongClick(AdapterView<?> parent, \n            View view, int position, long id) {\n            Toast.makeText(MainActivity.this, \"Records deleted = \" + mDB.deleteRecord(id), Toast.LENGTH_SHORT).show();\n            updateWordList();\n            return true;\n        }\n    });\n    updateWordList();\n    ```", "```kt\nDictionaryDatabase(Context context) {\n    super(context, DATABASE_NAME, null, DATABASE_VERSION);\n}\n```", "```kt\nmDB = new DictionaryDatabase(this);\n```", "```kt\n    public class DictionaryAdapter extends CursorAdapter {\n        public DictionaryAdapter(Context context, Cursor c, int flags) {\n            super(context, c, flags);\n        }\n\n        @Override\n        public View newView(Context context, Cursor cursor, ViewGroup parent) {\n            return LayoutInflater.from(context).inflate(android.R.layout.simple_list_item_1,parent,false);\n        }\n\n        @Override\n        public void bindView(View view, Context context, Cursor cursor) {\n            TextView textView = (TextView)view.findViewById(android.R.id.text1);\n            textView.setText(cursor.getString(getCursor().getColumnIndex(\"word\")));\n        }\n    }\n    ```", "```kt\n    public class DictionaryLoader extends CursorLoader {\n        Context mContext;\n        public DictionaryLoader(Context context) {\n            super(context);\n            mContext = context;\n        }\n\n        @Override\n        public Cursor loadInBackground() {\n            DictionaryDatabase db = new DictionaryDatabase(mContext);\n            return db.getWordList();\n        }\n    }\n    ```", "```kt\n    public class MainActivity extends AppCompatActivity implements {\n    ```", "```kt\n    EditText mEditTextWord;\n    EditText mEditTextDefinition;\n    DictionaryDatabase mDB;\n    ListView mListView;\n    DictionaryAdapter mAdapter;\n    ```", "```kt\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n\n        mDB = new DictionaryDatabase(this);\n\n        mEditTextWord = (EditText) findViewById(R.id.editTextWord);\n        mEditTextDefinition = (EditText) findViewById(R.id.editTextDefinition);\n\n        Button buttonAddUpdate = (Button) findViewById(R.id.buttonAddUpdate);\n        buttonAddUpdate.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                saveRecord();\n            }\n        });\n\n        mListView = (ListView) findViewById(R.id.listView);\n        mListView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            @Override\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n                Toast.makeText(MainActivity.this, mDB.getDefinition(id), Toast.LENGTH_SHORT).show();\n            }\n        });\n        mListView.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            @Override\n            public boolean onItemLongClick(AdapterView<?> parent, View view, int position, long id) {\n                Toast.makeText(MainActivity.this, \"Records deleted = \" + mDB.deleteRecord(id), Toast.LENGTH_SHORT).show();\n                getSupportLoaderManager().restartLoader(0, null, MainActivity.this);\n                return true;\n            }\n        });\n        getSupportLoaderManager().initLoader(0, null, this);\n        mAdapter = new DictionaryAdapter(this,mDB.getWordList(),0);\n        mListView.setAdapter(mAdapter);\n    }\n    ```", "```kt\n    private void saveRecord() {\n        mDB.saveRecord(mEditTextWord.getText().toString(), mEditTextDefinition.getText().toString());\n        mEditTextWord.setText(\"\");\n        mEditTextDefinition.setText(\"\");\n        getSupportLoaderManager().restartLoader(0, null, MainActivity.this);\n    }\n    ```", "```kt\n    @Override\n    public Loader<Cursor> onCreateLoader(int id, Bundle args) {\n        return new DictionaryLoader(this);\n    }\n\n    @Override\n    public void onLoadFinished(Loader<Cursor> loader, Cursor data) {\n        mAdapter.swapCursor(data);\n    }\n\n    @Override\n    public void onLoaderReset(Loader<Cursor> loader) {\n        mAdapter.swapCursor(null);\n    }\n    ```"]