- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: On 9th January, 2007, Apple officially launched the iPhone, and the world of
    user interface design shifted. While tablet PCs had been around for a while, the
    iPhone was the first device to give so many people a portable touchscreen, and
    people loved it. Just over a year later, Google and the Open Handset Alliance
    announced Android which in many ways is the direct competitor to iPhone.
  prefs: []
  type: TYPE_NORMAL
- en: What is it about touchscreen phones that we love? The answer is simple—feedback.
    Touchscreens offer a way to directly manipulate on-screen objects, which in the
    past had to be driven through a keyboard, mouse, joystick, or other input device.
    The touchscreen model of direct manipulation has a large impact on the way we
    think about our user interfaces as developers, and changes the expectations a
    user has for the application. Touchscreen devices require us to stop thinking
    in terms of forms, and start thinking about object-oriented user interfaces.
  prefs: []
  type: TYPE_NORMAL
- en: 'Android is used as the primary operating system for a rapidly expanding range
    of consumer electronics, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Smartphones
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Netbooks
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tablets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Some desktop systems
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: While all of these devices have different purposes and specifications, all of
    them run Android. This is unlike many other operating environments which are almost
    always have a special purpose. The services and the APIs they provide to developers
    generally reflect their target hardware. Android on the other hand makes the assumption
    that a single application may be required to run on many different types of devices,
    with very different hardware capabilities and specifications, and makes it as
    easy as possible for developers to handle the differences between these devices
    simply and elegantly.
  prefs: []
  type: TYPE_NORMAL
- en: New challenges
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As Android and the touchscreen devices it powers become increasingly common,
    they will bring a new set of challenges to user interface design and development:'
  prefs: []
  type: TYPE_NORMAL
- en: You generally don't have a mouse
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You may have more than one pointing device
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You often don't have a keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Any keyboard that does exist may be a software keyboard
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A software keyboard may consume some of your application's screenspace
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The software keyboard reduces the amount of screen space available to your application,
    and in much the same vein, if there is a hardware keyboard present it may or may
    not always be exposed to the user. Therefore, not only are different Android devices
    different, but they may also appear to change features while your application
    is running.
  prefs: []
  type: TYPE_NORMAL
- en: The rule of finger
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most Android devices have touchscreens (although this is not a requirement).
    The first restriction placed on any touchscreen user interface is the size of
    the human forefinger, which of course varies widely from one person to another.
    If a widget is too small on the screen, it won't be clear what the user is trying
    to touch. You'll notice that most Android widgets take up plenty of space, and
    have more than the normal amount of padding around them. On a touchscreen device,
    you can't rely on pixel-perfect precision. You need to make sure that when the
    user touches a widget, they make contact, and they don't accidentally touch another
    widget.
  prefs: []
  type: TYPE_NORMAL
- en: The magic touch
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Another impact touchscreens have on user interface design is that an application
    and all the widgets that it uses must be entirely self-explanatory (even more
    than usual). Far too often, we substitute good user interface planning and design
    with a roll-over or tooltip to indicate a widget's function. On a touchscreen
    device, there is no mouse or pointing device. The first interaction it has with
    the user is when they touch it, and they will expect something to happen.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**A touchy subject**'
  prefs: []
  type: TYPE_NORMAL
- en: Most Android devices have a touchscreen, but it's not a requirement. The quality
    of a touchscreen also varies wildly from device to device. The category of touchscreens
    and their capabilities will also vary from one device to the next, depending on
    the intended use of the device and often its intended market segment.
  prefs: []
  type: TYPE_NORMAL
- en: A smaller view on the world
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Most Android devices are small, and as a result have smaller screens and generally
    fewer pixels than a normal PC or laptop. This lack of size limits the size of
    the widgets. Widgets must be big enough to touch safely, but we also need to pack
    as much information onto the screen as possible. So don't give your users information
    that they don't want, and also avoid asking them for information you don't need.
  prefs: []
  type: TYPE_NORMAL
- en: Classic user interface principals
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Here are some core guidelines which every user interface should follow. These
    guidelines are what will keep your users happy, and ensure your application is
    successful. Throughout the rest of the book, we'll be walking through these guidelines
    with practical examples of improvements that can be made to a user interface.
  prefs: []
  type: TYPE_NORMAL
- en: Consistency
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is the cornerstone of good user interface design. A button should look
    like a button. Make sure that the layout of each screen has a relationship with
    every other screen in your application. People often mistake this principle for
    "stick to the platform look and feel". Look and feel is important, consistency
    mostly applies to the layout and overall experience of the application, rather
    than the color scheme.
  prefs: []
  type: TYPE_NORMAL
- en: Recycling your interface
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The easiest way to maintain a consistent user interface, is to recycle as much
    of it as possible. At first glance, this suggestion looks merely like a "good
    object-oriented" practice. However, a closer look will reveal ways to reuse graphical
    widgets in ways you hadn't thought of. By changing the visibility of various widgets,
    or you can reuse an edit screen to view list items of the intended type.
  prefs: []
  type: TYPE_NORMAL
- en: Simplicity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This is especially important in a phone-based application. Often, when a user
    encounters a new application, it's because they are looking for something. They
    may not have the time (or more often patience) to learn a new user interface.
    Make sure that your application asks for as little as possible, and guides the
    user to the exact information they want in as few steps as possible.
  prefs: []
  type: TYPE_NORMAL
- en: The Zen approach
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Generally, when you are using a mobile device, your time is limited. You may
    also be using an application in less-than-ideal circumstances (perhaps, in a train).
    The lesser information a user needs to give an application, and the lesser they
    need to absorb from it, the better. Stripping away options and information also
    leads to a shorter learning-curve.
  prefs: []
  type: TYPE_NORMAL
- en: Android's hidden menu
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A very useful feature of Android is the hidden menu structure. The menu is only
    visible when the user presses the "Menu" button, which would generally mean, they're
    looking for something that isn't currently on the screen. Typically, a user shouldn't
    need to open a menu. However, it's a good way of hiding advanced features until
    they are needed.
  prefs: []
  type: TYPE_NORMAL
- en: Feedback
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Feedback is what makes a touchscreen device exciting. When you drag an object,
    it sticks to your finger across the screen until you let go of it. When the users
    puts their finger on your application, they expect some reaction. However, you
    don't want to get in their way—instead of showing an error message when they touch
    a button, disable the button until it's valid to use, or don't show it at all.
  prefs: []
  type: TYPE_NORMAL
- en: Location and navigation
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: When you're in a place you've never been to previously, it's easy to get disoriented,
    or lost. The same is true for a piece of software. Just because the application
    makes sense to you, the developer, it doesn't mean it seems logical to your user.
    Adding transition animations, breadcrumbs, and progress gauges help the user to
    identify where in the application they are, and what's happening.
  prefs: []
  type: TYPE_NORMAL
- en: The road to recovery
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A common way to tell users that something is wrong on a desktop application,
    or on the web is to open an error dialog. On a mobile device, people want smoother
    use of an application. While in a normal application you may inform the user that
    they selected an invalid option, in a mobile application, you generally want to
    make sure they can't select that option in the first place. Also, don't make them
    scroll through huge lists of options. Instead, allow them to filter through the
    list using an auto-complete or something similar.
  prefs: []
  type: TYPE_NORMAL
- en: When something goes wrong, be nice, and be helpful—don't tell the user, "I couldn't
    find any flights for your search". Instead tell them, "There were no available
    flights for your search, but if you're prepared to leave a day earlier, here is
    a list of the available flights". Always make sure your user can take another
    step forward without having to go "Back" (although the option to go backwards
    should always exist).
  prefs: []
  type: TYPE_NORMAL
- en: The Android way
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Android platform is in many ways similar to developing applications for
    the web. There are many devices, made by many manufactures, with different capabilities
    and specifications. Yet as a developer, you will want your users to have the most
    consistent experience possible. Unlike a web browser, Android has built-in mechanisms
    for coping with these differences, and even leveraging them.
  prefs: []
  type: TYPE_NORMAL
- en: 'We''ll be looking at Android from the point of view of a user rather than having
    a purely development-centric approach. We''ll cover topics such as:'
  prefs: []
  type: TYPE_NORMAL
- en: What user interface elements Android provides
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How an Android application is assembled
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different types of Android layouts
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Presenting various types of data to the user
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Customising of existing Android widgets
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Tricks and tools to keep user interfaces looking great
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Integration between applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We're about to take a jump into building user interfaces for Android devices—all
    Android devices, from the highest speed CPU to the smallest screen.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Chapter 1](ch01.html "Chapter 1. Developing a Simple Activity"), *Developing
    a Simple Activity* introduces the basics of building an Android application, starting
    with a simple user interface. It also covers the various options available to
    you when implementing your design as code.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 2](ch02.html "Chapter 2. Presenting Data for Views"), *Views With
    Adapters* shows us how to leverage Adapter-based widgets, Android''s answer to
    the Model-View-Controller (MVC) structure. Learn about these widgets, and where
    they will best serve you.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 3](ch03.html "Chapter 3. Developing with Specialized Android Widgets"),
    *Specialized Android Views* takes a close look at some of the more specialized
    widgets that the Android platform provides, and how they relate to the mundane
    widgets. This chapter covers widgets such as the gallery and rating-bar, and how
    they can be used and styled.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 4](ch04.html "Chapter 4. Leveraging Activities and Intents"), *Activities
    and Intents* discusses more about how Android runs your application, and from
    that point-of-view, how best to write its user interfaces. This chapter takes
    a look at how to make sure that your application will behave the way users expect
    it to, with minimal effort on your part.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 5](ch05.html "Chapter 5. Developing Non-linear Layouts"), *Non*-*Linear
    Layouts* takes a look at some of the advanced layout techniques which Android
    offers. It talks about the best way to present different screens to the user while
    taking into account the wide discrepancy in the screens on Android devices.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 6](ch06.html "Chapter 6. Validating and Handling Input Data"), *Input
    and Validation* provides tips regarding taking input from a user, and how to keep
    this experience as painless as possible. This chapter investigates the different
    input widgets Android provides and how to configure them best, depending on the
    situation. Also, when everything else fails, how best to inform your users that
    what they are doing is wrong.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 7](ch07.html "Chapter 7. Animating Widgets and Layouts"), *Animating
    Widgets and Layouts* will inform the reader as to where, when, why, and how to
    animate your Android user interfaces. It also sheds light on what kind of animations
    are provided by default, how to compose them together, and how to build your own.
    This chapter looks at the importance of animations in a mobile user interface
    and demonstrates how complex animations are made easy by Android.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 8](ch08.html "Chapter 8. Designing Content-centric Activities"), *Content*-*centric
    Design* details how to go about designing the screen layout, when presenting the
    user with information on the screen. This chapter looks at the pros and cons of
    some of the different display techniques which Android offers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 9](ch09.html "Chapter 9. Styling Android Applications"), *Styling
    Android Applications* shows us how to keep the look of our entire application
    consistent, in order to make our application easier to use.'
  prefs: []
  type: TYPE_NORMAL
- en: '[Chapter 10](ch10.html "Chapter 10. Building an Application Theme"), *Building
    an Application Theme* looks at the design process, and how application-wide themes
    can be applied to help your application stand out.'
  prefs: []
  type: TYPE_NORMAL
- en: What you need for this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Please have a look at "System Requirements" mentioned on the Andriod Developers
    website at [http://developer.android.com/sdk/requirements.html](http://developer.android.com/sdk/requirements.html).
  prefs: []
  type: TYPE_NORMAL
- en: The code for this book was tested on Ubuntu Linux 10.04 and Mac OS X.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book is aimed at developers with at least some Java experience who want
    to build applications on the Android platform. It will also be of use to people
    who have developed applications on the Android platform and would like to gain
    additional knowledge about its user interface design. It will also be a helpful
    reference for the numerous widgets and resource structures that the Android platform
    provides.
  prefs: []
  type: TYPE_NORMAL
- en: 'This book will also be helpful to:'
  prefs: []
  type: TYPE_NORMAL
- en: Java developers learning Android development
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: MIDP developers looking to broaden their skill-set
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: iPhone developers wanting to port applications
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Entrepreneurial Android developers wanting to widen their user base
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Conventions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this book, you will find several headings appearing frequently.
  prefs: []
  type: TYPE_NORMAL
- en: 'To give clear instructions of how to complete a procedure or task, we use:'
  prefs: []
  type: TYPE_NORMAL
- en: Time for action – heading
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Open the `res/layout/main.xml` layout resource in an editor or IDE.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Remove the default content within the `LinearLayout` element.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Instructions often need some extra explanation so that they make sense, so
    they are followed with:'
  prefs: []
  type: TYPE_NORMAL
- en: '*What just happened?*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This heading explains the working of tasks or instructions that you have just
    completed.
  prefs: []
  type: TYPE_NORMAL
- en: 'You will also find some other learning aids in the book, including:'
  prefs: []
  type: TYPE_NORMAL
- en: Pop quiz – heading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These are short multiple choice questions intended to help you test your own
    understanding.
  prefs: []
  type: TYPE_NORMAL
- en: Have a go hero – heading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: These set practical challenges and give you ideas for experimenting with what
    you have learned.
  prefs: []
  type: TYPE_NORMAL
- en: You will also find a number of styles of text that distinguish between different
    kinds of information. Here are some examples of these styles, and an explanation
    of their meaning.
  prefs: []
  type: TYPE_NORMAL
- en: 'Code words in text are shown as follows: "We''ll start off by creating a selector
    `Activity`, and a simple `NewsFeedActivity`".'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**New terms** and **important words** are shown in bold. Words that you see
    on the screen, in menus or dialog boxes for example, appear in the text like this:
    "Generally users are more inclined to feel a sense of trust if they pick the **Buy
    Music** button and are not suddenly whisked off to their web browser".'
  prefs: []
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Warnings or important notes appear in a box like this.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Tips and tricks appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Reader feedback
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book—what you liked or may have disliked. Reader feedback is important for
    us to develop titles that you really get the most out of.
  prefs: []
  type: TYPE_NORMAL
- en: To send us general feedback, simply send an e-mail to `<[feedback@packtpub.com](mailto:feedback@packtpub.com)>`,
    and mention the book title via the subject of your message.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a book that you need and would like to see us publish, please send
    us a note in the **SUGGEST A TITLE** form on [www.packtpub.com](http://www.packtpub.com)
    or e-mail `<[suggest@packtpub.com](mailto:suggest@packtpub.com)>`.
  prefs: []
  type: TYPE_NORMAL
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide on [www.packtpub.com/authors](http://www.packtpub.com/authors).
  prefs: []
  type: TYPE_NORMAL
- en: Customer support
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  prefs: []
  type: TYPE_NORMAL
- en: Tip
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Downloading the example code for this book**'
  prefs: []
  type: TYPE_NORMAL
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.PacktPub.com](http://www.PacktPub.com). If you
    purchased this book elsewhere, you can visit [http://www.PacktPub.com/support](http://www.PacktPub.com/support)
    and register to have the files e-mailed directly to you.
  prefs: []
  type: TYPE_NORMAL
- en: Errata
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books—maybe a mistake in the text
    or the code—we would be grateful if you would report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/support](http://www.packtpub.com/support),
    selecting your book, clicking on the **errata submission form** link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded on our website, or added to any list
    of existing errata, under the Errata section of that title. Any existing errata
    can be viewed by selecting your title from [http://www.packtpub.com/support](http://www.packtpub.com/support).
  prefs: []
  type: TYPE_NORMAL
- en: Piracy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Piracy of copyright material on the Internet is an ongoing problem across all
    media. At Packt, we take the protection of our copyright and licenses very seriously.
    If you come across any illegal copies of our works, in any form, on the Internet,
    please provide us with the location address or website name immediately so that
    we can pursue a remedy.
  prefs: []
  type: TYPE_NORMAL
- en: Please contact us at `<[copyright@packtpub.com](mailto:copyright@packtpub.com)>`
    with a link to the suspected pirated material.
  prefs: []
  type: TYPE_NORMAL
- en: We appreciate your help in protecting our authors, and our ability to bring
    you valuable content.
  prefs: []
  type: TYPE_NORMAL
- en: Questions
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You can contact us at `<[questions@packtpub.com](mailto:questions@packtpub.com)>`
    if you are having a problem with any aspect of the book, and we will do our best
    to address it.
  prefs: []
  type: TYPE_NORMAL
