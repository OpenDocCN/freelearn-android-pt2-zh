["```kt\n    $ sudo apt-get install ant1.8\n\n    ```", "```kt\n    $ sudo port install apache-ant\n\n    ```", "```kt\n    $ android create project \\\n    --target android-15 \\\n    --name HelloNDK \\\n    --path ~/Desktop/book-code/chapter3/HelloNDK \\\n    --activity HelloNDKActivity \\\n    --package cookbook.chapter3\n\n    ```", "```kt\n    $ cd ~/Desktop/book-code/chapter3/HelloNDK\n    $ mkdir jni\n\n    ```", "```kt\n    #include <string.h>\n    #include <jni.h>\n\n    jstring Java_cookbook_chapter3_HelloNDKActivity_naGetHelloNDKStr(JNIEnv* pEnv, jobject pObj)\n    {\n       return (*pEnv)->NewStringUTF(pEnv, \"Hello NDK!\");\n    }\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n    include $(CLEAR_VARS)\n    LOCAL_MODULE    := hello\n    LOCAL_SRC_FILES := hello.c\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    $ ndk-build\n\n    ```", "```kt\n    package cookbook.chapter3;\n    import android.app.Activity;\n    import android.os.Bundle;\n    import android.widget.TextView;\n    public class HelloNDKActivity extends Activity {\n       @Override\n       public void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           TextView tv = new TextView(this);\n           tv.setTextSize(30);\n           tv.setText(naGetHelloNDKStr());\n           this.setContentView(tv);\n       }\n       public native String naGetHelloNDKStr();\n       static {\n           System.loadLibrary(\"hello\");\n       }\n    }\n    ```", "```kt\n    $ android update project --target android-15 --name HelloNDK \\\n    --path ~/Desktop/book-code/chapter3/HelloNDK\n\n    ```", "```kt\n    $ ant debug\n\n    ```", "```kt\n    $ android --verbose create avd --name android_4_0_3 \\\n    --target android-15 --sdcard 32M\n\n    ```", "```kt\n    $ emulator -wipe-data -avd android_4_0_3\n\n    ```", "```kt\n    $ adb devices\n\n    ```", "```kt\n    $ adb -s emulator-5554 install bin/HelloNDK-debug.apk\n\n    ```", "```kt\n    $ adb shell am start -n com.package.name/com.package.name.ActivityName\n\n    ```", "```kt\n    $ adb -s emulator-5554 shell am start -n cookbook.chapter3/cookbook.chapter3.HelloNDKActivity\n\n    ```", "```kt\n    $ adb -s HT21HTD09025 install bin/HelloNDK-debug.apk\n\n    ```", "```kt\n    $ adb -s HT21HTD09025 shell am start -n cookbook.chapter3/cookbook.chapter3.HelloNDKActivity\n\n    ```", "```kt\n    $ keytool -genkey -v -keystore release_key.keystore \\\n    -alias androidkey \\\n    -keyalg RSA -keysize 2048 -validity 10000 \\\n    -dname \"CN=MyCompany, OU=MyAndroidDev, O=MyOrg, L=Singapore, S=Singapore, C=65\" \\\n    -storepass testkspw -keypass testkpw\n\n    ```", "```kt\n    $ jarsigner -verbose -keystore <keystore name> -storepass <store password> -keypass <key password> -signedjar <name of the signed output> <unsigned input file name> <alias>\n\n    ```", "```kt\n    $ zipalign -v 4 <app apk file name>  <aligned apk file name>\n\n    ```", "```kt\n    #include <jni.h>\n\n    jstring getString(JNIEnv* env) {\n      return env->NewStringUTF(\"Hello NDK\");\n    }\n\n    extern \"C\" {\n      JNIEXPORT jstring JNICALL Java_cookbook_chapter3_HelloNDKEclipseActivity_getString(JNIEnv* env, jobject o){\n        return getString(env);\n      }\n    }\n    ```", "```kt\n    package cookbook.chapter3;\n\n    import android.os.Bundle;\n    import android.app.Activity;\n    import android.widget.TextView;\n\n    public class HelloNDKEclipseActivity extends Activity {\n      @Override\n       public void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           TextView tv = new TextView(this);\n           tv.setTextSize(30);\n           tv.setText(getString());\n           this.setContentView(tv);\n       }\n       public native String getString();\n       static {\n           System.loadLibrary(\"HelloNDKEclipse\");\n       }\n    }\n    ```", "```kt\ncassert, cctype, cerrno, cfloat, climits, cmath, csetjmp, csignal, cstddef, cstdint, cstdio, cstdlib, cstring, ctime, cwchar, new, stl_pair.h, typeinfo, utility\n```", "```kt\n    #include <jni.h>\n\n    jstring getString(JNIEnv* env) {\n      return env->NewStringUTF(\"Hello NDK\");\n    }\n\n    extern \"C\" {\n      JNIEXPORT jstring JNICALL Java_cookbook_chapter3_HelloNDKMultipleABIActivity_getString(JNIEnv* env, jobject o){\n        return getString(env);\n      }\n    }\n    ```", "```kt\n    package cookbook.chapter3;\n\n    import android.os.Bundle;\n    import android.app.Activity;\n    import android.widget.TextView;\n\n    public class HelloNDKMultipleABIActivity extends Activity {\n\n       @Override\n       public void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           TextView tv = new TextView(this);\n           tv.setTextSize(30);\n           tv.setText(getString());\n           this.setContentView(tv);\n       }\n       public native String getString();\n       static {\n           System.loadLibrary(\"HelloNDKMultipleABI\");\n       }\n    }\n    ```", "```kt\n    APP_ABI := armeabi armeabi-v7a\n    ```", "```kt\n    #APP_ABI := armeabi armeabi-v7a\n    APP_ABI := armeabi\n    ```", "```kt\n    #APP_ABI := armeabi armeabi-v7a\n    #APP_ABI := armeabi\n    APP_ABI := armeabi-v7a\n    ```", "```kt\n    LOCAL_STATIC_LIBRARIES := cpufeatures\n    ```", "```kt\n    $(call import-module,cpufeatures)\n    ```", "```kt\n    AndroidCpuFamily   android_getCpuFamily(); \n    ```", "```kt\n    ANDROID_CPU_FAMILY_MIPS \n    ANDROID_CPU_FAMILY_MIPS \n    ANDROID_CPU_FAMILY_ARM \n    ```", "```kt\n    uint64_t   android_getCpuFeatures();\n    ```", "```kt\nuint64_t features = android_getCpuFeatures();\nif ((features & ANDROID_CPU_ARM_FEATURE_NEON) == 0) {\n  //NEON is not available\n} else {\n  //NEON is available\n}\n```", "```kt\nint         android_getCpuCount(void);\n```", "```kt\n    #ifndef COOKBOOK_LOG_H\n    #define COOKBOOK_LOG_H\n\n    #include <android/log.h>\n\n    #define LOG_LEVEL 9\n    #define LOG_TAG \"NDKLoggingDemo\"\n\n    #define LOGU(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_UNKNOWN, LOG_TAG, __VA_ARGS__);}\n    #define LOGD(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_DEFAULT, LOG_TAG, __VA_ARGS__);}\n    #define LOGV(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_VERBOSE, LOG_TAG, __VA_ARGS__);}\n    #define LOGDE(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__);}\n    #define LOGI(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__);}\n    #define LOGW(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_WARN, LOG_TAG, __VA_ARGS__);}\n    #define LOGE(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__);}\n    #define LOGF(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_FATAL, LOG_TAG, __VA_ARGS__);}\n    #define LOGS(level, ...) if (level <= LOG_LEVEL) {__android_log_print(ANDROID_LOG_SILENT, LOG_TAG, __VA_ARGS__);}\n\n    #endif\n    ```", "```kt\n    #include <jni.h>\n    #include \"mylog.h\"\n\n    void outputLogs() {\n      LOGU(9, \"unknown log message\");\n      LOGD(8, \"default log message\");\n      LOGV(7, \"verbose log message\");\n      LOGDE(6, \"debug log message\");\n      LOGI(5, \"information log message\");\n      LOGW(4, \"warning log message\");\n      LOGE(3, \"error log message\");\n      LOGF(2, \"fatal error log message\");\n      LOGS(1, \"silent log message\");\n    }\n\n    extern \"C\" {\n      JNIEXPORT void JNICALL Java_cookbook_chapter3_NDKLoggingDemoActivity_LoggingDemo(JNIEnv* env, jobject o){\n        outputLogs();\n      }\n    }\n    ```", "```kt\n    package cookbook.chapter3;\n\n    import android.os.Bundle;\n    import android.app.Activity;\n\n    public class NDKLoggingDemoActivity extends Activity {\n       @Override\n       public void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           LoggingDemo();\n       }\n       public native void LoggingDemo();\n       static {\n           System.loadLibrary(\"NDKLoggingDemo\");\n       }\n    }\n    ```", "```kt\n    LOCAL_PATH := $(call my-dir)\n\n    include $(CLEAR_VARS)\n\n    LOCAL_MODULE    := NDKLoggingDemo\n    LOCAL_SRC_FILES := NDKLoggingDemo.cpp\n    LOCAL_LDLIBS := -llog\n    include $(BUILD_SHARED_LIBRARY)\n    ```", "```kt\n    $ adb logcat -c\n    $ adb logcat NDKLoggingDemo:I *:S -v time\n\n    ```", "```kt\n    $ adb logcat NDKLoggingDemo:V *:S -v time\n\n    ```", "```kt\n    #define LOG_LEVEL 4 \n    ```", "```kt\nadb logcat NDKLoggingDemo:I *:S -v time\n```", "```kt\n    package cookbook.chapter3;\n    import android.os.Bundle;\n    import android.app.Activity;\n\n    public class CheckJNIDemoActivity extends Activity {\n       @Override\n       public void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           setContentView(R.layout.activity_check_jnidemo);\n           CheckJNIDemo();\n       }\n       public native int[] CheckJNIDemo();\n       static {\n           System.loadLibrary(\"CheckJNIDemo\");\n       }\n    }\n    ```", "```kt\n        $ adb shell stop\n        $ adb shell setprop dalvik.vm.checkjni true\n        $ adb shell start\n\n        ```", "```kt\n        $ adb shell setprop debug.checkjni 1\n\n        ```", "```kt\n    #include <jni.h>\n    #include <unistd.h>\n\n    int multiply(int i, int j) {\n      int x = i * j;\n      return x;\n    }\n\n    extern \"C\" {\n      JNIEXPORT jint JNICALL Java_cookbook_chapter3_HelloNDKGDBActivity_multiply(JNIEnv* env, jobject o, jint pi, jint pj){\n        int i = 1, j = 0;\n        while (i) {\n          j=(++j)/100; \n\n        }\n        return multiply(pi, pj);\n      }\n    }\n    ```", "```kt\n    package cookbook.chapter3;\n\n    import android.os.Bundle;\n    import android.widget.TextView;\n    import android.app.Activity;\n\n    public class HelloNDKGDBActivity extends Activity {\n\n       @Overridepublic void onCreate(Bundle savedInstanceState) {\n           super.onCreate(savedInstanceState);\n           TextView tv = new TextView(this);\n           tv.setTextSize(30);\n           tv.setText(\"10 x 20 = \" + multiply(10, 20));\n           this.setContentView(tv);\n       }\n       public native int multiply(int a, int b);\n       static {\n           System.loadLibrary(\"HelloNDKGDB\");\n       }\n    }\n    ```", "```kt\n    <application\n           android:icon=\"@drawable/ic_launcher\"\n           android:label=\"@string/app_name\"\n           android:theme=\"@style/AppTheme\"\n           android:debuggable=\"true\"\n           >\n    ```", "```kt\n    $ ndk-gdb\n\n    ```", "```kt\n    $ sudo apt-get install cgdb\n\n    ```", "```kt\n    $ ./configure --prefix=/usr/local\n    $ make\n    $ sudo make install\n\n    ```", "```kt\n    $ sudo port install cgdb\n\n    ```", "```kt\n    $ cp $ANDROID_NDK/ndk-gdb $ANDROID_NDK/ndk-cgdb\n\n    ```", "```kt\n    GDBCLIENT=${TOOLCHAIN_PREFIX}gdb\n\n    ```", "```kt\n    GDBCLIENT=\"cgdb -d ${TOOLCHAIN_PREFIX}gdb --\"\n\n    ```", "```kt\n    ndk-cgdb\n\n    ```"]