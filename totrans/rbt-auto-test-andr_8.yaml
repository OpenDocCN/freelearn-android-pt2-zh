- en: Chapter 8. Robotium with Maven
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章：使用 Maven 的 Robotium
- en: This chapter introduces the use of the Maven tool to attach an Android project
    for adding to a build process. This chapter also explains different configurations/installations
    you need to use Robotium with Maven.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节介绍如何使用 Maven 工具将 Android 项目加入到构建过程中。同时，本章也解释了使用 Maven 配合 Robotium 所需的不同配置和安装步骤。
- en: Automate Android app built with Maven
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Maven 自动化构建的 Android 应用
- en: '![Automate Android app built with Maven](img/8010OS_08_01.jpg)'
  id: totrans-3
  prefs: []
  type: TYPE_IMG
  zh: '![使用 Maven 自动化构建的 Android 应用](img/8010OS_08_01.jpg)'
- en: Maven is basically a software project management tool based on the concept of
    **Project Object Model** (**POM**), which is required at the project root and
    helps to build a project.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 本质上是一个基于**项目对象模型**（**POM**）概念的项目管理工具，它需要在项目根目录中，并帮助构建项目。
- en: It can manage a project's build, reporting, and documentation from a central
    piece of information.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以从一个中心信息管理项目的构建、报告和文档。
- en: Maven features
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Maven 特性
- en: 'Maven''s primary goal is to allow a developer to comprehend the complete state
    of a development effort in the shortest period of time. To attain this goal, there
    are several areas of concern that Maven attempts to deal with:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: Maven 的主要目标是让开发者能够在最短时间内理解开发工作的完整状态。为了达到这个目标，Maven 尝试处理以下几个关注领域：
- en: '| Feature | Description |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| 特性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Repeatable Builds | You can build the project repeatedly on the build server.
    |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 可重复构建 | 你可以在构建服务器上反复构建项目 |'
- en: '| Focus on Automation | Maven puts you in the right mindset of automating processes
    in software development. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 关注自动化 | Maven 让你形成在软件开发中自动化流程的正确心态 |'
- en: '| Dependency Management | Maven will resolve and manage your dependencies.
    |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 依赖管理 | Maven 将解决并管理你的依赖关系 |'
- en: '| Standardization | New developers, who understand Maven, will instantly know
    how to build, release, test, and thus, remove a lot of learning overhead. |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 标准化 | 理解 Maven 的新开发者将立即知道如何构建、发布、测试，从而减少很多学习负担 |'
- en: '| Plugins | There are a lot of plugins available to carry out different tasks.
    These are configured by adding a reference into the `pom.xml` file. |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 插件 | 有很多插件可用于执行不同的任务。这些通过在 `pom.xml` 文件中添加引用来进行配置 |'
- en: '| Testing | This gives you the ability to run tests and integration tests as
    part of your project lifecycle. |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| 测试 | 这使你能够将运行测试和集成测试作为项目生命周期的一部分 |'
- en: To get Maven up and running for Android, you must use the **Android Maven Plugin**
    for the existing Eclipse project. You can install Maven from the link mentioned
    in the preceding figure.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 Android 上使用 Maven，你必须为现有的 Eclipse 项目使用**Android Maven 插件**。你可以从前面提到的图中链接下载
    Maven。
- en: 'The homepage of the Android Maven Plugin is located at the following website:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: Android Maven 插件的首页位于以下网站：
- en: '[https://code.google.com/p/maven-android-plugin/](https://code.google.com/p/maven-android-plugin/)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://code.google.com/p/maven-android-plugin/](https://code.google.com/p/maven-android-plugin/)'
- en: Setting up Android SDK and ADT
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 Android SDK 和 ADT
- en: You can create/build an Android project using the command-line tool that is
    provided by Android SDK tools. The same functionality is provided by ADT for Eclipse.
    You can also export Android applications manually via the Eclipse export wizard.
    Currently, Apache Ant is mostly used by the tools provided by Android SDK to build
    and deploy an application.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 Android SDK 工具提供的命令行工具来创建/构建一个 Android 项目。ADT 为 Eclipse 提供相同的功能。你也可以通过
    Eclipse 导出向导手动导出 Android 应用程序。目前，Apache Ant 主要被 Android SDK 提供的工具用来构建和部署应用程序。
- en: '![Setting up Android SDK and ADT](img/8010OS_08_02.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![设置 Android SDK 和 ADT](img/8010OS_08_02.jpg)'
- en: The new Gradle-based build system for Android apps is a huge improvement over
    the older Eclipse-, Ant-, and Maven-based applications. It has a simple declarative
    syntax and makes building different variants of your app (for example, staging
    vs. production) very easy. Gradle is also the default build system for the new
    Android Studio IDE, so there are lots of good reasons to migrate your apps.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 新的基于 Gradle 的 Android 应用构建系统比旧的基于 Eclipse、Ant 和 Maven 的应用程序有了巨大的改进。它有一个简单的声明式语法，使得构建应用的不同版本（例如，测试版与生产版）变得非常简单。Gradle
    也是新的 Android Studio IDE 的默认构建系统，因此有很多理由将你的应用迁移到 Gradle。
- en: Android Studio will be based on Gradle. In Android Studio, there won't be ADT
    as it will have built-in Android utilities. Gradle internally uses Maven repositories
    to manage the dependencies, which ultimately help to make the support of Maven
    quite easy.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Android Studio将基于Gradle。在Android Studio中，将不再有ADT，因为它将内置Android实用工具。Gradle在内部使用Maven仓库来管理依赖关系，这最终使得支持Maven变得相当容易。
- en: Setting up the environment PATH for Android Tools
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为Android Tools设置环境PATH。
- en: 'When you want to build an Android project outside Eclipse, you mostly need
    to use a command line or shell. To achieve this, you need to make sure that the
    `tools` and `platform-tools` folders of the Android SDK are part of the PATH environment
    variable. To do this, please follow the steps:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当您想在Eclipse外部构建Android项目时，大多数情况下需要使用命令行或shell。为了实现这一点，您需要确保Android SDK的`tools`和`platform-tools`文件夹是PATH环境变量的一部分。为此，请按照以下步骤操作：
- en: Set the environment variable `ANDROID_HOME` to the path of your Android SDK.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将环境变量`ANDROID_HOME`设置为您的Android SDK的路径。
- en: 'Windows users:'
  id: totrans-27
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Windows用户：
- en: From the desktop, right-click on **My Computer** and click on **Properties**.
  id: totrans-28
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从桌面右键点击**我的电脑**，然后点击**属性**。
- en: Click on the **Advanced System Settings** link in the left column.
  id: totrans-29
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 点击左侧列中的**高级系统设置**链接。
- en: In the **System Properties** window, click on the **Environment Variables**
    button and add new variable with name `ANDROID_HOME`
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在**系统属性**窗口中，点击**环境变量**按钮，并添加名为`ANDROID_HOME`的新变量。
- en: 'Unix-based system users:'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: Unix系统用户：
- en: Export `ANDROID_HOME=/path/to/android/sdk`
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出 `ANDROID_HOME=/path/to/android/sdk`
- en: Also, add `$ANDROID_HOME/tools` `and $ANDROID_HOME/platform-tools` to `$PATH`
    (for Windows, `%ANDROID_HOME%\tools and %ANDROID_HOME%\platform-tools`).
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同时，将`$ANDROID_HOME/tools`和`$ANDROID_HOME/platform-tools`添加到`$PATH`中（对于Windows，将`%ANDROID_HOME%\tools`和`%ANDROID_HOME%\platform-tools`添加到`%PATH%`）。
- en: All MacOS users, please note that for the path to work on the command line and
    in IDEs started by `launchd`, you need to set it in `/etc/launchd.conf`.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有MacOS用户请注意，为了使路径在命令行和由`launchd`启动的IDE中生效，您需要在`/etc/launchd.conf`中设置它。
- en: Build Android tests using Maven
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Maven构建Android测试。
- en: Create an Android project named `com.android.build.maven`. In this section,
    let us concentrate on creating a build for your Android test application using
    Maven. Add the correct `pom.xml` file, as shown in the following project directory
    and provide commands to Maven to build, install, and run your application.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为`com.android.build.maven`的Android项目。在本节中，让我们集中精力使用Maven为您的Android测试应用程序创建一个构建。添加正确的`pom.xml`文件，如下所示的项目目录，并提供命令给Maven来构建、安装和运行您的应用程序。
- en: 'The following is the code for the `pom.xml` file:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是`pom.xml`文件的代码：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: You can refer to the full source code of the `pom.xml` file in `chapter8_code1`.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以参考`pom.xml`文件在`chapter8_code1`中的完整源代码。
- en: The preceding `pom.xml` file is very similar to the `pom.xml` file in the main
    project, but this has several dependencies.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的`pom.xml`文件与主项目中的`pom.xml`文件非常相似，但它有几个依赖项。
- en: The dependency for `apk` is to enable the Android Maven plugin to find `apk`
    that it will run the tests against on the device/emulator. The dependency to the
    JAR file is to enable the compiler to find your Java classes from the main project.
    To achieve this, you use the provided scope so the classes are not actually included
    into your test project.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于`apk`的依赖是为了让Android Maven插件能够找到它将在设备/模拟器上运行的测试的`apk`。对JAR文件的依赖是为了让编译器能够从主项目中找到您的Java类。为此，您使用了提供的范围，这样类实际上不会包含在您的测试项目中。
- en: The Android Maven plugin that is provided under the build section in `pom.xml`
    will now run tests automatically on `mvn install` using instrumentation, just
    like Eclipse does. It uses the same underlying tools.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在`pom.xml`的构建部分提供的Android Maven插件现在将在`mvn install`时使用仪器自动运行测试，就像Eclipse一样。它使用了相同的底层工具。
- en: 'When you have only a single emulator/device connected, the automatic execution
    will work. If you have more than one device/emulator running, you will need to
    specify which device to use with either of these as command-line options:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 当您只连接了一个模拟器/设备时，自动执行将起作用。如果您有多个设备/模拟器在运行，您需要使用以下命令行选项之一来指定要使用的设备：
- en: '`-Dandroid.device=usb`'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Dandroid.device=usb`'
- en: '`-Dandroid.device=emulator`'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Dandroid.device=emulator`'
- en: '`-Dandroid.device=specificdeviceid`'
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Dandroid.device=specificdeviceid`'
- en: 'You can also disable instrumentation tests with this command-line option:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以使用此命令行选项禁用仪器测试：
- en: '`-Dandroid.enableIntegrationTest=false`'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-Dandroid.enableIntegrationTest=false`'
- en: 'The default properties can be set in `pom.xml` as follows:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 可以在`pom.xml`中设置默认属性，如下所示：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Build your app with Maven and deploy it to the device/emulator using the following
    command:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Maven构建你的应用程序，并通过以下命令将其部署到设备/模拟器：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Using Maven, you can also start and stop an Android virtual device automatically.
    The application can be started via Maven using the following command:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Maven，你还可以自动启动和停止Android虚拟设备。应用程序可以通过以下Maven命令启动：
- en: '[PRE3]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Note
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: We have to be in the directory of the project, where `pom.xml` is located.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要处于项目目录中，该目录包含`pom.xml`文件。
- en: Summary
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, you learnt different methods to use Maven with Android and
    Robotium tests. You also learnt different Maven commands to interact with Android
    applications, that is, the test application.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了如何将Maven与Android和Robotium测试结合使用，以及不同的Maven命令与Android应用程序交互，也就是测试应用程序。
- en: What do you say? Are you ready to create and automate test cases for your Android
    project? I bet you are! Go ahead, enjoy automated testing for Android using Robotium
    and don't forget to tell the community about it!
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 你觉得怎么样？准备好为你的Android项目创建和自动化测试用例了吗？我敢打赌你已经准备好了！开始吧，享受使用Robotium进行Android的自动化测试，并且别忘了和社区分享你的经验！
- en: Join the forums at [https://groups.google.com/forum/#!forum/robotium-developers](https://groups.google.com/forum/#!forum/robotium-developers)
    and be a part of this amazing Robotium developer's community. We're waiting for
    you!
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 加入[https://groups.google.com/forum/#!forum/robotium-developers](https://groups.google.com/forum/#!forum/robotium-developers)的论坛，成为令人惊叹的Robotium开发者社区的一部分。我们在这里等你！
- en: Thanks for reading the book and supporting open source technologies. Hope to
    see you around soon!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读本书并支持开源技术。期待不久的将来再次见到你！
