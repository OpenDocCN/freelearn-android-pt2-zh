- en: Chapter 4. Calendar APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四章. 日历API
- en: New Calendar APIs have been introduced with Android Ice Cream Sandwich for managing
    calendars. Event, attendee, alert, and reminder databases can be managed with
    these APIs. These APIs allow us to easily integrate calendars with our Android
    applications. This chapter shows how to use Calendar APIs with examples.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Android Ice Cream Sandwich引入了新的日历API，用于管理日历。这些API可以管理事件、参与者、提醒和重复事件的数据库。这些API允许我们轻松地将日历与我们的Android应用程序集成。本章展示了如何使用示例使用日历API。
- en: 'The topics covered in this chapter are as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题如下：
- en: Using Calendar APIs
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用日历API
- en: Creating an event
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建一个事件
- en: Adding an attendee
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加参与者
- en: Adding a reminder
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加一个提醒
- en: Using Calendar APIs
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用日历API
- en: 'The main class that manages the calendar data is the `CalendarContract` class.
    Noteworthy tables that store the calendar information are as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 管理日历数据的主要类是`CalendarContract`类。值得注意的存储日历信息的表格如下：
- en: '`CalendarContract.Calendar`: This table stores calendar specific data for each
    calendar'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CalendarContract.Calendar`：这个表格为每个日历存储特定的日历数据'
- en: '`CalendarContract.Event`: This table stores event specific data for each event'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CalendarContract.Event`：这个表格为每个事件存储特定的事件数据'
- en: '`CalendarContract.Attendee`: This table stores data about the attendee of an
    event'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CalendarContract.Attendee`：这个表格存储了事件参与者的数据'
- en: '`CalendarContract.Reminder`: This table stores data about the reminder for
    an event'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CalendarContract.Reminder`：这个表格存储了事件提醒的数据'
- en: Note
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 备注
- en: In the following examples, we will execute the applications in an Android device,
    because in order to test the Calendar API in an emulator, an account is needed.
    If you want to test examples in an emulator, make sure to choose the **Google
    API**'s API Level 14 or higher when creating the **AVD**. The Google API allows
    you to add a Google account to an emulator, which is needed for the Calendar APIs.
    You also need to set up the Calendar to sync with Gmail. You can use [m.google.com](http://m.google.com)
    as the server and `<[your_email@gmail.com](mailto:your_email@gmail.com)>` as the
    Domain/Username when adding an account. After creating and syncing your account,
    you can run the following examples in the emulator.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将在Android设备上执行应用程序，因为在模拟器中测试日历API需要一个账户。如果你想在模拟器中测试示例，确保在创建**AVD**时选择**Google
    API**的API级别14或更高。Google API允许你向模拟器添加一个Google账户，这对于日历API是必需的。你还需要设置日历与Gmail同步。添加账户时，可以使用`[m.google.com](http://m.google.com)`作为服务器和`<[your_email@gmail.com](mailto:your_email@gmail.com)>`作为域/用户名。创建并同步账户后，你可以在模拟器中运行以下示例。
- en: Creating an event
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建一个事件
- en: 'In order to create a calendar event, we need to create a `ContentValues` instance
    and put event information to this instance. Then, using the `ContentResolver`
    class, we could insert the event information into the calendar. There are some
    required fields in order to insert an event in to calendar. These fields are as
    follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了创建一个日历事件，我们需要创建一个`ContentValues`实例并将事件信息放入这个实例中。然后，使用`ContentResolver`类，我们可以将事件信息插入到日历中。插入日历中的事件需要一些必填字段。这些字段如下：
- en: Start time of the event
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件的开始时间
- en: End time of the event if the event is not repeating
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果事件不是重复的，其结束时间
- en: Recurrence rule or recurrence date of the event if the event is repeating
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果事件是重复的，其重复规则或重复日期
- en: Duration if the event is repeating
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果事件是重复的，其持续时间
- en: Event time zone and calendar ID
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件时区和日历ID
- en: 'The `Activity` class that inserts an event is defined as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 插入事件的`Activity`类定义如下：
- en: '[PRE0]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see in this code, we use the `getCalendarID()` method in order to
    get the ID of the calendar because `calendarID` is a required field in creating
    an event. We provided `CalendarContract.Calendars.CONTENT_URI` to `ContentResolver`
    to query calendars.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在这段代码中，我们使用`getCalendarID()`方法来获取日历的ID，因为`calendarID`在创建事件时是一个必填字段。我们向`ContentResolver`提供了`CalendarContract.Calendars.CONTENT_URI`以查询日历。
- en: We used a button click event in order to add an event. On the clicking of this
    button, we call the `addEvent()` method. In the `addEvent()` method, we provide
    the required fields for creating an event to the `ContentValues` instance and
    insert the event using the `ContentResolver`. We provide `CalendarContract.Events.CONTENT_URI`
    to `ContentResolver` in order to add an event.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了按钮点击事件来添加一个事件。点击这个按钮时，我们调用`addEvent()`方法。在`addEvent()`方法中，我们为创建事件的必要字段提供给`ContentValues`实例，并使用`ContentResolver`插入事件。我们向`ContentResolver`提供`CalendarContract.Events.CONTENT_URI`以添加一个事件。
- en: 'The XML code of the layout of this application is `LinearLayout` with a `Button`
    component as seen in the following code block:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本应用程序布局的XML代码是`LinearLayout`，包含一个`Button`组件，如下代码块所示：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The screen will look like the following when you execute this code:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此代码时，屏幕将如下所示：
- en: '![Creating an event](img/9526_04_01.jpg)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![创建事件](img/9526_04_01.jpg)'
- en: 'In order to use the new Calendar APIs, the minimum SDK version in the `AndroidManifest.xml`
    file should be API Level 14 or more. Furthermore, `WRITE_CALENDAR` and `READ_CALENDAR`
    permissions are required for reading and writing to the calendar. The `AndroidManifest.xml`
    file should look like the following:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使用新的日历API，`AndroidManifest.xml`文件中的最低SDK版本应设置为API级别14或更高。此外，还需要`WRITE_CALENDAR`和`READ_CALENDAR`权限才能读写日历。`AndroidManifest.xml`文件应如下所示：
- en: '[PRE2]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'When the event is created, the calendar will look like the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 创建事件后，日历将如下所示：
- en: '![Creating an event](img/9526_04_02.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![创建事件](img/9526_04_02.jpg)'
- en: Using Intents for creating events
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用意图创建事件
- en: 'The same event could also be created using `Intent` `objects`. The following
    method shows how to add an event using `Intent objects`:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 同样可以使用`Intent`对象创建事件。以下方法展示了如何使用`Intent`对象添加事件：
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We can call this method instead of the `addEvent()` method in order to create
    an event using `Intent` objects. By using `Intent` objects, we don't need to create
    a view in order to create an event. Using `Intent` objects is a best practice
    for modifying and showing calendars.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以调用这个方法，而不是`addEvent()`方法，以使用`Intent`对象创建事件。通过使用`Intent`对象，我们无需创建视图即可创建事件。使用`Intent`对象是修改和显示日历的最佳实践。
- en: Adding an attendee
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加参与者
- en: 'Adding an attendee is similar to creating an event. We use `CalendarContract.Attendees.CONTENT_URI`
    as the URI for inserting an attendee. The required fields for inserting an attendee
    are event ID, attendee e-mail, attendee relationship, attendee status, and attendee
    type. We put a `Button` component in the XML layout of the application. The resulting
    layout is as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 添加参与者的过程与创建事件类似。我们使用`CalendarContract.Attendees.CONTENT_URI`作为插入参与者的URI。插入参与者所需的字段包括事件ID、参与者电子邮件、参与者关系、参与者状态和参与者类型。我们在应用程序的XML布局中放置了一个`Button`组件。结果布局如下所示：
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Then we call the following method on clicking the insert attendee button:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在点击添加参与者按钮时调用以下方法：
- en: '[PRE5]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Before clicking on the insert attendee button, an event should be created because
    we are using an event ID when inserting an attendee.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击添加参与者按钮之前，应该先创建一个事件，因为我们在插入参与者时需要使用事件ID。
- en: Adding a reminder
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加提醒
- en: 'We use `CalendarContract.Reminder.CONTENT_URI` as the URI in inserting a reminder
    for an event. The required fields for inserting a reminder are event ID, minutes
    that the reminder needs to fire before the event, and method. We put a `Button`
    component in the XML layout of the application. The resulting layout is as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`CalendarContract.Reminder.CONTENT_URI`作为插入事件提醒的URI。插入提醒所需的字段包括事件ID、提醒需要在事件前触发的分钟数以及方法。我们在应用程序的XML布局中放置了一个`Button`组件。结果布局如下所示：
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then we call the following method on the click of the insert reminder button:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们在点击添加提醒按钮时调用以下方法：
- en: '[PRE7]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: As you see in this code, this reminder will fire 15 minutes before the event's
    time. Before pressing the insert reminder button, an event should be created because
    we are using the event ID when inserting a reminder.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在这段代码中，这个提醒会在事件发生前15分钟触发。在按下添加提醒按钮之前，应该先创建一个事件，因为我们在插入提醒时需要使用事件ID。
- en: 'When the reminder is added, the calendar will look like the following:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 添加提醒后，日历将如下所示：
- en: '![Adding a reminder](img/9526_04_03.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![添加提醒](img/9526_04_03.jpg)'
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: With the new Calendar API, integrating calendars to Android applications became
    easier. In this chapter, we learned how to create an event and the required fields
    for creating an event. Then we learned about adding an attendee and a reminder
    to an event. We need to set the required permissions for modifying the calendar.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 使用新的日历API，将日历集成到Android应用程序变得更加容易。在本章中，我们学习了如何创建一个事件以及创建事件所需的字段。然后我们了解了如何向事件中添加参与者和提醒。我们需要设置修改日历所需的权限。
- en: Although Fragments were introduced with Android 3.0, they are now available
    for small screen devices with Android Ice Cream Sandwich. In the next chapter,
    we will cover the basics of **Fragments** and how to use them.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管片段（Fragments）是在Android 3.0中引入的，但现在它们也适用于配备Android Ice Cream Sandwich的小屏幕设备。在下一章中，我们将介绍**片段**的基础知识以及如何使用它们。
