- en: Chapter 4. Calendar APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: New Calendar APIs have been introduced with Android Ice Cream Sandwich for managing
    calendars. Event, attendee, alert, and reminder databases can be managed with
    these APIs. These APIs allow us to easily integrate calendars with our Android
    applications. This chapter shows how to use Calendar APIs with examples.
  prefs: []
  type: TYPE_NORMAL
- en: 'The topics covered in this chapter are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Using Calendar APIs
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Creating an event
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding an attendee
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a reminder
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Using Calendar APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The main class that manages the calendar data is the `CalendarContract` class.
    Noteworthy tables that store the calendar information are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '`CalendarContract.Calendar`: This table stores calendar specific data for each
    calendar'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CalendarContract.Event`: This table stores event specific data for each event'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CalendarContract.Attendee`: This table stores data about the attendee of an
    event'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`CalendarContract.Reminder`: This table stores data about the reminder for
    an event'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: In the following examples, we will execute the applications in an Android device,
    because in order to test the Calendar API in an emulator, an account is needed.
    If you want to test examples in an emulator, make sure to choose the **Google
    API**'s API Level 14 or higher when creating the **AVD**. The Google API allows
    you to add a Google account to an emulator, which is needed for the Calendar APIs.
    You also need to set up the Calendar to sync with Gmail. You can use [m.google.com](http://m.google.com)
    as the server and `<[your_email@gmail.com](mailto:your_email@gmail.com)>` as the
    Domain/Username when adding an account. After creating and syncing your account,
    you can run the following examples in the emulator.
  prefs: []
  type: TYPE_NORMAL
- en: Creating an event
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'In order to create a calendar event, we need to create a `ContentValues` instance
    and put event information to this instance. Then, using the `ContentResolver`
    class, we could insert the event information into the calendar. There are some
    required fields in order to insert an event in to calendar. These fields are as
    follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Start time of the event
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: End time of the event if the event is not repeating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Recurrence rule or recurrence date of the event if the event is repeating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Duration if the event is repeating
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Event time zone and calendar ID
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The `Activity` class that inserts an event is defined as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: As you can see in this code, we use the `getCalendarID()` method in order to
    get the ID of the calendar because `calendarID` is a required field in creating
    an event. We provided `CalendarContract.Calendars.CONTENT_URI` to `ContentResolver`
    to query calendars.
  prefs: []
  type: TYPE_NORMAL
- en: We used a button click event in order to add an event. On the clicking of this
    button, we call the `addEvent()` method. In the `addEvent()` method, we provide
    the required fields for creating an event to the `ContentValues` instance and
    insert the event using the `ContentResolver`. We provide `CalendarContract.Events.CONTENT_URI`
    to `ContentResolver` in order to add an event.
  prefs: []
  type: TYPE_NORMAL
- en: 'The XML code of the layout of this application is `LinearLayout` with a `Button`
    component as seen in the following code block:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'The screen will look like the following when you execute this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an event](img/9526_04_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: 'In order to use the new Calendar APIs, the minimum SDK version in the `AndroidManifest.xml`
    file should be API Level 14 or more. Furthermore, `WRITE_CALENDAR` and `READ_CALENDAR`
    permissions are required for reading and writing to the calendar. The `AndroidManifest.xml`
    file should look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'When the event is created, the calendar will look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Creating an event](img/9526_04_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Using Intents for creating events
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The same event could also be created using `Intent` `objects`. The following
    method shows how to add an event using `Intent objects`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We can call this method instead of the `addEvent()` method in order to create
    an event using `Intent` objects. By using `Intent` objects, we don't need to create
    a view in order to create an event. Using `Intent` objects is a best practice
    for modifying and showing calendars.
  prefs: []
  type: TYPE_NORMAL
- en: Adding an attendee
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Adding an attendee is similar to creating an event. We use `CalendarContract.Attendees.CONTENT_URI`
    as the URI for inserting an attendee. The required fields for inserting an attendee
    are event ID, attendee e-mail, attendee relationship, attendee status, and attendee
    type. We put a `Button` component in the XML layout of the application. The resulting
    layout is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we call the following method on clicking the insert attendee button:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Before clicking on the insert attendee button, an event should be created because
    we are using an event ID when inserting an attendee.
  prefs: []
  type: TYPE_NORMAL
- en: Adding a reminder
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We use `CalendarContract.Reminder.CONTENT_URI` as the URI in inserting a reminder
    for an event. The required fields for inserting a reminder are event ID, minutes
    that the reminder needs to fire before the event, and method. We put a `Button`
    component in the XML layout of the application. The resulting layout is as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Then we call the following method on the click of the insert reminder button:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: As you see in this code, this reminder will fire 15 minutes before the event's
    time. Before pressing the insert reminder button, an event should be created because
    we are using the event ID when inserting a reminder.
  prefs: []
  type: TYPE_NORMAL
- en: 'When the reminder is added, the calendar will look like the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Adding a reminder](img/9526_04_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: With the new Calendar API, integrating calendars to Android applications became
    easier. In this chapter, we learned how to create an event and the required fields
    for creating an event. Then we learned about adding an attendee and a reminder
    to an event. We need to set the required permissions for modifying the calendar.
  prefs: []
  type: TYPE_NORMAL
- en: Although Fragments were introduced with Android 3.0, they are now available
    for small screen devices with Android Ice Cream Sandwich. In the next chapter,
    we will cover the basics of **Fragments** and how to use them.
  prefs: []
  type: TYPE_NORMAL
