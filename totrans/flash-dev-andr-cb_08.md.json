["```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.filesystem.File;\n    import flash.filesystem.FileMode;\n    import flash.filesystem.FileStream;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private const PATH:String = \"android.txt\";\n    private var file:File;\n    private var stream:FileStream;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 20;\n    traceField.width = stage.stageWidth-40;\n    traceField.height = stage.stageHeight-40;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function beginFileOpen():void {\n    file = new File();\n    file = File.applicationDirectory;\n    file = file.resolvePath(path);\n    stream = new FileStream();\n    stream.addEventListener(Event.COMPLETE, fileOpened);\n    stream.openAsync(file, FileMode.READ);\n    }\n\n    ```", "```kt\n    protected function fileOpened(e:Event):void {\n    traceField.text = stream.readMultiByte(stream.bytesAvailable, File.systemCharset);\n    stream.close();\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.events.TouchEvent;\n    import flash.filesystem.File;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n\n    ```", "```kt\n    private const FILE_NAME:String = \"airandroid.txt\";\n    private var file:File;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n    private var fauxButton:Sprite;\n    private var buttonField:TextField;\n    private var buttonFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 44;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0x000000;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.type = \"input\";\n    traceField.border = true;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.background = true;\n    traceField.border = true;\n    traceField.x = 20;\n    traceField.y = 20;\n    traceField.width = stage.stageWidth-40;\n    traceField.height = 250;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupTextButton():void {\n    buttonFormat = new TextFormat();\n    buttonFormat.bold = true;\n    buttonFormat.font = \"_sans\";\n    buttonFormat.size = 42;\n    buttonFormat.align = \"center\";\n    buttonFormat.color = 0x333333;\n    buttonField = new TextField();\n    buttonField.defaultTextFormat = buttonFormat;\n    buttonField.autoSize = \"left\";\n    buttonField.selectable = false;\n    buttonField.mouseEnabled = false;\n    buttonField.text = \"Save as File\";\n    buttonField.x = 30;\n    buttonField.y = 25;\n    fauxButton = new Sprite();\n    fauxButton.addChild(buttonField);\n    fauxButton.graphics.beginFill(0xFFFFFF, 1);\n    fauxButton.graphics.drawRect(0, 0, buttonField.width+60, buttonField.height+50);\n    fauxButton.graphics.endFill();\n    fauxButton.x = (stage.stageWidth/2) (fauxButton.width/2);\n    fauxButton.y = traceField.y+traceField.height+40;\n    addChild(fauxButton);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    fauxButton.addEventListener(TouchEvent.TOUCH_TAP, onTouchTap);\n    }\n\n    ```", "```kt\n    protected function onTouchTap(e:TouchEvent):void {\n    file = new File();\n    file.addEventListener(Event.COMPLETE, fileSaved);\n    file.save(traceField.text, FILE_NAME);\n    }\n\n    ```", "```kt\n    protected function fileSaved(e:Event):void {\n    fauxButton.removeEventListener(TouchEvent.TOUCH_TAP, onTouchTap);\n    file.removeEventListener(Event.COMPLETE, fileSaved);\n    traceField.text = \"\";\n    buttonField.text = \"File Saved!\";\n    }\n\n    ```", "```kt\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.events.TouchEvent;\n    import flash.geom.Point;\n    import flash.net.SharedObject;\n    import flash.net.SharedObjectFlushStatus;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n\n    ```", "```kt\n    private var airSO:SharedObject;\n    private var ballPoint:Point;\n    private var ball:Sprite;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"center\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 20;\n    traceField.width = stage.stageWidth-40;\n    traceField.height = stage.stageHeight-40;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function setupBall():void {\n    ball = new Sprite();\n    ball.graphics.beginFill(0xFFFFFF);\n    ball.graphics.drawCircle(0, 0, 60);\n    ball.graphics.endFill();\n    ball.x = stage.stageWidth/2;\n    ball.y = 260;\n    addChild(ball);\n    }\n\n    ```", "```kt\n    protected function setupSharedObject():void {\n    airSO = SharedObject.getLocal(\"airandroid\");\n    if(airSO.data.ballPoint != undefined){\n    ball.x = airSO.data.ballPoint.x;\n    ball.y = airSO.data.ballPoint.y;\n    traceField.text = \"Existing Shared Object!\";\n    }else{\n    traceField.text = \"No Shared Object Found!\";\n    }\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    ball.addEventListener(TouchEvent.TOUCH_MOVE, onTouchMove);\n    ball.addEventListener(TouchEvent.TOUCH_END, onTouchEnd);\n    }\n\n    ```", "```kt\n    protected function onTouchMove(e:TouchEvent):void {\n    ball.x = e.stageX;\n    ball.y = e.stageY;\n    }\n\n    ```", "```kt\n    protected function onTouchEnd(e:Event):void {\n    ballPoint = new Point(ball.x, ball.y);\n    airSO.data.ballPoint = ballPoint;\n    var flushStatus:String;\n    flushStatus = airSO.flush();\n    if(flushStatus != null) {\n    switch(flushStatus) {\n    case SharedObjectFlushStatus.FLUSHED:\n    traceField.text = \"Ball location x:\" + ball.x + \"/y:\" + ball.y + \" saved!\";\n    break;\n    default:\n    traceField.text = \"There was a problem :(\";\n    break;\n    }\n    }\n    }\n\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <s:ViewNavigatorApplication \n     firstView=\"views.first\">\n    </s:ViewNavigatorApplication>\n\n    ```", "```kt\n    <s:Button label=\"Engage Second State\" click=\"navigator.pushView(views.second);\"/>\n\n    ```", "```kt\n    <s:Button label=\"Engage First State\" click=\"navigator.pushView(views.first)\"/>\n\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <s:ViewNavigatorApplication \n     firstView=\"views.first\"\n    persistNavigatorState=\"true\" creationComplete=\"init()\">\n    </s:ViewNavigatorApplication>\n\n    ```", "```kt\n    <fx:Script>\n     <![CDATA[\n     import mx.events.FlexEvent;\n     ]]>\n     </fx:Script>\n\n    ```", "```kt\n    public function init():void {\n    this.addEventListener(FlexEvent.NAVIGATOR_STATE_SAVING, stateSaving);\n    }\n\n    ```", "```kt\n    protected function stateSaving(e:FlexEvent):void {\n    // Interception Code\n    }\n\n    ```", "```kt\n    import flash.data.SQLConnection;\n    import flash.data.SQLStatement;\n    import flash.data.SQLResult;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.events.Event;\n    import flash.events.TouchEvent;\n    import flash.filesystem.File;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n    import flash.ui.Multitouch;\n    import flash.ui.MultitouchInputMode;\n\n    ```", "```kt\n    private var sqlConnection:SQLConnection;\n    private var itemField:TextField;\n    private var itemFormat:TextFormat;\n    private var fauxButton:Sprite;\n    private var buttonField:TextField;\n    private var buttonFormat:TextFormat;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTextField():void {\n    itemFormat = new TextFormat();\n    itemFormat.bold = true;\n    itemFormat.font = \"_sans\";\n    itemFormat.size = 44;\n    itemFormat.align = \"center\";\n    itemFormat.color = 0x000000;\n    itemField = new TextField();\n    itemField.defaultTextFormat = itemFormat;\n    itemField.type = \"input\";\n    itemField.border = true;\n    itemField.multiline = true;\n    itemField.wordWrap = true;\n    itemField.background = true;\n    itemField.border = true;\n    itemField.x = 20;\n    itemField.y = 20;\n    itemField.width = stage.stageWidth-40;\n    itemField.height = 60;\n    addChild(itemField);\n    }\n\n    ```", "```kt\n    protected function setupTextButton():void {\n    buttonFormat = new TextFormat();\n    buttonFormat.bold = true;\n    buttonFormat.font = \"_sans\";\n    buttonFormat.size = 42;\n    buttonFormat.align = \"center\";\n    buttonFormat.color = 0x333333;\n    buttonField = new TextField();\n    buttonField.defaultTextFormat = buttonFormat;\n    buttonField.autoSize = \"left\";\n    buttonField.selectable = false;\n    buttonField.mouseEnabled = false;\n    buttonField.text = \"Insert to DB\";\n    buttonField.x = 30;\n    buttonField.y = 25;\n    fauxButton = new Sprite();\n    fauxButton.addChild(buttonField);\n    fauxButton.graphics.beginFill(0xFFFFFF, 1);\n    fauxButton.graphics.drawRect(0, 0, buttonField.width+60, buttonField.height+50);\n    fauxButton.graphics.endFill();\n    fauxButton.x = (stage.stageWidth/2) - (fauxButton.width/2);\n    fauxButton.y = itemField.y+itemField.height+40;\n    addChild(fauxButton);\n    }\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = fauxButton.y+fauxButton.height+40;\n    traceField.width = stage.stageWidth-40;\n    traceField.height =stage.stageHeight - traceField.y;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function registerListeners():void {\n    Multitouch.inputMode = MultitouchInputMode.TOUCH_POINT;\n    fauxButton.addEventListener(TouchEvent.TOUCH_TAP, insertDBItem);\n    }\n\n    ```", "```kt\n    protected function createDB():void {\n    sqlConnection = new SQLConnection();\n    sqlConnection.open(File.applicationStorageDirectory. resolvePath(\"airandroid.db\"));\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.sqlConnection = sqlConnection;\n    sqlStatement.text = \"CREATE TABLE IF NOT EXISTS items (name TEXT, time TEXT)\";\n    sqlStatement.execute();\n    getDBItems();\n    }\n\n    ```", "```kt\n    protected function getDBItems():void {\n    traceField.text = \"\";\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.sqlConnection = sqlConnection;\n    sqlStatement.text = \"SELECT * FROM items\";\n    sqlStatement.execute();\n    var sqlArray:Array = new Array();\n    var sqlResult:SQLResult = sqlStatement.getResult();\n    if(sqlResult.data != null){\n    sqlArray = sqlResult.data;\n    }\n    var itemCount:int = sqlArray.length;\n    for(var i:int=0; i<itemCount; i++){\n    traceField.appendText(\"NAME: \" + sqlArray[i].name + \"\\n\");\n    traceField.appendText(\"DATE: \" + sqlArray[i].time + \"\\n\");\n    traceField.appendText(\"\\n\");\n    }\n    }\n\n    ```", "```kt\n    protected function insertDBItem(e:TouchEvent):void {\n    var date:Date = new Date();\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.sqlConnection = sqlConnection;\n    sqlStatement.text = \"INSERT into items values(:name, :time)\";\n    sqlStatement.parameters[\":name\"] = itemField.text;\n    sqlStatement.parameters[\":time\"] = date.toUTCString();\n    sqlStatement.execute();\n    getDBItems();\n    itemField.text = \"\";\n    }\n\n    ```", "```kt\n    import flash.data.SQLConnection;\n    import flash.data.SQLStatement;\n    import flash.display.Sprite;\n    import flash.display.StageAlign;\n    import flash.display.StageScaleMode;\n    import flash.filesystem.File;\n    import flash.text.TextField;\n    import flash.text.TextFormat;\n\n    ```", "```kt\n    private var sqlConnection:SQLConnection;\n    private var traceField:TextField;\n    private var traceFormat:TextFormat;\n\n    ```", "```kt\n    protected function setupTraceField():void {\n    traceFormat = new TextFormat();\n    traceFormat.bold = true;\n    traceFormat.font = \"_sans\";\n    traceFormat.size = 24;\n    traceFormat.align = \"left\";\n    traceFormat.color = 0xCCCCCC;\n    traceField = new TextField();\n    traceField.defaultTextFormat = traceFormat;\n    traceField.selectable = false;\n    traceField.multiline = true;\n    traceField.wordWrap = true;\n    traceField.mouseEnabled = false;\n    traceField.x = 20;\n    traceField.y = 20;\n    traceField.width = stage.stageWidth-40;\n    traceField.height = stage.stageHeight-40;\n    addChild(traceField);\n    }\n\n    ```", "```kt\n    protected function checkDefaultDB():void {\n    traceField.appendText(\"Checking if DB exists...\\n\\n\");\n    var dbFile:File = File.applicationStorageDirectory;\n    dbFile = dbFile.resolvePath(\"products.db\");\n    if(dbFile.exists){\n    traceField.appendText(\"Application DB Okay!\\n\\n\");\n    }else{\n    traceField.appendText(\"Application DB Missing!\\n\\n\");\n    traceField.appendText(\"Copying Default DB...\\n\\n\");\n    var sourceFile:File = File.applicationDirectory;\n    sourceFile = sourceFile.resolvePath(\"default.db\");\n    var destination:File = File.applicationStorageDirectory;\n    destination = destination.resolvePath(\"products.db\");\n    sourceFile.copyTo(destination, true);\n    traceField.appendText(\"Database Copy Completed!\\n\\n\");\n    }\n    connectDB();\n    }\n\n    ```", "```kt\n    protected function connectDB():void {\n    sqlConnection = new SQLConnection();\n    sqlConnection.open(File.applicationStorageDirectory. resolvePath(\"products.db\"));\n    getDBItems();\n    }\n\n    ```", "```kt\n    protected function getDBItems():void {\n    traceField.appendText(\"Gathering items from application DB...\\ n\\n\");\n    var sqlStatement:SQLStatement = new SQLStatement();\n    sqlStatement.sqlConnection = sqlConnection;\n    sqlStatement.text = \"SELECT * FROM Products\";\n    sqlStatement.execute();\n    var sqlArray:Array = sqlStatement.getResult().data;\n    var itemCount:int = sqlArray.length;\n    traceField.appendText(\"Database Contains:\\n\");\n    for(var i:int=0; i<itemCount; i++){\n    traceField.appendText(\"PRODUCT: \" + sqlArray[i].ProductName + \"\\n\");\n    }\n    }\n\n    ```", "```kt\n    package vo {\n    [Bindable]\n    [Table(name=\"Products\")]\n    public class Product {\n    [Id]public var id:int;\n    [Column]public var ProductName:String;\n    }\n    }\n\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <s:ViewNavigatorApplication xmlns:fx= \"http://ns.adobe.com/mxml/2009\"\n     firstView=\"views.FlexORMHomeView\" applicationComplete=\"init()\">\n    </s:ViewNavigatorApplication>\n\n    ```", "```kt\n    <fx:Script>\n    <![\n    CDATA[\n    import nz.co.codec.flexorm.EntityManager;\n    import vo.Product;\n    import mx.collections.ArrayCollection;\n    ]]>\n    </fx:Script>\n\n    ```", "```kt\n    protected var entityManager:EntityManager = EntityManager.getInstance();\n    [Bindable] public var productArrayCollection:ArrayCollection;\n\n    ```", "```kt\n    protected function init():void {\n    var databaseFile:File =\n    File.applicationStorageDirectory.resolvePath(\"products.db\");\n    var connection:SQLConnection = new SQLConnection();\n    connection.open(databaseFile);\n    entityManager.sqlConnection = connection;\n    loadProducts();\n    }\n\n    ```", "```kt\n    protected function loadProducts():void {\n    productArrayCollection = entityManager.findAll(Product);\n    productArrayCollection.refresh();\n    }\n\n    ```", "```kt\n    public function saveProduct(e:String):void {\n    var ProductEntry:Product = new Product();\n    ProductEntry.ProductName = e;\n    entityManager.save(ProductEntry);\n    loadProducts();\n    }\n\n    ```", "```kt\n    public function deleteProduct(index:int):void {\n    entityManager.remove(productArrayCollection.getItemAt(index));\n    loadProducts();\n    }\n\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <s:View \n     title=\"Product Catalog\">\n    <s:layout>\n    <s:VerticalLayout gap=\"20\" paddingBottom=\"20\" paddingLeft=\"20\" paddingRight=\"20\" paddingTop=\"20\"/>\n    </s:layout>\n    </s:View>\n\n    ```", "```kt\n    <s:TextInput id=\"entry\" width=\"100%\"/>\n    <s:Button click=\"addProduct(event)\" width=\"100%\" label=\"Insert New Product\"/>\n    <s:List id=\"productList\" change=\"removeProduct(event)\" dataProvider=\"{this.parentApplication.productArrayCollection}\" labelField=\"ProductName\" width=\"100%\" height=\"100%\"></s:List>\n\n    ```", "```kt\n    <fx:Script>\n    <![\n    CDATA[\n    import spark.events.IndexChangeEvent;\n    ]]>\n    </fx:Script>\n\n    ```", "```kt\n    protected function addProduct(e:MouseEvent):void {\n    this.parentApplication.saveProduct(entry.text);\n    entry.text = \"\";\n    }\n\n    ```", "```kt\n    protected function removeProduct(e:IndexChangeEvent):void {\n    this.parentApplication.deleteProduct(e.newIndex);\n    productList.selectedIndex = -1;\n    }\n\n    ```"]