["```kt\n    void setup() {\n     Serial.begin(115200);\n    }\n    ```", "```kt\n    void loop() {\n     Serial.println(\"Hello World!\");\n    }\n    ```", "```kt\n    void loop() {\n     Serial.println(\"Hello World!\");\n     delay(1000);\n    }\n    ```", "```kt\n#include <adk.h>\n#define BUFFSIZE 128\n#define LED 2\n```", "```kt\nchar accessoryName[] = \"LED lamp\";\nchar manufacturer[] = \"Example, Inc.\";\nchar model[] = \"LedLamp\";\nchar versionNumber[] = \"0.1.0\";\nchar serialNumber[] = \"1\";\nchar url[] = \"http://www.example.com\";\n```", "```kt\nuint8_t buffer[BUFFSIZE];\nuint32_t bytesRead = 0;\nUSBHost Usb;\nADK adk(&Usb, manufacturer, model, accessoryName, versionNumber, url, serialNumber);\n```", "```kt\nvoid loop(){\n Usb.Task();\n if (adk.isReady()) {\n // Do something\n }\n}\n```", "```kt\n    <LinearLayout\n\n     android:orientation=\"vertical\"\n     android:layout_width=\"match_parent\"\n     android:layout_height=\"match_parent\"\n     android:paddingLeft=\"@dimen/activity_horizontal_margin\"\n     android:paddingRight=\"@dimen/activity_horizontal_margin\"\n     android:paddingTop=\"@dimen/activity_vertical_margin\"\n     android:paddingBottom=\"@dimen/activity_vertical_margin\"\n     tools:context=\".LightSwitch\">\n    </LinearLayout>\n\n    ```", "```kt\n    <TextView\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n     android:textAppearance=\"@android:style/TextAppearance.Large\"\n     android:text=\"Available controlled devices\"/>\n    ```", "```kt\n    <Switch\n     android:layout_width=\"wrap_content\"\n     android:layout_height=\"wrap_content\"\n     android:text=\"LED 2\"\n     android:id=\"@+id/firstLed\"/>\n    ```", "```kt\n<manifest\n\n  package=\"me.palazzetti.ledlamp\">\n\n<uses-feature\nandroid:name=\"android.hardware.usb.accessory\"\nandroid:required=\"true\"/>\n\n<!-- other declarations -->\n</manifest>\n```", "```kt\n<activity\n android:name=\".LightSwitch\"\n android:label=\"@string/app_name\">\n <!-- other declarations -->\n\n <intent-filter>\n <action android:name=\n \"android.hardware.usb.action.USB_ACCESSORY_ATTACHED\"/>\n </intent-filter>\n</activity>\n```", "```kt\n<resources>\n   <usb-accessory\n    version=\"0.1.0\"\n    model=\"LampLed\"\n    manufacturer=\"Example, Inc.\"/>\n</resources>\n```", "```kt\n<activity\n android:name=\".LightSwitch\"\n android:label=\"@string/app_name\">\n <!-- other declarations -->\n\n <meta-data\n android:name=\n \"android.hardware.usb.action.USB_ACCESSORY_ATTACHED\"\n android:resource=\"@xml/usb_accessory_filter\"/>\n </activity>\n```", "```kt\npublic class Manager {\n private UsbManagermUsbManager;\n  private ParcelFileDescriptormParcelFileDescriptor;\n  private FileOutputStreammFileOutputStream;\n\n  public Manager(UsbManagerusbManager) {\n  this.mUsbManager = usbManager;\n  }\n}\n```", "```kt\npublic void openAccessory() {\n UsbAccessory[] accessoryList = mUsbManager.getAccessoryList();\n  if (accessoryList != null &&accessoryList.length> 0) {\n    try {\n     mDescriptor = mUsbManager.openAccessory(accessoryList[0]);\n     FileDescriptor file = mDescriptor.getFileDescriptor();\n     mOutput = new FileOutputStream(file);\n    }\n   catch (Exception e) {\n      // noop\n    }\n  }\n}\n```", "```kt\npublic void closeAccessory() {\n  if (mDescriptor != null) {\n    try {\n     mDescriptor.close();\n    }\n   catch (IOException e) {\n      // noop\n    }\n  }\n mDescriptor = null;\n}\n```", "```kt\npublic void writeSerial(int value) {\n  try {\n   mOutput.write(value);\n  }\n catch (IOException e) {\n    // noop\n  }\n}\n```", "```kt\npublic class LightSwitch extends ActionBarActivity{\n private Manager mManager;\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n   super.onCreate(savedInstanceState);\n   setContentView(R.layout.activity_light_switch);\n mManager = new Manager(\n (UsbManager) getSystemService(Context.USB_SERVICE));\n  }\n}\n```", "```kt\n@Override\nprotected void onResume() {\n super.onResume();\n mManager.openAccessory();\n}\n\n@Override\nprotected void onPause() {\n super.onPause();\n mManager.closeAccessory();\n}\n```", "```kt\nvoid setup(){\n pinMode(LED, OUTPUT);\n digitalWrite(LED, LOW);\n}\n```", "```kt\nvoid executor(uint8_t command){\n  switch(command) {\n    case 0:\n   digitalWrite(LED, LOW);\n      break;\n    case 1:\n   digitalWrite(LED, HIGH);\n      break;\n\n    default:\n      // noop\n      break;\n  }\n}\n```", "```kt\nif (adk.isReady()) {\n adk.read(&bytesRead, BUFFSIZE, buffer);\n if (bytesRead> 0){\n executor(buffer[0]);\n }\n}\n```", "```kt\nprivate Manager mManager;\nprivate booleanmSwitchLed = false;\n\n```", "```kt\npublic void switchLight(View v) {\n mSwitchLed = !mSwitchLed;\n int command = mSwitchLed ? 1 : 0;\n mManager.writeSerial(command);\n}\n```", "```kt\n<Switch\n android:layout_width=\"wrap_content\"\n android:layout_height=\"wrap_content\"\n android:text=\"LED 2\"\n android:id=\"@+id/firstLed\"\n android:onClick=\"switchLight\"/>\n\n```"]