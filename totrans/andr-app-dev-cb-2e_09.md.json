["```kt\nAnimation blink =AnimationUtils.loadAnimation(this,R.anim.blink);\nview.startAnimation(blink);\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<set >\n    <alpha android:fromAlpha=\"1.0\"\n        android:toAlpha=\"0.0\"\n        android:background=\"#000000\"\n        android:interpolator=\"@android:anim/linear_interpolator\"\n        android:duration=\"100\"\n        android:repeatMode=\"restart\"\n        android:repeatCount=\"0\"/>\n</set>\n```", "```kt\n    <ImageView\n        android:id=\"@+id/imageViewThumbnail\"\n        android:layout_width=\"100dp\"\n        android:layout_height=\"100dp\"\n        android:layout_centerInParent=\"true\" />\n    ```", "```kt\n    public Bitmap loadSampledResource(int imageID, int targetHeight, int targetWidth) {\n        final BitmapFactory.Options options = new BitmapFactory.Options();\n        options.inJustDecodeBounds = true;\n        BitmapFactory.decodeResource(getResources(), imageID, options);\n        final int originalHeight = options.outHeight;\n        final int originalWidth = options.outWidth;\n        int inSampleSize = 1;\n        while ((originalHeight / (inSampleSize *2)) > targetHeight && (originalWidth / (inSampleSize *2)) > targetWidth) {\n            inSampleSize *= 2;\n        }\n        options.inSampleSize = inSampleSize;\n        options.inJustDecodeBounds = false;\n        return BitmapFactory.decodeResource(getResources(), imageID, options);\n    }\n    ```", "```kt\n    ImageView imageView = (ImageView)findViewById(R.id.imageViewThumbnail);\n    imageView.setImageBitmap(loadSampledResource(R.drawable.image_large, 100, 100));\n    ```", "```kt\noptions.inJustDecodeBounds = true;\n```", "```kt\nwhile ((originalHeight / (inSampleSize *2)) > targetHeight && (originalWidth / (inSampleSize *2)) > targetWidth) {\n        inSampleSize *= 2;\n}\n```", "```kt\noptions.inSampleSize = inSampleSize;\noptions.inJustDecodeBounds = false;\n```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <RelativeLayout \n\n        android:id=\"@+id/layout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Top\"\n            android:id=\"@+id/textViewTop\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_centerHorizontal=\"true\" />\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Bottom\"\n            android:id=\"@+id/textViewBottom\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_centerHorizontal=\"true\" />\n        <Button\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Go\"\n            android:id=\"@+id/button\"\n            android:layout_centerInParent=\"true\"\n            android:onClick=\"goAnimate\"/>\n    </RelativeLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <RelativeLayout \n\n        android:id=\"@+id/layout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Bottom\"\n            android:id=\"@+id/textViewBottom\"\n            android:layout_alignParentTop=\"true\"\n            android:layout_centerHorizontal=\"true\" />\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Top\"\n            android:id=\"@+id/textViewTop\"\n            android:layout_alignParentBottom=\"true\"\n            android:layout_centerHorizontal=\"true\" />\n        <Button\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"Go\"\n            android:id=\"@+id/button\"\n            android:layout_centerInParent=\"true\"/>\n    </RelativeLayout>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <changeBounds  />\n    ```", "```kt\n    public void goAnimate(View view) {\n        ViewGroup root = (ViewGroup) findViewById(R.id.layout);\n        Scene scene = Scene.getSceneForLayout(root, R.layout.activity_main_end, this);\n        Transition transition = TransitionInflater.from(this).inflateTransition(R.transition.transition_move);\n        TransitionManager.go(scene, transition);\n    }\n    ```", "```kt\nViewGroup root = (ViewGroup) findViewById(R.id.layout);\n```", "```kt\nTransition transition = TransitionInflater.from(this).inflateTransition(R.transition.transition_move);\n```", "```kt\nScene scene = Scene.getSceneForLayout(root, R.layout.activity_main_end, this);\n```", "```kt\nTransitionManager.go(scene, transition);\n```", "```kt\nViewGroup root = (ViewGroup) findViewById(R.id.layout);\nScene scene = new Scene(root);\n\nTransition transition = new ChangeBounds();\nTransitionManager.beginDelayedTransition(root,transition);\n\nTextView textViewTop = (TextView)findViewById(R.id.textViewTop);\nRelativeLayout.LayoutParams params = (RelativeLayout.LayoutParams)textViewTop.getLayoutParams();\nparams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM,1);\nparams.addRule(RelativeLayout.ALIGN_PARENT_TOP, 0);\ntextViewTop.setLayoutParams(params);\n\nTextView textViewBottom = (TextView)findViewById(R.id.textViewBottom);\nparams = (RelativeLayout.LayoutParams)textViewBottom.getLayoutParams();\nparams.addRule(RelativeLayout.ALIGN_PARENT_BOTTOM,0);\nparams.addRule(RelativeLayout.ALIGN_PARENT_TOP, 1);\ntextViewBottom.setLayoutParams(params);\n\nTransitionManager.go(scene);\n```", "```kt\n    <ImageView\n        android:id=\"@+id/imageViewCompass\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_centerInParent=\"true\"\n        android:src=\"img/compass\"/>\n    ```", "```kt\n    private SensorManager mSensorManager;\n    private Sensor mMagnetometer;\n    private Sensor mAccelerometer;\n    private ImageView mImageViewCompass;\n    private float[] mGravityValues=new float[3];\n    private float[] mAccelerationValues=new float[3];\n    private float[] mRotationMatrix=new float[9];\n    private float mLastDirectionInDegrees = 0f;\n    ```", "```kt\n    private SensorEventListener mSensorListener = new SensorEventListener() {\n        @Override\n        public void onSensorChanged(SensorEvent event) {\n            calculateCompassDirection(event);\n        }\n        @Override\n        public void onAccuracyChanged(Sensor sensor, int accuracy) {\n            //Nothing to do\n        }\n    };\n    ```", "```kt\n    @Override\n    protected void onResume() {\n        super.onResume();\n        mSensorManager.registerListener(mSensorListener, mMagnetometer, SensorManager.SENSOR_DELAY_FASTEST);\n        mSensorManager.registerListener(mSensorListener, mAccelerometer, SensorManager.SENSOR_DELAY_FASTEST);\n    }\n\n    @Override\n    protected void onPause() {\n        super.onPause();\n        mSensorManager.unregisterListener(mSensorListener);\n    }\n    ```", "```kt\n    mImageViewCompass=(ImageView)findViewById(R.id.imageViewCompass);\n    mSensorManager = (SensorManager) getSystemService(Context.SENSOR_SERVICE);\n    mMagnetometer = mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD);\n    mAccelerometer = mSensorManager.getDefaultSensor(Sensor.TYPE_ACCELEROMETER);\n    ```", "```kt\n    private void calculateCompassDirection(SensorEvent event) {\n        switch (event.sensor.getType()) {\n            case Sensor.TYPE_ACCELEROMETER:\n                mAccelerationValues = event.values.clone();\n                break;\n            case Sensor.TYPE_MAGNETIC_FIELD:\n                mGravityValues = event.values.clone();\n                break;\n        }\n        boolean success = SensorManager.getRotationMatrix(mRotationMatrix, null, mAccelerationValues, mGravityValues);\n        if(success){\n            float[] orientationValues = new float[3];\n            SensorManager.getOrientation(mRotationMatrix, orientationValues);\n            float azimuth = (float)Math.toDegrees(-orientationValues[0]);\n            RotateAnimation rotateAnimation = new RotateAnimation(mLastDirectionInDegrees, azimuth, Animation.RELATIVE_TO_SELF, 0.5f, Animation.RELATIVE_TO_SELF, 0.5f);\n            rotateAnimation.setDuration(50);\n            rotateAnimation.setFillAfter(true);\n            mImageViewCompass.startAnimation(rotateAnimation);\n            mLastDirectionInDegrees = azimuth;\n        }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <LinearLayout \n        android:orientation=\"vertical\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <ImageView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:id=\"@+id/imageView\"\n            android:layout_gravity=\"center_horizontal\" />\n    </LinearLayout>\n    ```", "```kt\n    public class SlideFragment extends Fragment {\n    ```", "```kt\n    import android.support.v4.app.Fragment;\n    ```", "```kt\n    private int mImageResourceID;\n    ```", "```kt\n    public SlideFragment() {}\n    ```", "```kt\n    public void setImage(int resourceID) {\n        mImageResourceID=resourceID;\n    }\n    ```", "```kt\n    @Override\n    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        ViewGroup rootView = (ViewGroup) inflater.inflate(R.layout.fragment_slide, container, false);\n        ImageView imageView = (ImageView)rootView.findViewById(R.id.imageView);\n        imageView.setImageResource(mImageResourceID);\n        return rootView;\n    }\n    ```", "```kt\n    <android.support.v4.view.ViewPager\n\n        android:id=\"@+id/viewPager\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n    ```", "```kt\n    public class MainActivity extends FragmentActivity {\n    ```", "```kt\n    import android.support.v4.app.FragmentActivity;\n    ```", "```kt\n    private final int PAGE_COUNT=4;\n    private ViewPager mViewPager;\n    private PagerAdapter mPagerAdapter;\n    ```", "```kt\n    import android.support.v4.view.PagerAdapter;\n    import android.support.v4.view.ViewPager;\n    ```", "```kt\n    private class SlideAdapter extends FragmentStatePagerAdapter {\n        public SlideAdapter(FragmentManager fm) {\n            super(fm);\n        }\n        @Override\n        public Fragment getItem(int position) {\n            SlideFragment slideFragment = new SlideFragment();\n            switch (position) {\n                case 0:\n                    slideFragment.setImage(R.drawable.slide_0);\n                    break;\n                case 1:\n                    slideFragment.setImage(R.drawable.slide_1);\n                    break;\n                case 2:\n                    slideFragment.setImage(R.drawable.slide_2);\n                    break;\n                case 3:\n                    slideFragment.setImage(R.drawable.slide_3);\n                    break;\n            }\n            return slideFragment;\n        }\n        @Override\n        public int getCount() {\n            return PAGE_COUNT;\n        }\n    }\n    ```", "```kt\n    import android.support.v4.app.Fragment;\n    import android.support.v4.app.FragmentManager;\n    import android.support.v4.app.FragmentStatePagerAdapter;\n    ```", "```kt\n    @Override\n    public void onBackPressed() {\n        if (mViewPager.getCurrentItem() == 0) {\n            super.onBackPressed();\n        } else {\n            mViewPager.setCurrentItem(mViewPager.getCurrentItem() - 1);\n        }\n    }\n    ```", "```kt\n    mViewPager = (ViewPager) findViewById(R.id.viewPager);\n    mPagerAdapter = new SlideAdapter(getSupportFragmentManager());\n    mViewPager.setAdapter(mPagerAdapter);\n    ```", "```kt\n    <set >\n        <objectAnimator\n            android:valueFrom=\"1.0\"\n            android:valueTo=\"0.0\"\n            android:propertyName=\"alpha\"\n            android:duration=\"0\" />\n        <objectAnimator\n            android:valueFrom=\"-180\"\n            android:valueTo=\"0\"\n            android:propertyName=\"rotationY\"\n            android:interpolator=\"@android:interpolator/accelerate_decelerate\"\n            android:duration=\"@integer/card_flip_duration_full\"/>\n        <objectAnimator\n            android:valueFrom=\"0.0\"\n            android:valueTo=\"1.0\"\n            android:propertyName=\"alpha\"\n            android:startOffset=\"@integer/card_flip_duration_half\"\n            android:duration=\"1\" />\n    </set>\n    ```", "```kt\n    <set >\n        <objectAnimator\n            android:valueFrom=\"0\"\n            android:valueTo=\"180\"\n            android:propertyName=\"rotationY\"\n            android:interpolator=\"@android:interpolator/accelerate_decelerate\"\n            android:duration=\"@integer/card_flip_duration_full\"/>\n        <objectAnimator\n            android:valueFrom=\"1.0\"\n            android:valueTo=\"0.0\"\n            android:propertyName=\"alpha\"\n            android:startOffset=\"@integer/card_flip_duration_half\"\n            android:duration=\"1\" />\n    </set>\n    ```", "```kt\n    <set >\n        <objectAnimator\n            android:valueFrom=\"1.0\"\n            android:valueTo=\"0.0\"\n            android:propertyName=\"alpha\"\n            android:duration=\"0\" />\n        <objectAnimator\n            android:valueFrom=\"180\"\n            android:valueTo=\"0\"\n            android:propertyName=\"rotationY\"\n            android:interpolator=\"@android:interpolator/accelerate_decelerate\"\n            android:duration=\"@integer/card_flip_duration_full\" />\n        <objectAnimator\n            android:valueFrom=\"0.0\"\n            android:valueTo=\"1.0\"\n            android:propertyName=\"alpha\"\n            android:startOffset=\"@integer/card_flip_duration_half\"\n            android:duration=\"1\" />\n    </set>\n    ```", "```kt\n    <set >\n        <objectAnimator\n            android:valueFrom=\"0\"\n            android:valueTo=\"-180\"\n            android:propertyName=\"rotationY\"\n            android:interpolator=\"@android:interpolator/accelerate_decelerate\"\n            android:duration=\"@integer/card_flip_duration_full\" />\n        <objectAnimator\n            android:valueFrom=\"1.0\"\n            android:valueTo=\"0.0\"\n            android:propertyName=\"alpha\"\n            android:startOffset=\"@integer/card_flip_duration_half\"\n            android:duration=\"1\" />\n    </set>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <resources>\n        <integer name=\"card_flip_duration_full\">1000</integer>\n        <integer name=\"card_flip_duration_half\">500</integer>\n    </resources>\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ImageView \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:src=\"img/card_front\"\n        android:scaleType=\"centerCrop\" />\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <ImageView \n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:src=\"img/card_back\"\n        android:scaleType=\"centerCrop\" />\n    ```", "```kt\n    public class CardFrontFragment extends Fragment {\n        @Override\n        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n            return inflater.inflate(R.layout.fragment_card_front, container, false);\n        }\n    }\n    ```", "```kt\n    public class CardBackFragment extends Fragment {\n        @Override\n        public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n            return inflater.inflate(R.layout.fragment_card_back, container, false);\n        }\n    }\n    ```", "```kt\n    <FrameLayout\n\n        android:id=\"@+id/container\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\" />\n    ```", "```kt\n    boolean mShowingBack = false;\n    ```", "```kt\n    FrameLayout frameLayout = (FrameLayout)findViewById(R.id.frameLayout);\n    frameLayout.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            flipCard();\n        }\n    });\n\n    if (savedInstanceState == null) {\n        getFragmentManager()\n            .beginTransaction()\n            .add(R.id.frameLayout, new CardFrontFragment())\n            .commit();\n    }\n    ```", "```kt\n    private void flipCard() {\n        if (mShowingBack) {\n            mShowingBack = false;\n            getFragmentManager().popBackStack();\n        } else {\n            mShowingBack = true;\n            getFragmentManager()\n                .beginTransaction()\n                .setCustomAnimations(\n                    R.animator.card_flip_right_enter, R.animator.card_flip_right_exit, R.animator.card_flip_left_enter, R.animator.card_flip_left_exit)\n                .replace(R.id.frameLayout, new CardBackFragment())\n                .addToBackStack(null)\n                .commit();\n        }\n    }\n    ```", "```kt\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <FrameLayout \n        android:id=\"@+id/frameLayout\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\">\n        <LinearLayout\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:orientation=\"vertical\"\n            android:padding=\"16dp\">\n            <ImageButton\n                android:id=\"@+id/imageViewThumbnail\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:scaleType=\"centerCrop\"\n                android:background=\"@android:color/transparent\"/>\n        </LinearLayout>\n        <ImageView\n            android:id=\"@+id/imageViewExpanded\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"match_parent\"\n            android:visibility=\"invisible\" />\n    </FrameLayout>\n    ```", "```kt\n    private Animator mCurrentAnimator;\n    private ImageView mImageViewExpanded;\n    ```", "```kt\n    public Bitmap loadSampledResource(int imageID, int targetHeight, int targetWidth) {\n        final BitmapFactory.Options options = new BitmapFactory.Options();\n        options.inJustDecodeBounds = true;\n        BitmapFactory.decodeResource(getResources(), imageID, options);\n        final int originalHeight = options.outHeight;\n        final int originalWidth = options.outWidth;\n        int inSampleSize = 1;\n        while ((originalHeight / (inSampleSize *2)) > targetHeight && (originalWidth / (inSampleSize *2)) > targetWidth) {\n            inSampleSize *= 2;\n        }\n        options.inSampleSize =inSampleSize;\n        options.inJustDecodeBounds = false;\n        return (BitmapFactory.decodeResource(getResources(), imageID, options));\n    }\n    ```", "```kt\n    final ImageView imageViewThumbnail = (ImageView)findViewById(R.id.imageViewThumbnail);\n    imageViewThumbnail.setImageBitmap(loadSampledResource(R.drawable.image, 100, 100));\n    imageViewThumbnail.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View view) {\n            zoomFromThumbnail((ImageView) view);\n        }\n    });\n    mImageViewExpanded = (ImageView) findViewById(R.id.imageViewExpanded);\n    mImageViewExpanded.setOnClickListener(new View.OnClickListener() {\n        @Override\n        public void onClick(View v) {\n            mImageViewExpanded.setVisibility(View.GONE);\n            mImageViewExpanded.setImageBitmap(null);\n            imageViewThumbnail.setVisibility(View.VISIBLE);\n        }\n    });\n    ```", "```kt\n    private void zoomFromThumbnail(final ImageView imageViewThumb) {\n        if (mCurrentAnimator != null) {\n            mCurrentAnimator.cancel();\n        }\n\n        final Rect startBounds = new Rect();\n        final Rect finalBounds = new Rect();\n        final Point globalOffset = new Point();\n\n        imageViewThumb.getGlobalVisibleRect(startBounds);\n        findViewById(R.id.frameLayout).getGlobalVisibleRect(finalBounds, globalOffset);\n        mImageViewExpanded.setImageBitmap(loadSampledResource(R.drawable.image, finalBounds.height(), finalBounds.width()));\n\n        startBounds.offset(-globalOffset.x, -globalOffset.y);\n        finalBounds.offset(-globalOffset.x, -globalOffset.y);\n\n        float startScale;\n        if ((float) finalBounds.width() / finalBounds.height() > (float) startBounds.width() / startBounds.height()) {\n            startScale = (float) startBounds.height() / finalBounds.height();\n            float startWidth = startScale * finalBounds.width();\n            float deltaWidth = (startWidth - startBounds.width()) / 2;\n            startBounds.left -= deltaWidth;\n            startBounds.right += deltaWidth;\n        } else {\n            startScale = (float) startBounds.width() / finalBounds.width();\n            float startHeight = startScale * finalBounds.height();\n            float deltaHeight = (startHeight - startBounds.height()) / 2;\n            startBounds.top -= deltaHeight;\n            startBounds.bottom += deltaHeight;\n        }\n\n        imageViewThumb.setVisibility(View.GONE);\n        mImageViewExpanded.setVisibility(View.VISIBLE);\n        mImageViewExpanded.setPivotX(0f);\n        mImageViewExpanded.setPivotY(0f);\n\n        AnimatorSet animatorSet = new AnimatorSet();\n        animatorSet.play(ObjectAnimator.ofFloat(mImageViewExpanded, View.X,startBounds.left, finalBounds.left)).with(ObjectAnimator.ofFloat(mImageViewExpanded, View.Y,startBounds.top, finalBounds.top))\n                    .with(ObjectAnimator.ofFloat(mImageViewExpanded, View.SCALE_X, startScale, 1f))\n                    .with(ObjectAnimator.ofFloat(mImageViewExpanded, View.SCALE_Y, startScale, 1f));\n        animatorSet.setDuration(1000);\n        animatorSet.setInterpolator(new DecelerateInterpolator());\n        animatorSet.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                mCurrentAnimator = null;\n            }\n            @Override\n            public void onAnimationCancel(Animator animation) {\n                mCurrentAnimator = null;\n            }\n        });\n        animatorSet.start();\n        mCurrentAnimator = animatorSet;\n    }\n    ```", "```kt\nanimatorSet.play(ObjectAnimator.ofFloat(mImageViewExpanded, View.X,startBounds.left, finalBounds.left)).with(ObjectAnimator.ofFloat(mImageViewExpanded, View.Y,startBounds.top, finalBounds.top)).with(ObjectAnimator.ofFloat(mImageViewExpanded, View.SCALE_X,startScale, 1f)).with(ObjectAnimator.ofFloat(mImageViewExpanded, View.SCALE_Y, startScale, 1f));\n```", "```kt\nanimatorSet.setDuration(1000);\nanimatorSet.setInterpolator(new AccelerateInterpolator());\n```", "```kt\ngetResources().getInteger(android.R.integer.config_shortAnimTime)\n```"]