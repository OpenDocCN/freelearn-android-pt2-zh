["```kt\npackage com.app.intentservice;\n\nimport android.app.IntentService;\nimport android.app.Notification;\nimport android.app.NotificationManager;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.support.v4.app.NotificationCompat;\n\npublic class CustomIntentService extends IntentService {\n\n  private static final int NOTIFICATION_ID=1;\n  NotificationManager notificationManager;\n  Notification notification;\n\n  public static final String ACTION_CUSTOM_INTENT_SERVICE = \"com.app.intentservice.RESPONSE\";\n  public static final String ACTION_MY_UPDATE =\"com.app.intentservice.UPDATE\";\n  public static final String EXTRA_KEY_IN = \"EXTRA_IN\";\n  public static final String EXTRA_KEY_OUT = \"EXTRA_OUT\";\n  public static final String EXTRA_KEY_UPDATE = \"EXTRA_UPDATE\";\n  String activityMessage;\n\n  String extraOut;\n\n  public CustomIntentService() {\n    super(\"com.app.intentservice.CustomIntentService\");\n  }\n\n  @Override\n  protected void onHandleIntent(Intent intent) {\n\n    //get input\n    activityMessage = intent.getStringExtra(EXTRA_KEY_IN);\n    extraOut = \"Hello: \" +  activityMessage;\n\n    for(int i = 0; i <=10; i++){\n      try {\n        Thread.sleep(1000);\n      } catch (InterruptedException e) {\n    // TODO Auto-generated catch block\n        e.printStackTrace();\n      }\n\n      //send update \n      Intent intentUpdate = new Intent();\n      intentUpdate.setAction(ACTION_MY_UPDATE);\n      intentUpdate.addCategory(Intent.CATEGORY_DEFAULT);\n      intentUpdate.putExtra(EXTRA_KEY_UPDATE, i);\n      sendBroadcast(intentUpdate);\n\n      //generate notification\n      String notificationText = String.valueOf((int)(100 * i / 10)) + \" %\";\n      notification = new NotificationCompat.Builder(getApplicationContext())\n      .setContentTitle(\"Progress\")\n      .setContentText(notificationText)\n      .setTicker(\"Notification!\")\n      .setWhen(System.currentTimeMillis())\n      .setDefaults(Notification.DEFAULT_SOUND)\n      .setAutoCancel(true)\n      .setSmallIcon(R.drawable.ic_launcher)\n      .build();\n\n      notificationManager.notify(NOTIFICATION_ID, notification);\n    }\n\n    //return result\n    Intent intentResponse = new Intent();\n    intentResponse.setAction(ACTION_CUSTOM_INTENT_SERVICE);\n    intentResponse.addCategory(Intent.CATEGORY_DEFAULT);\n    intentResponse.putExtra(EXTRA_KEY_OUT, extraOut);\n    sendBroadcast(intentResponse);\n  }\n\n  @Override\n  public void onCreate() {\n    // TODO Auto-generated method stub\n    super.onCreate();\n    notificationManager = (NotificationManager)getSystemService(Context.NOTIFICATION_SERVICE);\n  }\n}\n```", "```kt\n    //send update \n    Intent intentUpdate = new Intent();\n    intentUpdate.setAction(ACTION_MyUpdate);\n    intentUpdate.addCategory(Intent.CATEGORY_DEFAULT);\n    intentUpdate.putExtra(EXTRA_KEY_UPDATE, i);\n    sendBroadcast(intentUpdate);\n    ```", "```kt\n    //generate notification\n    String notificationText = String.valueOf((int)(100 * i / 10)) + \" %\";\n    myNotification = new NotificationCompat.Builder(getApplicationContext())\n    .setContentTitle(\"Progress\")\n    .setContentText(notificationText)\n    .setTicker(\"Notification!\")\n    .setWhen(System.currentTimeMillis())\n    .setDefaults(Notification.DEFAULT_SOUND)\n    .setAutoCancel(true)\n    .setSmallIcon(R.drawable.ic_launcher)\n    .build();\n\n    notificationManager.notify(MY_NOTIFICATION_ID, myNotification);\n    ```", "```kt\n    //return result\n    Intent intentResponse = new Intent();\n    intentResponse.setAction(ACTION_MyIntentService);\n    intentResponse.addCategory(Intent.CATEGORY_DEFAULT);\n    intentResponse.putExtra(EXTRA_KEY_OUT, extraOut);\n    sendBroadcast(intentResponse);\n    ```", "```kt\npublic class IntentServiceExampleTwo extends IntentService {\n  private static final String TAG =IntentServiceExampleTwo.class.getSimpleName();\n\n  public static final String INPUT_TEXT_STRING=\"INPUT_TEXT_STRING\";\n  public static final String OUTPUT_TEXT=\"OUTPUT_TEXT\";\n\n  /**\n   *  initiate service in background thread with service name\n   */\n  public IntentServiceExampleTwo() {\n    super(IntentServiceExampleTwo.class.getSimpleName());\n  }\n\n  @Override\n  protected void onHandleIntent(Intent intent) {\n    Log.i(TAG,\"onHandleIntent()\");\n\n    String data =intent.getStringExtra(INPUT_TEXT_STRING);\n    Log.d(TAG,data);\n\n    data=data.toUpperCase();\n\n    SystemClock.sleep(4*1000);\n\n    Intent stringBroadCastIntent =new Intent();\n\n    stringBroadCastIntent.setAction(TextCapitalizeResultReceiver.ACTION_TEXT_CAPITALIZED);\n\n    stringBroadCastIntent.addCategory(Intent.CATEGORY_DEFAULT);\n\n    stringBroadCastIntent.putExtra(OUTPUT_TEXT, data);\n\n    sendBroadcast(stringBroadCastIntent);\n  }\n\n}\n```", "```kt\npublic class UpperCaseReceiver extends BroadcastReceiver {\n\n  @Override\n  public void onReceive(Context context, Intent intent) {\n    TextView textViewResult = (TextView)findViewById(R.id.receiving_text_view);\n    String result =intent.getStringExtra(ExampleIntentService.OUTPUT_TEXT);\n    textViewResult.setText(result);\n  }\n\n};\n```", "```kt\nprivate void registerReceiver() {\n\n  IntentFilter intentFilter =new IntentFilter(UpperCaseResultReceiver.ACTION_TEXT_CAPITALIZED);\n\n  intentFilter.addCategory(Intent.CATEGORY_DEFAULT);\n\n  capitalCaseReceiver=new UpperCaseResultReceiver();\n\n  registerReceiver(capitalCaseReceiver, intentFilter);\n}\n```", "```kt\nIntent textUpperCaseIntent = new Intent(MainActivity.this, ExampleIntentService.class);\n\ntextUpperCaseIntent.putExtra(ExampleIntentService.INPUT_TEXT, inputText);\n\nstartService(textUpperCaseIntent);\n```", "```kt\nEditText text = (EditText) findViewById(R.id.editText1);\n\nint i = Integer.parseInt(text.getText().toString());\n\nIntent intent = new Intent(MainActivity.this, MyBroadcastReceiver.class);\n\nPendingIntent pendingIntent = PendingIntent.getBroadcast( MainActivity.this, 234324243, intent, 0);\n\nAlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);\n\nalarmManager.set(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() + (i * 1000), pendingIntent);\n\nToast.makeText(MainActivity.this, \"Alarm set in \" + i + \" seconds\",\n\nToast.LENGTH_SHORT).show();\n```", "```kt\n@Override\npublic void onReceive(Context context, Intent intent) {\n  Toast.makeText(context, \"Alarm is ringing...\",\n  Toast.LENGTH_LONG).show();\n\n  Vibrator vibrator = (Vibrator)context.getSystemService(Context.VIBRATOR_SERVICE);\n  vibrator.vibrate(2000);\n}\n```", "```kt\n<uses-permission android:name=\"android.permission.VIBRATE\" />\n```", "```kt\n<receiver android:name=\"MyBroadcastReceiver\" >\n</receiver>\n```"]