["```kt\n compile \"com.google.android.gms:play-services:7.5.+\"\n```", "```kt\nInstanceID instanceID = InstanceID.getInstance(this);\nString token = instanceID.getToken(getString(R.string.gcm_defaultSenderId),\nGoogleCloudMessaging.INSTANCE_ID_SCOPE, null);\n```", "```kt\n@Override\npublic void onTokenRefresh() {\n  //Get new token from Instance ID with the code above\n  //Send new token to our Server\n}\n```", "```kt\n<uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\n<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n<uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\n\n<permission android:name=\"com.example.gcm.permission.C2D_MESSAGE\"\n  android:protectionLevel=\"signature\" />\n<uses-permission android:name=\"com.example.gcm.permission.C2D_MESSAGE\" />\n\n<application ...>\n  <receiver\n    android:name=\"com.google.android.gms.gcm.GcmReceiver\"\n    android:exported=\"true\"\n    android:permission=\"com.google.android.c2dm.permission.SEND\" >\n    <intent-filter>\n      <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n      <category android:name=\"com.example.gcm\" />\n    </intent-filter>\n  </receiver>\n  <service\n    android:name=\"com.example.MyGcmListenerService\"\n    android:exported=\"false\" >\n    <intent-filter>\n      <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n    </intent-filter>\n  </service>\n  <service\n    android:name=\"com.example.MyInstanceIDListenerService\"\n    android:exported=\"false\">\n    <intent-filter>\n      <action android:name=\"com.google.android.gms.iid.InstanceID\"/>\n    </intent-filter>\n  </service>\n</application>\n\n</manifest>\n```", "```kt\nContent-Type:application/json\nAuthorization:key=\"SERVER_API_LEY\"\n{\n  \"to\" : \"RECEIVER_TOKEN\"\n  \"data\" : {\n    \"text\":\"Testing GCM\"\n  },\n}\n```", "```kt\n<uses-permission android:name=\"android.permission.INTERNET\" />\n<uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\n<uses-permission android:name=\"android.permission.WAKE_LOCK\" />\n<uses-permission android:name=\"android.permission.VIBRATE\" />\n<uses-permission android:name=\"android.permission.RECEIVE_BOOT_COMPLETED\" />\n<uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\n<uses-permission android:name=\"com.google.android.c2dm.permission.RECEIVE\" />\n<permission android:protectionLevel=\"signature\" android:name=\"com.packtub.masteringandroidapp.permission.C2D_MESSAGE\" />\n<uses-permission android:name=\"com.packtpub.masteringandroidapp.permission.C2D_MESSAGE\" />\n```", "```kt\n<service android:name=\"com.parse.PushService\" />\n<receiver android:name=\"com.parse.ParseBroadcastReceiver\">\n  <intent-filter>\n    <action android:name=\"android.intent.action.BOOT_COMPLETED\" />\n    <action android:name=\"android.intent.action.USER_PRESENT\" />\n  </intent-filter>\n</receiver>\n\n<receiver android:name=\"com.parse.ParsePushBroadcastReceiver\"\n  android:exported=\"false\">\n  <intent-filter>\n    <action android:name=\"com.parse.push.intent.RECEIVE\" />\n    <action android:name=\"com.parse.push.intent.DELETE\" />\n    <action android:name=\"com.parse.push.intent.OPEN\" />\n  </intent-filter>\n</receiver>\n\n<receiver android:name=\"com.parse.GcmBroadcastReceiver\"\n  android:permission=\"com.google.android.c2dm.permission.SEND\">\n  <intent-filter>\n    <action android:name=\"com.google.android.c2dm.intent.RECEIVE\" />\n    <action android:name=\"com.google.android.c2dm.intent.REGISTRATION\" />\n    <category android:name=\"com.packtpub.masteringandroidapp\" />\n  </intent-filter>\n</receiver>\n\n</application>\n```", "```kt\nParsePush.subscribeInBackground(\"\", new SaveCallback() {\n  @Override\n  public void done(com.parse.ParseException e) {\n    if (e == null) {\n      Log.d(\"com.parse.push\", \"successfully subscribed to the broadcast channel.\");\n    } else {\n      Log.e(\"com.parse.push\", \"failed to subscribe for push\", e);\n      }\n  }\n});\n```", "```kt\npublic class MyNotificationReceiver  extends BroadcastReceiver {\n\n  @Override\n  public void onReceive(Context context, Intent intent) {\n    Notification notification = new NotificationCompat.Builder(context)\n    .setContentTitle(\"Title\")\n    .setContentText(\"Text\")\n    .setSmallIcon(R.drawable.ic_launcher)\n    .build();\n    NotificationManagerCompat.from(context).notify(1231,notification);\n  }\n\n}\n```", "```kt\nreceiver android:name=\"com.packtpub.masteringandroidapp.MyNotificationReceiver\" android:exported=\"false\">\n  <intent-filter>\n    <action android:name=\"com.parse.push.intent.RECEIVE\" />\n    <action android:name=\"com.parse.push.intent.DELETE\" />\n    <action android:name=\"com.parse.push.intent.OPEN\" />\n  </intent-filter>\n</receiver>\n```", "```kt\nParseAnalytics.trackAppOpenedInBackground(getIntent());\n```", "```kt\npublic class OfferDetailActivity extends AppCompatActivity {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_offer_detail);\n\n    String job_title = getIntent().getStringExtra(\"job_title\");\n\n    Map<String, String> eventParams = new HashMap<>();\n    eventParams.put(\"job_title\", job_title);\n    ParseAnalytics.trackEventInBackground(\"job_visited\", eventParams);\n```", "```kt\nMap<String, String> dimensions = new HashMap<String, String>(); dimensions.put('code', Integer.toString(error.getCode())); ParseAnalytics.trackEvent('error', dimensions);\n```", "```kt\ncompile 'net.hockeyapp.android:HockeySDK:3.5.0-b.4'\n```", "```kt\nCrashManager.register(this, APP_ID);\n```"]