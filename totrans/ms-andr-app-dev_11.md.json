["```kt\nLog.i(\"MyActivity\", \"Example of an info log\");\n```", "```kt\npublic class MyLogger {\n\n  static final boolean LOG = false;\n\n  public static void i(String tag, String string) {\n    if (LOG) android.util.Log.i(tag, string);\n  }\n\n  public static void e(String tag, String string) {\n    if (LOG) android.util.Log.e(tag, string);\n  }\n  â€¦\n```", "```kt\nstatic final boolean LOG = BuildConfing.DEBUG; \n```", "```kt\ncompile 'com.jakewharton.timber:timber:3.1.0'\n```", "```kt\nTimber.tag(\"LifeCycles\");\nTimber.d(\"Activity Created\");\n```", "```kt\nif (BuildConfig.DEBUG) {\n  Timber.plant(new Timber.DebugTree());\n} else {\n  Timber.plant(new CrashReportingTree());\n}\n\n/** A tree which logs important information for crash reporting. */\nprivate static class CrashReportingTree extends Timber.Tree {\n  @Override protected void log(int priority, String tag, String message, Throwable t) {\n    if (priority == Log.VERBOSE || priority == Log.DEBUG) {\n      return;\n    }\n    //Track error to parse.com\n  }\n}\n```", "```kt\nMasteringAndroidDAO.getInstance().clearDB(getActivity());\nMasteringAndroidDAO.getInstance().storeOffers(getActivity(), jobOffersList);\n```", "```kt\ntestCompile \"org.robolectric:robolectric:3.0\"\n```", "```kt\nrobolectric.properties\nsdk=<SDK_VERSION>\n```", "```kt\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<LinearLayout  android:layout_width=\"match_parent\" android:layout_height=\"match_parent\">\n  <Button android:id=\"@+id/login\" android:text=\"Login\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" />\n</LinearLayout>\n```", "```kt\npublic class WelcomeActivity extends Activity {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.welcome_activity);\n\n    View button = findViewById(R.id.login);\n    button.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View view) {\n        startActivity(new Intent(WelcomeActivity.this, LoginActivity.class));\n      }\n    });\n  }\n}\n```", "```kt\n@RunWith(RobolectricGradleTestRunner.class)\n@Config(constants = BuildConfig.class)\n```", "```kt\nWelcomeActivity activity = Robolectric.setupActivity(WelcomeActivity.class);\n```", "```kt\nactivity.findViewById(R.id.login).performClick();\n```", "```kt\nIntent expectedIntent = new Intent(activity, LoginActivity.class);\nassertThat(shadowOf(activity).getNextStartedActivity(), is(equalTo(expectedIntent)));\n```", "```kt\n@RunWith(RobolectricGradleTestRunner.class)\n@Config(constants = BuildConfig.class)\npublic class WelcomeActivityTest {\n\n  @Test\n  public void loginPress_startsLoginActivity() {\n    WelcomeActivity activity = Robolectric.setupActivity(WelcomeActivity.class);\n\n    activity.findViewById(R.id.login).performClick();\n\n    Intent expectedIntent = new Intent(activity, LoginActivity.class);\n    assertThat(shadowOf(activity).getNextStartedActivity(), is(equalTo(expectedIntent)));\n  }\n}\n```", "```kt\n./gradlew test --continue\n```", "```kt\n    dependencies {\n      androidTestCompile 'com.android.support.test:runner:0.3'\n      androidTestCompile 'com.android.support.test:rules:0.3'\n      androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2'\n      androidTestCompile 'com.android.support.test.espresso:espresso-intents:2.2'\n    }\n    ```", "```kt\nandroid {\n  defaultConfig {\n    testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n  }\n}\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<LinearLayout \n  android:orientation=\"vertical\"\n  android:layout_width=\"match_parent\"\n  android:layout_height=\"match_parent\">\n\n  <EditText\n    android:id=\"@+id/input_username\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:inputType=\"textEmailAddress\" />\n\n  <EditText\n    android:id=\"@+id/input_password\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"wrap_content\"\n    android:inputType=\"textPassword\" />\n\n  <Button\n    android:id=\"@+id/button_signin\"\n    android:layout_width=\"wrap_content\"\n    android:layout_height=\"wrap_content\"\n    android:text=\"@string/signin\"/>\n</LinearLayout>\n```", "```kt\npublic class LoginActivity extends Activity {\n\n  @Override\n  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_login);\n\n    final EditText inputUsername = (EditText) findViewById(R.id.input_username);\n    final EditText inputPassword = (EditText) findViewById(R.id.input_password);\n\n    Button buttonLogin = (Button) findViewById(R.id.button_signin);\n\n    buttonLogin.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View v) {\n        startActivity(new Intent(getApplicationContext(), SplashActivity.class)\n        .putExtra(\"username\", inputUsername.getText().toString())\n        .putExtra(\"password\", inputPassword.getText().toString()));\n        finish();\n      }\n    });\n  }\n}\n```", "```kt\n@RunWith(AndroidJUnit4.class)\n```", "```kt\n@Rule\npublic IntentsTestRule<LoginActivity> mActivityRule =\n  new IntentsTestRule<>(LoginActivity.class);\n```", "```kt\nString expectedUsername = \"mastering@android.com\";\nString expectedPassword = \"electric_sheep\";\n\nonView(withId(R.id.input_username)).perform(typeText(expectedUsername));\nonView(withId(R.id.input_password)).perform(typeText(expectedPassword));\n```", "```kt\nonView(withId(R.id.button_signin)).perform(click());\n```", "```kt\nintended(hasExtras(allOf(\n  hasEntry(equalTo(\"username\"), equalTo(expectedUsername)),\n  hasEntry(equalTo(\"password\"), equalTo(expectedPassword)))));\n```", "```kt\n@RunWith(AndroidJUnit4.class)\npublic class LoginActivityTest {\n\n  @Rule\n  public IntentsTestRule<LoginActivity> mActivityRule =\n  new IntentsTestRule<>(LoginActivity.class);\n\n  @Test\n  public void loginButtonPressed_sendsLoginCredentials() {\n    String expectedUsername = \"mastering@android.com\";\n    String expectedPassword = \"electric_sheep\";\n\n    onView(withId(R.id.input_username)).perform(typeText(expectedUsername));\n    onView(withId(R.id.input_password)).perform(typeText(expectedPassword));\n\n    onView(withId(R.id.button_signin)).perform(click());\n\n    intended(hasExtras(allOf(\n    hasEntry(equalTo(\"username\"), equalTo(expectedUsername)),\n    hasEntry(equalTo(\"password\"), equalTo(expectedPassword)))));\n  }\n}\n```", "```kt\n./gradlew cC\n```", "```kt\n$ adb shell monkey [options] <event-count>\n```", "```kt\n../sdk/platform-tools/adb\n```", "```kt\nadb shell monkey -p com.packtpub.masteringandroidapp -v 500\n```", "```kt\nInput username tap\nInput username enterText us\n```", "```kt\nInput username tap\nInput username enterText us\nInput clearform click\nInput currentvalue \"\"\n```"]