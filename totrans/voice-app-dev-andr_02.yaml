- en: Chapter 2. Text-to-Speech Synthesis
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章。文本到语音合成
- en: 'Have you ever wondered how your mobile device can read aloud your favorite
    e-book or your last e-mail? In this chapter, you will learn about the technology
    of text-to-speech synthesis (TTS) and how to use the Google TTS engine to develop
    applications that speak. The topics covered are:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾好奇过，你的移动设备是如何大声朗读你最喜欢的电子书或最后的电子邮件的？在本章中，你将了解文本到语音合成技术（TTS），以及如何使用谷歌TTS引擎开发能够发声的应用程序。涵盖的主题包括：
- en: The technology of text to speech synthesis
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本到语音合成技术
- en: Google text to speech synthesis
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 谷歌文本到语音合成
- en: Developing applications using text to speech synthesis
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用文本到语音合成开发应用程序
- en: By the end of this chapter, you should be able to develop apps that use text-to-speech
    synthesis on Android devices.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你应该能够在Android设备上开发使用文本到语音合成的应用程序。
- en: Introducing text-to-speech synthesis
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍文本到语音合成
- en: 'Text-to-speech synthesis, often abbreviated to TTS, is a technology that enables
    a written text to be converted into speech. TTS has been used widely to provide
    screen reading for people with visual impairments, and also for users with severe
    speech impairments. Perhaps the best known user of speech synthesis technology
    is the physicist Stephen Hawking who suffers from motor neurone disease and uses
    TTS as his speech has become unintelligible. With the aid of word prediction technology
    he is able to construct a sentence which he then sends to the built-in TTS system
    (see further: [http://www.hawking.org.uk/the-computer.html](http://www.hawking.org.uk/the-computer.html)).'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 文本到语音合成（通常缩写为TTS）是一种技术，它可以将书面文本转换为语音。TTS已经被广泛用于为视障人士提供屏幕阅读，同时也用于有严重言语障碍的用户。或许最著名的语音合成技术用户是物理学家斯蒂芬·霍金，他患有运动神经元病，当他的言语变得无法理解时，使用TTS作为他的语音。在单词预测技术的帮助下，他能够构建一个句子，然后将其发送到内置的TTS系统（更多信息请参见：[http://www.hawking.org.uk/the-computer.html](http://www.hawking.org.uk/the-computer.html)）。
- en: TTS is also used widely in situations where the user's hands or eyes are busy,
    for example, while driving navigation systems speak the directions as the vehicle
    progresses along a route. Another widespread use for TTS is in public announcement
    systems, for example, at airports or train stations. TTS is also used in phone-based
    call-center applications and in spoken dialog systems in general to speak the
    system's prompts, and in conjunction with talking heads on websites that use conversational
    agents to provide customer help and support.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: TTS还广泛应用于用户手或眼忙碌的情况下，例如，在驾驶导航系统时，车辆沿着路线行进时，系统会朗读方向。TTS的另一个广泛用途是在公共广播系统中，例如在机场或火车站。TTS还用于基于电话的呼叫中心应用程序，以及一般语音对话系统，用于朗读系统的提示，并与网站上的对话头像结合使用，以提供客户帮助和支持。
- en: The quality of a TTS system has a significant bearing on how it is perceived
    by users. Users may be annoyed by a system that sounds robotic or that pronounces
    words such as names or addresses incorrectly. However, as long as the output from
    the TTS is intelligible, this should at least allow the system to perform adequately.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: TTS系统的质量对用户的感知有很大影响。用户可能会对听起来机械的系统或错误发音如地名或地址等单词的系统感到烦恼。然而，只要TTS的输出可以理解，这至少应该能允许系统充分地执行功能。
- en: The technology of text-to-speech synthesis
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 文本到语音合成技术
- en: 'There are two main stages in text-to-speech synthesis:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 文本到语音合成主要有两个阶段：
- en: Text analysis, where the text to be synthesized is analyzed and prepared for
    spoken output.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文本分析，即对要合成的文本进行分析和准备，以便进行口语输出。
- en: Wave form generation, where the analyzed text is converted into speech.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 波形生成，即分析后的文本被转换为语音。
- en: There can be many problems in the text analysis stage. For example, what is
    the correct pronunciation of the word *staring*? Is it to be based on the combination
    of the word *star* + *ing* or of *stare* + *ing*? Determining the answer to this
    question involves complex analysis of the structure of words; in this case, determining
    how the root form of a word such as *stare* is changed by the addition of a suffix
    such as *ing*.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 文本分析阶段可能会遇到很多问题。例如，单词*staring*的正确发音是什么？是基于单词*star* + *ing*的组合还是*stare* + *ing*的组合？要确定这个问题的答案需要对单词结构进行复杂分析；在这种情况下，需要确定像*stare*这样的单词的词根形式如何通过添加如*ing*这样的后缀而改变。
- en: There are also words that have alternative pronunciations depending on their
    use in a particular sentence. For example, *live* as a verb will rhyme with *give*,
    but as an adjective it rhymes with *five*. The part of speech also affects stress
    assignment within a word; for example, *record* as a noun is pronounced *'record*
    (with the stress on the first syllable), and as a verb as *re'cord* (with the
    stress on the second syllable).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些单词根据它们在特定句子中的使用具有不同的发音。例如，作为动词的*live*与*give*押韵，但作为形容词时与*five*押韵。词性还会影响单词内的重音分配；例如，名词*record*的发音为*'record*（重音在第一个音节上），作为动词时为*re'cord*（重音在第二个音节上）。
- en: Another problem concerns the translation of numeric values into a form suitable
    for spoken output (referred to as *normalization*). For example, the item *12.9.13*,
    if it represents a date, should not be spoken out as *twelve dot nine dot thirteen*
    but as *December 9th, two thousand thirteen*. Note that application developers
    using the Google TTS API do not have to concern themselves with these issues as
    they are built in to the TTS engine.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个问题涉及到将数字值转换成适合语音输出的形式（这被称为*规范化*）。例如，项目*12.9.13*如果它代表一个日期，就不应该读作*twelve dot
    nine dot thirteen*，而应该是*December 9th, two thousand thirteen*。需要注意的是，使用Google TTS
    API的应用程序开发者无需担心这些问题，因为这些问题已经内置到TTS引擎中了。
- en: Turning to wave form generation, the main methods used in earlier systems were
    either **articulatory synthesis**, which attempts to model the physical process
    by which humans produce speech, or **formant synthesis**, which models characteristics
    of the acoustic signal.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 转向波形生成，早期系统中使用的主要方法要么是**发音合成**，试图模拟人类产生语音的物理过程，或者是**共振峰合成**，它模拟声学信号的特征。
- en: Nowadays **concatenative speech synthesis** is used, in which pre-recorded units
    of speech are stored in a speech database and selected and joined together during
    speech generation. The units are of various sizes; single sounds (or phones),
    adjacent pairs of sounds (diphones), which produce a more natural output since
    the pronunciation of a phone varies based on the surrounding phones; syllables,
    words, phrases, and sentences; and complex algorithms have been developed to select
    the best chain of candidate units and to join them together smoothly to produce
    fluent speech. The output of some systems is often indistinguishable from real
    human speech, particularly where prosody is used effectively. Prosody includes
    phrasing, pitch, loudness, tempo, and rhythm, and is used to convey differences
    in meaning as well as attitude.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在使用的则是**拼接语音合成**，在这种合成中，预先录制的语音单元存储在语音数据库中，在生成语音时选择并连接这些单元。这些单元的大小各不相同；单个声音（或音素），相邻的声音对（双音素），这会产生更自然的输出，因为一个音素的发音会根据周围音素而变化；音节、单词、短语和句子；已经开发出复杂的算法来选择最佳的候选单元链，并将它们平滑地连接起来以产生流畅的语音。一些系统的输出常常与真实的人类语音无法区分，特别是在有效使用语调的情况下。语调包括语调、音高、响度、速度和节奏，用于传达意义上的差异以及态度。
- en: Using pre-recorded speech instead of TTS
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用预先录制的语音而不是TTS
- en: Although the quality of TTS has improved considerably over the past few years,
    many commercial enterprises prefer to use pre-recorded speech in order to guarantee
    high-quality output. Professional artists, often referred to as voice talent,
    are employed to record the system's prompts.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管近年来TTS的质量有了显著的提高，但许多商业企业仍然倾向于使用预先录制的语音，以确保输出高质量。通常被称为声音天才的专业艺术家被雇佣来录制系统的提示音。
- en: The downside of pre-recorded prompts is that they cannot be used where the text
    to be output is unpredictable—as in apps for reading e-mail, text messages, or
    news, or in applications where new names are being continually added to the customer
    list. Even where the text can be predicted but involves a large number of combinations—as
    in flight announcements at airports—the different elements of the output have
    to be concatenated from pre-recorded segments but in many cases the result is
    jerky and unnatural. Another situation is where output in other languages might
    be made available. It would be possible to employ voice talent to record the output
    in the various languages but for greater flexibility the use of different language
    versions of the TTS might be less costly and sufficient for purpose.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 预录提示的缺点是它们不能用于输出文本不可预测的地方——如在阅读电子邮件、短信或新闻的应用程序中，或者在客户名单不断添加新名字的应用程序中。即使文本可以被预测，但涉及大量组合——如在机场的航班公告中——输出元素的不同部分必须从预录片段拼接起来，但在许多情况下，结果却是生硬和不自然的。另一种情况是可能需要提供其他语言的输出。可以聘请声音人才以各种语言录制输出，但对于更大的灵活性，使用不同语言版本的TTS可能成本更低，且足够满足目的。
- en: There has been a considerable amount of research on the issue of TTS versus
    pre-recorded speech. See, for example, *Practical Speech User Interface Design*
    by *James R. Lewis*, *CRC Press*.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 关于TTS与预录语音的问题，已经进行了大量的研究。例如，请参阅*James R. Lewis*所著的《*实用语音用户界面设计*》，*CRC Press*。
- en: Using Google text-to-speech synthesis
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用谷歌文本语音合成
- en: TTS has been available on Android devices since Android 1.6 (API Level 4).The
    components of the Google TTS API (package `android.speech.tts`) are documented
    at [http://developer.android.com/reference/android/speech/tts/package-summary.html](http://developer.android.com/reference/android/speech/tts/package-summary.html).
    Interfaces and classes are listed and further details can be obtained by clicking
    on these.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: TTS自Android 1.6（API级别4）起在Android设备上可用。谷歌TTS API（包`android.speech.tts`）的组件在[http://developer.android.com/reference/android/speech/tts/package-summary.html](http://developer.android.com/reference/android/speech/tts/package-summary.html)有文档记录。接口和类被列出，点击这些可以获取更多详细信息。
- en: Starting the TTS engine
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动TTS引擎
- en: Starting the TTS engine involves creating an instance of the `TextToSpeech`
    class along with the method that will be executed when the TTS engine is initialized.
    Checking that TTS has been initialized is done through an interface called `OnInitListener`.
    If TTS initialization is complete, the method `onInit` is invoked.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 启动TTS引擎涉及创建`TextToSpeech`类的一个实例以及当TTS引擎初始化时将执行的方法。通过一个名为`OnInitListener`的接口来检查TTS是否已初始化。如果TTS初始化完成，将调用`onInit`方法。
- en: The following lines of code create a `TextToSpeech` object that implements the
    `onInit` method of the `onInitListener` interface.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码行创建了一个实现`onInitListener`接口的`onInit`方法的`TextToSpeech`对象。
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Tip
  id: totrans-29
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files for all Packt books you have purchased
    from your account at [http://www.packtpub.com](http://www.packtpub.com). If you
    purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从你在[http://www.packtpub.com](http://www.packtpub.com)的账户下载你购买的所有Packt图书的示例代码文件。如果你在其他地方购买了这本书，可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)注册，文件会直接通过电子邮件发送给你。
- en: 'You can also visit the web page for the book: [http://lsi.ugr.es/zoraida/androidspeechbook](http://lsi.ugr.es/zoraida/androidspeechbook)'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你也可以访问这本书的网页：[http://lsi.ugr.es/zoraida/androidspeechbook](http://lsi.ugr.es/zoraida/androidspeechbook)
- en: 'In the example, when TTS is initialized correctly, the `speak` method is invoked,
    which may include the following parameters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在示例中，当TTS正确初始化后，将调用`speak`方法，该方法可能包括以下参数：
- en: '`QUEUE_ADD`: The new entry placed at the end of the playback queue.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QUEUE_ADD`：新条目被放置在播放队列的末尾。'
- en: '`QUEUE_FLUSH`: All entries in the playback queue are dropped and replaced by
    the new entry.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`QUEUE_FLUSH`：播放队列中的所有条目被丢弃，并由新条目替换。'
- en: 'Due to limited storage on some devices, not all languages that are supported
    may actually be installed on a particular device. For this reason, it is important
    to check if a particular language is available before creating the `TextToSpeech`
    object. This way, it is possible to download and install the required language-specific
    resource files if necessary. This is done by sending an `Intent` with the action
    `ACTION_CHECK_TTS_DATA` method, which is part of the `TextToSpeech.Engine` class
    as given in the following code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 由于某些设备的存储空间有限，可能并非所有支持的语言实际上都安装在特定设备上。因此，在创建 `TextToSpeech` 对象之前，检查特定语言是否可用非常重要。这样，如有必要，可以下载并安装所需的特定语言资源文件。这是通过发送带有
    `ACTION_CHECK_TTS_DATA` 动作的 `Intent` 来实现的，它是 `TextToSpeech.Engine` 类的一部分，如下面的代码所示：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'If the language data has been correctly installed, the `onActivityResult` handler
    will receive a `CHECK_VOICE_DATA_PASS`, this is when we should create the `TextToSpeech`
    instance. If the data is not available, the action `ACTION_INSTALL_TTS_DATA` will
    be executed as given in the following code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果语言数据已经正确安装，`onActivityResult` 处理程序将接收到 `CHECK_VOICE_DATA_PASS`，这时我们应该创建 `TextToSpeech`
    实例。如果数据不可用，将执行 `ACTION_INSTALL_TTS_DATA` 动作，如下面的代码所示：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: You can see the complete code in the `TTSWithIntent` app available in the code
    bundle.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在 `TTSWithIntent` 应用程序中查看完整代码，该应用程序在代码捆绑包中提供。
- en: Developing applications with Google TTS
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Google TTS开发应用程序
- en: In order to avoid repeating the code in several places, and to be able to focus
    on the new parts as we progress to more complex applications, we have encapsulated
    the most frequently used TTS functionalities into a library named `TTSLib` (see
    `sandra.libs.tts` in the source code), which is employed in the different applications.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免在多个地方重复代码，并能够随着我们过渡到更复杂的应用程序而专注于新部分，我们将最常使用的TTS功能封装到一个名为 `TTSLib` 的库中（请参阅源代码中的
    `sandra.libs.tts`），该库在不同的应用程序中使用。
- en: The `TTS.java` class has been created following the Singleton design pattern.
    This means that there can only be a single instance of this class, and thus an
    app that employs the library uses a single TTS object with which all messages
    are synthesized. This has multiple advantages, such as optimizing resources and
    preventing developers from unwittingly creating multiple `TextToSpeech` instances
    within the same application.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`TTS.java` 类是按照单例设计模式创建的。这意味着此类只能有一个实例，因此使用该库的应用程序将使用一个单一的TTS对象来合成所有消息。这具有多种优势，例如优化资源并防止开发者在同一应用程序中无意创建多个
    `TextToSpeech` 实例。'
- en: TTSWithLib app – Reading user input
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TTSWithLib 应用程序 – 读取用户输入
- en: 'The next figure shows the opening screen of this app, in which the user types
    a text, chooses a language, and then presses a button to make the device start
    or stop reading the text. By default, the option checked is the default language
    in the device as shown in the following screenshot:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了此应用程序的启动屏幕，用户在此屏幕上输入文本，选择语言，然后按下按钮以使设备开始或停止阅读文本。默认情况下，选中选项是设备中的默认语言，如下面的屏幕截图所示：
- en: '![TTSWithLib app – Reading user input](img/5297OS_02_01.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![TTSWithLib 应用程序 – 读取用户输入](img/5297OS_02_01.jpg)'
- en: The code in the `TTSWithLib.java` file mainly initializes the elements in the
    visual user interface and controls the language chosen (`setLocaleList` method),
    as well as what to do when the users presses the **Speak** (`setSpeakButton`)
    and **Stop** (`setStopButton`) buttons. As can be observed in the code shown,
    the main functionality is to invoke the corresponding methods in the `TTS.java`
    file from the `TTSLib` library. In `TTS.java` (see the `TTSLib` project in the
    code bundle) there are three methods named `setLocale` for establishing the locale.
    The first one receives two arguments corresponding to the language and the country
    codes. For example, for British English the language code is `EN` and the country
    code `GB`, whereas for American English they are `EN` and `US` respectively. The
    second method sets the language code only. The third method does not receive any
    argument and just sets the device's default language. As can be observed, if any
    argument is null in the first or second method, then the second and third methods
    are invoked.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`TTSWithLib.java`文件中的代码主要初始化视觉用户界面中的元素，并控制所选语言（`setLocaleList`方法），以及当用户按下**说话**（`setSpeakButton`）和**停止**（`setStopButton`）按钮时要执行的操作。从展示的代码中可以看出，主要功能是调用`TTSLib`库中`TTS.java`文件里的相应方法。在`TTS.java`中（参见代码包中的`TTSLib`项目），有三个名为`setLocale`的方法用于设置地区。第一个方法接收两个参数，分别对应语言和国家代码。例如，对于英式英语，语言代码是`EN`，国家代码是`GB`；而对于美式英语，它们分别是`EN`和`US`。第二个方法仅设置语言代码。第三个方法不接收任何参数，仅设置设备的默认语言。可以观察到，如果第一个或第二个方法的任何参数为null，则会调用第二个和第三个方法。'
- en: The other important methods are responsible for starting (the `speak` method)
    and stopping (the `stop` method) the synthesis, whereas the `shutdown` method
    releases the native resources used by the TTS engine. It is good practice to invoke
    the `shutdown` method, we do it in the `onDestroy` method of the calling activities;
    for example, in the `TTSDemo.java` file).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 其他重要方法是负责开始（`speak`方法）和停止（`stop`方法）合成，而`shutdown`方法释放TTS引擎使用的本地资源。调用`shutdown`方法是一个好习惯，我们在调用活动的`onDestroy`方法中执行它；例如，在`TTSDemo.java`文件中）。
- en: TTSReadFile app – Reading a file out loud
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TTSReadFile应用 – 大声朗读文件
- en: A more realistic scenario for text-to-speech synthesis is to read out some text,
    especially when the user's eyes and hands are busy. Similar to the previous example,
    the app retrieves some text and the user presses the **Speak** button to hear
    it. A **Stop** button is provided in case the user does not wish to hear all of
    the text.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 文本到语音合成的更现实场景是朗读一些文本，特别是在用户的眼和手忙碌时。与上一个示例类似，应用程序检索一些文本，用户按下**说话**按钮来听它。提供了一个**停止**按钮，以防用户不想听完全部文本。
- en: 'A potential use-case for this type of app is when the user accesses some text
    on the web; for example, a news item, an e-mail, or a sports report. To do this
    would involve additional code to access the internet and this goes beyond the
    scope of the current app (see for example, the MusicBrain app in [Chapter 5](ch05.html
    "Chapter 5. Form-filling Dialogs"), *Form-filling Dialogs*). So, to keep matters
    simple, the text is pre-stored in the `Assets` folder and retrieved from there.
    It is left as an exercise for the reader to retrieve texts from other sources
    and pass them to TTS to be read out. The following screenshot shows the opening
    screen:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这种应用程序的一个潜在用例是用户访问网络上的文本，例如新闻条目、电子邮件或体育报道。这需要额外的代码来访问互联网，这超出了当前应用程序的范围（例如，参见[第5章](ch05.html
    "第5章. 表单填充对话框")中的MusicBrain应用程序，*表单填充对话框*）。因此，为了简化问题，文本预先存储在`Assets`文件夹中，并从那里检索。将文本从其他来源检索并传递给TTS朗读留给读者作为一个练习。以下截图显示了打开屏幕：
- en: '![TTSReadFile app – Reading a file out loud](img/5297OS_02_02.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![TTSReadFile应用 – 大声朗读文件](img/5297OS_02_02.jpg)'
- en: The file `TTSReadFile.java` is similar to the file `TTSWithLib.java`. As shown
    in the code, the main difference is that it uses English as the default language
    (as it matches the stored file) and obtains the text from a file instead of from
    the user interface (see the `onClickListener` method for the `speakbutton`, and
    the `getText` method in the code bundle).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '`TTSReadFile.java`文件与`TTSWithLib.java`文件类似。如代码所示，主要区别在于它使用英语作为默认语言（与存储的文件匹配）并从文件中获取文本，而不是从用户界面（参见`speakbutton`的`onClickListener`方法和代码包中的`getText`方法）。'
- en: Tip
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: 'There are several more advanced issues discussed in detail in the book: *Professional
    Android™ Sensor Programming, Greg Milette and Adam Stroud, Wrox, Chapter 16*.
    There are methods for selecting different voices, depending on what is available
    on particular devices. For example, the TTS API provides additional methods to
    help you play back different types of text.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在书中详细讨论了一些更高级的问题：《*专业Android™传感器编程，Greg Milette和Adam Stroud，Wrox，第16章*》。有一些方法可以根据特定设备上可用的内容选择不同的声音。例如，TTS
    API提供了额外的帮助您播放不同类型文本的方法。
- en: Summary
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter has shown how to use the Google TTS API to implement text to speech
    synthesis on a device. An overview of the technology behind text to speech synthesis
    was provided, followed by an introduction to the elements of the Google TTS API.
    Two examples were presented illustrating the basics of text-to-speech synthesis.
    In subsequent chapters more sophisticated approaches will be developed.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节展示了如何使用谷歌TTS API在设备上实现文本到语音的合成。首先提供了文本到语音合成背后的技术概览，随后介绍了谷歌TTS API的各个元素。通过两个示例演示了文本到语音合成的基础知识。在后续章节中，将开发更为复杂的方法。
- en: 'The next chapter deals with the other side of the speech coin: speech-to-text
    (or speech recognition).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章节将处理语音硬币的另一面：语音到文本（或语音识别）。
