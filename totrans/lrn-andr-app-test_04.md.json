["```kt\n$ emulator -avd testdevice -no-window -no-audio -no-boot-anim -port 5580\n\n```", "```kt\n$ adb devices\nList of devices attached\nemulator-5580  device\n\n```", "```kt\n$ adb -s emulator-5580 install YourApp.apk\n347 KB/s (16632 bytes in 0.046s) : /data/local/tmp/YourApp.apk\nSuccess\n$ adb -s emulator-5580 install YourAppTests.apk\n222 KB/s (16632 bytes in 0.072s)\n pkg: /data/local/tmp/YourAppTests.apk\nSuccess\n\n```", "```kt\n$ adb -s emulator-5580 shell am instrument -w\\ \ncom.blundell.tut.test/android.test.InstrumentationTestRunner\ncom.blundell.tut.test.MyTests:......\ncom.blundell.tut.test.MyOtherTests:..........\nTest results for InstrumentationTestRunner=..................\nTime: 15.295\nOK (20 tests)\n\n```", "```kt\n$ adb -s emulator-5580 emu event send EV_KEY:KEY_MENU:1 EV_KEY:KEY_MENU:0\n\n```", "```kt\n @Override\n public void setUp() throws Exception {\n   Activity activity = getActivity();\n   Window window = activity.getWindow();\n   window.addFlags(WindowManager.LayoutParams.FLAG_DISMISS_KEYGUARD);\n }\n```", "```kt\n$ adb -s emulator-5580 shell 'stop'; sleep 5; start'\n\n```", "```kt\n$ adb -s emulator-5580 logcat\n\n```", "```kt\nD/AndroidRuntime(1):\nD/AndroidRuntime(1): >>>>>>>>>> AndroidRuntime START <<<<<<<<<<\nD/AndroidRuntime(1): CheckJNI is ON\nD/AndroidRuntime(1): --- registering native functions ---\nI/SamplingProfilerIntegration(1): Profiler is disabled.\nI/Zygote  (1): Preloading classes...\nI/ServiceManager(2): service 'connectivity''connectivity''connectivity''' died\nI/ServiceManager(2): service 'throttle''throttle''throttle''' died\nI/ServiceManager(2): service 'accessibility''accessibility''accessibility''' died\n\n```", "```kt\n$ adb -s emulator-5580 emu kill\n\n```", "```kt\n$ emulator -avd testdevice -no-window -no-audio -no-boot-anim -port 5580   -prop persist.sys.language=ja -prop persist.sys.country=JP\n\n```", "```kt\n$ adb –s emulator-5580 shell \"getprop persist.sys.language\"\nja\n$ adb –s emulator-5580 shell \"getprop persist.sys.country\"\nJP\n\n```", "```kt\n$ adb -s emulator-5580 emu kill\n$ emulator -avd testdevice -no-window -no-audio -no-boot-anim -port 5580 -wipe-data\n\n```", "```kt\n$ emulator -avd testdevice -port 5580 -netspeed gsm -netdelay gprs\n\n```", "```kt\n$ telnet localhost 5580\nTrying 127.0.0.1...\nConnected to localhost.\nEscape character is '^]'.\nAndroid Console: type 'help' for a list of commands\nOK\n\n```", "```kt\nnetwork status\nCurrent network status:\n download speed:      14400 bits/s (1.8 KB/s)\n upload speed:        14400 bits/s (1.8 KB/s)\n minimum latency:  150 ms\n maximum latency:  550 ms\nOK\n\n```", "```kt\n$ telnet localhost 5580\n\n```", "```kt\ngsm data unregistered\nOK\nquit\nConnection closed by foreign host.\n\n```", "```kt\ngsm data home\nOK\n\n```", "```kt\ngsm status\ngsm voice state: home\n\ngsm data state:  home\n\nOK\n\n```", "```kt\nkextstat | grep intel \n\n```", "```kt\n$ adb -e shell monkey -p com.blundell.tut -v -v 1000\n\n```", "```kt\nEvents injected: 1000\n:Sending rotation degree=0, persist=false\n:Dropped: keys=0 pointers=4 trackballs=0 flips=0 rotations=0\n## Network stats: elapsed time=2577ms (0ms mobile, 0ms wifi, 2577ms not connected)\n// Monkey finished\n\n```", "```kt\n$ adb -e shell monkey -p com.blundell.tut --port 1080 &\n\n```", "```kt\n$ adb -e forward tcp:1080 tcp:1080\n\n```", "```kt\n$ telnet localhost 1080\n\n```", "```kt\ntap 150 200\nOK\n```", "```kt\n# monkey\ntap 200 200\ntype HelloWorld\ntap 200 350\ntap 200 200\npress DEL\npress DEL\npress DEL\npress DEL\npress DEL\ntype Monkey \ntap 200 350\n\n```", "```kt\n$ adb shell am start -n com.blundell.tut/.MonkeyActivity\n\n```", "```kt\nStarting: Intent { cmp=com.blundell.tut/.MonkeyActivity}\n\n```", "```kt\n$ nc localhost 1080 < ch_4_code_ex_10.txt\n\n```", "```kt\n#! /usr/bin/env monkeyrunner\n\nimport sys\n\n# Imports the monkeyrunner modules used by this program\nfrom com.android.monkeyrunner import MonkeyRunner, MonkeyDevice, MonkeyImage\n# Connects to the current device, returning a MonkeyDevice object\ndevice = MonkeyRunner.waitForConnection()\n\nif not device:\n    print >> sys.stderr, \"Couldn't\" \"get connection\"\n    sys.exit(1)\n\ndevice.startActivity(component='com'.blundell.tut/.MonkeyActivity')\n\nMonkeyRunner.sleep(3.0)\n\ndevice.type(\"hello\")\n\n# Takes a screenshot\nMonkeyRunner.sleep(3.0)\nresult = device.takeSnapshot()\n\n# Writes the screenshot to a file\nresult.writeToFile('/tmp/device.png')\n\ndevice.press('KEYCODE_BACK', 'DOWN'_AND_UP')\n```", "```kt\n$ monkey_playback.py script.mr\n\n```"]