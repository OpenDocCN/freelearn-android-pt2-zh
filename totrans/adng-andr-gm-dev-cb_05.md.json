["```kt\n    static float DESIGN_SCREEN_WIDTH_PIXELS = 800f;\n    static float DESIGN_SCREEN_HEIGHT_PIXELS = 480f;\n    static float DESIGN_SCREEN_WIDTH_INCHES = 4.472441f;\n    static float DESIGN_SCREEN_HEIGHT_INCHES = 2.805118f;\n    static float MIN_WIDTH_PIXELS = 320f, MIN_HEIGHT_PIXELS = 240f;\n    static float MAX_WIDTH_PIXELS = 1600f, MAX_HEIGHT_PIXELS = 960f;\n    public float cameraWidth;\n    public float cameraHeight;\n    public float actualScreenWidthInches;\n    public float actualScreenHeightInches;\n    ```", "```kt\n    public boolean onKeyDown(final int keyCode, final KeyEvent event) \n    {\n      if (keyCode == KeyEvent.KEYCODE_BACK\n        && event.getAction() == KeyEvent.ACTION_DOWN) {\n        if(ResourceManager.getInstance().engine!=null){\n          if(SceneManager.getInstance().isLayerShown)\n            SceneManager.getInstance().\n              currentLayer.onHideLayer();\n          else if( SceneManager.getInstance().\n              mCurrentScene.getClass().\n              getGenericSuperclass().\n              equals(ManagedGameScene.class) || \n              (SceneManager.getInstance().\n              mCurrentScene.getClass().\n              getGenericSuperclass().\n              equals(ManagedMenuScene.class) &!\n              SceneManager.getInstance().\n              mCurrentScene.getClass().\n              equals(MainMenu.class)))\n              SceneManager.getInstance().\n              showMainMenu();\n          else\n            System.exit(0);\n        }\n        return true;\n      } else {\n        return super.onKeyDown(keyCode, event);\n      }\n    }\n    ```", "```kt\n    actualScreenWidthInches = getResources().\n      getDisplayMetrics().widthPixels /\n      getResources().getDisplayMetrics().xdpi;\n    actualScreenHeightInches = getResources().\n      getDisplayMetrics().heightPixels / \n      getResources().getDisplayMetrics().ydpi;\n    cameraWidth = Math.round(\n      Math.max(\n        Math.min(\n          DESIGN_SCREEN_WIDTH_PIXELS * \n          (actualScreenWidthInches / \n            DESIGN_SCREEN_WIDTH_INCHES),\n        MAX_WIDTH_PIXELS),\n      MIN_WIDTH_PIXELS));\n    cameraHeight = Math.round(\n      Math.max(\n        Math.min(\n          DESIGN_SCREEN_HEIGHT_PIXELS * \n          (actualScreenHeightInches /\n            DESIGN_SCREEN_HEIGHT_INCHES),\n        MAX_HEIGHT_PIXELS),\n      MIN_HEIGHT_PIXELS));\n    EngineOptions engineOptions = new EngineOptions(true,\n      ScreenOrientation.LANDSCAPE_SENSOR,\n      new FillResolutionPolicy(), \n      new Camera(0, 0, cameraWidth, cameraHeight));\n    engineOptions.getAudioOptions().setNeedsSound(true);\n    engineOptions.getAudioOptions().setNeedsMusic(true);\n    engineOptions.getRenderOptions().setDithering(true);\n    engineOptions.getRenderOptions().\n      getConfigChooserOptions().setRequestedMultiSampling(true);\n    engineOptions.setWakeLockOptions(WakeLockOptions.SCREEN_ON);\n    return engineOptions;\n    ```", "```kt\n    ResourceManager.getInstance().setup(this.getEngine(),\n      this.getApplicationContext(),\n      cameraWidth, cameraHeight,\n      cameraWidth/DESIGN_SCREEN_WIDTH_PIXELS,\n      cameraHeight/DESIGN_SCREEN_HEIGHT_PIXELS);\n    ```", "```kt\n    SceneManager.getInstance().showMainMenu();\n    pOnCreateSceneCallback.onCreateSceneFinished(\n      MainMenu.getInstance());\n    ```"]