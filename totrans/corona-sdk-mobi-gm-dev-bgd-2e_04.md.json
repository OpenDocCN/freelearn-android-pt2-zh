["```kt\n    physics.addBody(object, [bodyType,] {density=d, friction=f, bounce=b [,radius=r]})\n    ```", "```kt\n    physics.addBody(object, [bodyType,] {density=d, friction=f, bounce=b [,shape=s]})\n    ```", "```kt\n    local ball = display.newImage(\"ball.png\")\n    physics.addBody( ball, \"dynamic\" { density = 1.0, friction = 0.3, bounce = 0.2, radius = 25 } )\n    ```", "```kt\n    local rectangle = display.newImage(\"rectangle.png\")\n    rectangleShape = { -6,-48, 6,-48, 6,48, -6,48 }\n    physics.addBody( rectangle, { density=2.0, friction=0.5, bounce=0.2, shape=rectangleShape } )\n    ```", "```kt\n    function startGame()\n    ```", "```kt\n      physics.addBody(paddle, \"static\", {density = 1, friction = 0, bounce = 0})\n      physics.addBody(ball, \"dynamic\", {density = 1, friction = 0, bounce = 0})\n    ```", "```kt\n      background:removeEventListener(\"tap\", startGame)\n    end\n    ```", "```kt\n      background:addEventListener(\"tap\", startGame)\n    ```", "```kt\n    function dragPaddle(event)\n    ```", "```kt\n      if isSimulator then\n\n        if event.phase == \"began\" then\n          moveX = event.x - paddle.x\n        elseif event.phase == \"moved\" then\n          paddle.x = event.x - moveX\n        end\n\n        if((paddle.x - paddle.width * 0.5) < 0) then\n          paddle.x = paddle.width * 0.5\n        elseif((paddle.x + paddle.width * 0.5) > display.contentWidth) then\n          paddle.x = display.contentWidth - paddle.width * 0.5\n        end\n\n      end\n\n    end\n    ```", "```kt\n    function movePaddle(event)\n    ```", "```kt\n      paddle.x = display.contentCenterX - (display.contentCenterX * (event.yGravity*3))\n    ```", "```kt\n      if((paddle.x - paddle.width * 0.5) < 0) then\n        paddle.x = paddle.width * 0.5\n      elseif((paddle.x + paddle.width * 0.5) > display.contentWidth) then\n        paddle.x = display.contentWidth - paddle.width * 0.5\n      end\n    end\n    ```", "```kt\n  if((paddle.x - paddle.width * 0.5) < 0) then\n    paddle.x = paddle.width * 0.5\n  elseif((paddle.x + paddle.width * 0.5) > display.contentWidth) then\n    paddle.x = display.contentWidth - paddle.width * 0.5\n  end\n```", "```kt\n    function bounce()\n    ```", "```kt\n      vy = -3\n    ```", "```kt\n      if((ball.x + ball.width * 0.5) < paddle.x) then\n        vx = -vx\n      elseif((ball.x + ball.width * 0.5) >= paddle.x) then\n        vx = vx\n      end\n    end\n    ```", "```kt\nmyImage.parent:remove( myImage ) -- remove myImage from hierarchy\n```", "```kt\nmyImage:removeSelf( ) -- same as above\n```", "```kt\nlocal ball = display.newImage(\"ball.png\")\nlocal myTimer = 3\n\nfunction time()\n  myTimer = myTimer - 1\n  print(myTimer)\n\n  if myTimer == 0 then \n\n    ball:removeSelf()\n    ball = nil\n\n  end\nend\n\ntimer.performWithDelay( 1000, time, myTimer )\n```", "```kt\n    function removeBrick(event)\n    ```", "```kt\n      if event.other.name == \"brick\" and ball.x + ball.width * 0.5 < event.other.x + event.other.width * 0.5 then\n        vx = -vx \n      elseif event.other.name == \"brick\" and ball.x + ball.width * 0.5 >= event.other.x + event.other.width * 0.5 then\n        vx = vx \n      end\n    ```", "```kt\n      if event.other.name == \"brick\" then\n        vy = vy * -1\n        event.other:removeSelf()\n        event.other = nil\n        bricks.numChildren = bricks.numChildren - 1\n\n        score = score + 1\n        scoreNum.text = score * scoreIncrease\n        scoreNum.anchorX = 0\n        scoreNum.x = 54 \n      end\n    ```", "```kt\n      if bricks.numChildren < 0 then\n        alertScreen(\"YOU WIN!\", \"Continue\")\n        gameEvent = \"win\"\n      end\n    ```", "```kt\n    end\n    ```", "```kt\n    function updateBall()\n    ```", "```kt\n      ball.x = ball.x + vx\n      ball.y = ball.y + vy\n    ```", "```kt\n      if ball.x < 0 or ball.x + ball.width > display.contentWidth then\n        vx = -vx\n      end\n    ```", "```kt\n      if ball.y < 0 then \n        vy = -vy \n      end\n    ```", "```kt\n      if ball.y + ball.height > paddle.y + paddle.height then \n        alertScreen(\"YOU LOSE!\", \"Play Again\") gameEvent = \"lose\" \n      end\n    end\n    ```", "```kt\n    function changeLevel1()\n    ```", "```kt\n      bricks:removeSelf()\n\n      bricks.numChildren = 0\n      bricks = display.newGroup()\n    ```", "```kt\n      alertBox:removeEventListener(\"tap\", restart)\n      alertDisplayGroup:removeSelf()\n      alertDisplayGroup = nil\n    ```", "```kt\n      ball.x = (display.contentWidth * 0.5) - (ball.width * 0.5)\n      ball.y = (paddle.y - paddle.height) - (ball.height * 0.5) -2\n\n      paddle.x = display.contentWidth * 0.5\n    ```", "```kt\n    gameLevel1()\n    ```", "```kt\n      background:addEventListener(\"tap\", startGame)\n    end\n    ```", "```kt\n    function changeLevel2()\n\n      bricks:removeSelf()\n\n      bricks.numChildren = 0\n      bricks = display.newGroup()\n\n      alertBox:removeEventListener(\"tap\", restart)\n      alertDisplayGroup:removeSelf()\n      alertDisplayGroup = nil\n\n      ball.x = (display.contentWidth * 0.5) - (ball.width * 0.5)\n      ball.y = (paddle.y - paddle.height) - (ball.height * 0.5) -2\n\n      paddle.x = display.contentWidth * 0.5\n\n     gameLevel2() -- Redraw bricks for level 2\n\n      background:addEventListener(\"tap\", startGame)\n    end\n    ```", "```kt\n    function restart()\n    ```", "```kt\n      if gameEvent == \"win\" and currentLevel == 1 then\n        currentLevel = currentLevel + 1\n        changeLevel2()\n        levelNum.text = tostring(currentLevel)\n    ```", "```kt\n      elseif gameEvent == \"win\" and currentLevel == 2 then\n        alertScreen(\"  Game Over\", \"  Congratulations!\")\n        gameEvent = \"completed\"\n    ```", "```kt\n      elseif gameEvent == \"lose\" and currentLevel == 1 then\n        score = 0\n        scoreNum.text = \"0\"\n        changeLevel1()\n    ```", "```kt\n      elseif gameEvent == \"lose\" and currentLevel == 2 then\n        score = 0\n        scoreNum.text = \"0\"\n        changeLevel2()\n    ```", "```kt\n      elseif gameEvent == \"completed\" then\n        alertBox:removeEventListener(\"tap\", restart)\n      end\n    end\n    ```", "```kt\n      alertBox:addEventListener(\"tap\", restart)\n    ```", "```kt\nlocal physics = require \"physics\"\nphysics.start()\n\nlocal box1 = display.newImage( \"box.png\" )\nphysics.addBody( box1, \"dynamic\", { density = 1.0, friction = 0.3, bounce = 0.2 } )\nbox1.myName = \"Box 1\"\n\nlocal box2 = display.newImage( \"box.png\", 0, 350)\nphysics.addBody( box2, \"static\", { density = 1.0, friction = 0.3, bounce = 0.2 } )\nbox2.myName = \"Box 2\"\n\nlocal function onCollision( event )\n  if event.phase == \"began\" and event.object1.myName == \"Box 1\" then\n\n    print( \"Collision made.\" )\n\n  end\nend\n\nRuntime:addEventListener( \"collision\", onCollision )\n\n```", "```kt\nlocal physics = require \"physics\"\nphysics.start()\n\nlocal box1 = display.newImage( \"box.png\" )\nphysics.addBody( box1, \"dynamic\", { density = 1.0, friction = 0.3, bounce = 0.2 } )\nbox1.myName = \"Box 1\"\n\nlocal box2 = display.newImage( \"box.png\", 0, 350)\nphysics.addBody( box2, \"static\", { density = 1.0, friction = 0.3, bounce = 0.2 } )\nbox2.myName = \"Box 2\"\n\nlocal function onCollision( self, event )\n  if event.phase == \"began\" and self.myName == \"Box 1\" then\n\n    print( \"Collision made.\" )\n\n  end\nend\n\nbox1.collision = onCollision\nbox1:addEventListener( \"collision\", box1 )\n\nbox2.collision = onCollision\nbox2:addEventListener( \"collision\", box2 )\n\n```", "```kt\n    function gameListeners(event)\n    ```", "```kt\n      if event == \"add\" then\n        Runtime:addEventListener(\"accelerometer\", movePaddle)\n        Runtime:addEventListener(\"enterFrame\", updateBall)\n        paddle:addEventListener(\"collision\", bounce)\n        ball:addEventListener(\"collision\", removeBrick)\n        paddle:addEventListener(\"touch\", dragPaddle)\n    ```", "```kt\n      elseif event == \"remove\" then\n        Runtime:removeEventListener(\"accelerometer\", movePaddle)\n        Runtime:removeEventListener(\"enterFrame\", updateBall)\n        paddle:removeEventListener(\"collision\", bounce)\n        ball:removeEventListener(\"collision\", removeBrick)\n        paddle:removeEventListener(\"touch\", dragPaddle)\n\n      end\n    end\n    ```", "```kt\n      gameListeners(\"add\")\n    ```", "```kt\n      gameListeners(\"remove\")\n    ```", "```kt\nlocal ball = display.newImage(\"ball.png\")\n```", "```kt\nlocal function onCollision( event )\n  if event.phase == \"began\" and event.object1.myName == \"Box 1\" then\n\n    print( \"Collision made.\" )\n\n  end\nend\n```"]