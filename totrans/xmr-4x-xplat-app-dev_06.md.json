["```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<resources> \n    <string name=\"ApplicationName\">XamSnap</string> \n    <string name=\"ErrorTitle\">Oops!</string> \n    <string name=\"Loading\">Loading</string> \n    <string name=\"Login\">Login</string> \n</resources> \n\n```", "```kt\n[Application(Theme = \"@style/Theme.AppCompat.Light\")] \npublic class Application : Android.App.Application \n{ \n  public Application(\n     IntPtr javaReference, JniHandleOwnership transfer)\n     : base(javaReference, transfer) \n  {  \n  } \n\n  public override void OnCreate() \n  { \n    base.OnCreate(); \n\n```", "```kt\n    //ViewModels \n    ServiceContainer.Register<LoginViewModel>(\n       () => new LoginViewModel()); \n    ServiceContainer.Register<FriendViewModel>(\n       () => new FriendViewModel()); \n    ServiceContainer.Register<MessageViewModel>(\n       () => new MessageViewModel()); \n    ServiceContainer.Register<RegisterViewModel>(\n       () => new RegisterViewModel()); \n\n    //Models \n    ServiceContainer.Register<ISettings>(\n       () => new FakeSettings()); \n    ServiceContainer.Register<IWebService>(\n       () => new FakeWebService()); \n  } \n} \n\n```", "```kt\n[Activity] \npublic class BaseActivity<TViewModel> : AppCompatActivity\n   where TViewModel : BaseViewModel \n{ \n  protected readonly TViewModel viewModel; \n  protected ProgressDialog progress; \n\n  public BaseActivity() \n  { \n    viewModel = ServiceContainer.Resolve(typeof(TViewModel)) as\n       TViewModel; \n  } \n  protected override void OnCreate(Bundle savedInstanceState) \n  { \n    base.OnCreate(savedInstanceState); \n\n    progress = new ProgressDialog(this); \n    progress.SetCancelable(false);\n    progress.SetTitle(Resource.String.Loading);\n  } \n\n  protected override void OnResume() \n  { \n    base.OnResume(); \n    viewModel.IsBusyChanged += OnIsBusyChanged; \n  }\n\n  protected override void OnPause() \n  { \n    base.OnPause(); \n    viewModel.IsBusyChanged -= OnIsBusyChanged; \n  } \n\n  void OnIsBusyChanged (object sender, EventArgs e) \n  { \n    if (viewModel.IsBusy) \n      progress.Show(); \n    else \n      progress.Hide(); \n  } \n} \n\n```", "```kt\nprotected void DisplayError(Exception exc) \n{ \n  string error = exc.Message; \n  new AlertDialog.Builder(this)\n     .SetTitle(Resource.String.ErrorTitle)\n     .SetMessage(error)\n     .SetPositiveButton(Android.Resource.String.Ok,\n       (IDialogInterfaceOnClickListener)null)\n     .Show(); \n} \n\n```", "```kt\n[Activity(Label = \"@string/ApplicationName\", MainLauncher = true)] \npublic class LoginActivity : BaseActivity<LoginViewModel> \n{ \n  EditText username, password; \n  Button login; \n\n  protected override void OnCreate(Bundle savedInstanceState) \n  { \n    base.OnCreate(savedInstanceState);\n\n    SetContentView(Resource.Layout.Login); \n    username = FindViewById<EditText>(Resource.Id.username); \n    password = FindViewById<EditText>(Resource.Id.password); \n    login = FindViewById<Button>(Resource.Id.login); \n    login.Click += OnLogin; \n  } \n\n  protected override void OnResume() \n  { \n    base.OnResume(); \n    username.Text =\n       password.Text = string.Empty; \n  } \n\n  async void OnLogin (object sender, EventArgs e) \n  { \n    viewModel.UserName = username.Text; \n    viewModel.Password = password.Text; \n    try \n    { \n      await viewModel.Login(); \n      //TODO: navigate to a new activity \n    } \n    catch (Exception exc) \n    { \n      DisplayError(exc); \n    } \n  } \n} \n\n```", "```kt\n[Activity(Label = \"Conversations\")] \npublic class ConversationsActivity :\n   BaseActivity<MessageViewModel> \n{ \n  //Other code here later \n} \n\n```", "```kt\nclass Adapter : BaseAdapter<Conversation> \n{ \n  readonly MessageViewModel messageViewModel =\n     ServiceContainer.Resolve<MessageViewModel>(); \n  readonly LayoutInflater inflater; \n\n  public Adapter(Context context) \n  { \n    inflater = (LayoutInflater)context.GetSystemService(\n       Context.LayoutInflaterService); \n  } \n\n  public override long GetItemId(int position) \n  { \n    //This is an abstract method, just a simple implementation \n    return position; \n  } \n\n  public override View GetView(\n     int position, View convertView, ViewGroup parent) \n  { \n    if (convertView == null) \n    { \n      convertView = inflater.Inflate(\n         Resource.Layout.ConversationListItem, null); \n    } \n    var conversation = this [position]; \n    var username = convertView.FindViewById<TextView>(\n       Resource.Id.conversationUsername); \n    username.Text = conversation.Username; \n    return convertView; \n  }\n\n  public override int Count \n  { \n    get { return messageViewModel.Conversations == null ? 0\n       : messageViewModel.Conversations.Length; } \n  }\n\n  public override Conversation this[int position] \n  { \n    get { return messageViewModel.Conversations [position]; } \n  } \n} \n\n```", "```kt\nListView listView; \nAdapter adapter; \n\nprotected override void OnCreate(Bundle bundle) \n{ \n  base.OnCreate(bundle); \n\n  SetContentView(Resource.Layout.Conversations); \n  listView = FindViewById<ListView>(\n     Resource.Id.conversationsList); \n  listView.Adapter = \n     adapter = new Adapter(this); \n} \n\nprotected async override void OnResume() \n{ \n  base.OnResume(); \n  try \n  { \n    await viewModel.GetConversations(); \n    adapter.NotifyDataSetInvalidated(); \n  } \n  catch (Exception exc) \n  { \n    DisplayError(exc); \n  } \n} \n\n```", "```kt\nStartActivity(typeof(ConversationsActivity)); \n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<menu > \n  <item android:id=\"@+id/addFriendMenu\"\n     android:text=\"Add Friend\"\n     android:showAsAction=\"ifRoom\"/> \n</menu> \n\n```", "```kt\npublic override bool OnCreateOptionsMenu(IMenu menu) \n{ \n  MenuInflater.Inflate(Resource.Menu.ConversationsMenu, menu); \n  return base.OnCreateOptionsMenu(menu); \n} \n\n```", "```kt\npublic override bool OnOptionsItemSelected(IMenuItem item) \n{ \n  if (item.ItemId == Resource.Id.addFriendMenu) \n  { \n    //TODO: launch the next activity \n  } \n  return base.OnOptionsItemSelected(item); \n} \n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<RelativeLayout \n\n    android:layout_width=\"fill_parent\" \n    android:layout_height=\"fill_parent\"> \n    <TextView \n        android:text=\"Large Text\" \n        android:textAppearance=\"?android:attr/textAppearanceLarge\" \n        android:layout_width=\"wrap_content\" \n        android:layout_height=\"wrap_content\" \n        android:id=\"@+id/friendName\" \n        android:layout_margin=\"3dp\" /> \n    <ImageView \n        android:layout_width=\"wrap_content\" \n        android:layout_height=\"wrap_content\" \n        android:src=\"img/ic_menu_add\" \n        android:layout_margin=\"3dp\" \n        android:layout_alignParentRight=\"true\" /> \n</RelativeLayout> \n\n```", "```kt\n[Activity(Label = \"Friends\")] \npublic class FriendsActivity : BaseActivity<FriendViewModel> \n{ \n  protected override void OnCreate(Bundle savedInstanceState) \n  { \n    base.OnCreate(savedInstanceState); \n  } \n} \n\n```", "```kt\nclass Adapter : BaseAdapter<User> \n{ \n  readonly FriendViewModel friendViewModel =\n     ServiceContainer.Resolve<FriendViewModel>(); \n  readonly LayoutInflater inflater; \n\n  public Adapter(Context context) \n  { \n    inflater = (LayoutInflater)context.GetSystemService (\n       Context.LayoutInflaterService); \n  } \n\n  public override long GetItemId(int position) \n  { \n    return position; \n  } \n\n  public override View GetView(\n     int position, View convertView, ViewGroup parent) \n  { \n    if (convertView == null) \n    { \n      convertView = inflater.Inflate(\n         Resource.Layout.FriendListItem, null); \n    } \n    var friend = this [position]; \n    var friendname = convertView.FindViewById<TextView>(\n       Resource.Id.friendName); \n    friendname.Text = friend.Name; \n    return convertView; \n  }\n\n  public override int Count \n  { \n    get { return friendViewModel.Friends == null ? 0\n       : friendViewModel.Friends.Length; } \n  } \n\n  public override User this[int position] \n  { \n    get { return friendViewModel.Friends[position]; } \n  } \n} \n\n```", "```kt\nListView listView; \nAdapter adapter; \n\nprotected override void OnCreate(Bundle savedInstanceState) \n{ \n  base.OnCreate(savedInstanceState); \n\n  SetContentView(Resource.Layout.Friends); \n  listView = FindViewById<ListView>(Resource.Id.friendsList); \n  listView.Adapter =\n     adapter = new Adapter(this); \n} \n\nprotected async override void OnResume() \n{ \n  base.OnResume(); \n  try \n  { \n    await viewModel.GetFriends(); \n    adapter.NotifyDataSetInvalidated(); \n  } \n  catch (Exception exc) \n  { \n    DisplayError(exc); \n  } \n} \n\n```", "```kt\npublic override bool OnOptionsItemSelected(IMenuItem item) \n{ \n  if (item.ItemId == Resource.Id.addFriendMenu) \n  { \n    StartActivity(typeof(FriendsActivity)); \n  } \n  return base.OnOptionsItemSelected(item); \n} \n\n```", "```kt\n<?xml version=\"1.0\" encoding=\"utf-8\"?> \n<LinearLayout  \n\n    android:orientation=\"vertical\" \n    android:layout_width=\"match_parent\" \n    android:layout_height=\"match_parent\"> \n    <ListView \n        android:minWidth=\"25px\" \n        android:minHeight=\"25px\" \n        android:layout_width=\"match_parent\" \n        android:layout_height=\"match_parent\" \n        android:id=\"@+id/messageList\" \n        android:stackFromBottom=\"true\" \n        android:transcriptMode=\"alwaysScroll\" \n        android:layout_weight=\"1\" /> \n    <RelativeLayout \n        android:minWidth=\"25px\" \n        android:minHeight=\"25px\" \n        android:layout_width=\"match_parent\" \n        android:layout_height=\"wrap_content\"> \n        <EditText \n            android:layout_width=\"match_parent\" \n            android:layout_height=\"wrap_content\" \n            android:id=\"@+id/messageText\" \n            android:layout_toLeftOf=\"@+id/sendButton\" \n            android:layout_centerInParent=\"true\" /> \n        <Button \n            android:text=\"Send\" \n            android:layout_width=\"wrap_content\" \n            android:layout_height=\"wrap_content\" \n            android:id=\"@+id/sendButton\" \n            android:layout_alignParentRight=\"true\" /> \n    </RelativeLayout> \n</LinearLayout> \n\n```", "```kt\n[Activity(Label = \"Messages\")] \npublic class MessagesActivity : BaseActivity<MessageViewModel> \n{ \n  protected override void OnCreate(Bundle savedInstanceState) \n  { \n    base.OnCreate(savedInstanceState); \n  } \n} \n\n```", "```kt\nclass Adapter : BaseAdapter<Message> \n{ \n  readonly MessageViewModel messageViewModel =\n     ServiceContainer.Resolve<MessageViewModel>(); \n  readonly ISettings settings =\n     ServiceContainer.Resolve<ISettings>(); \n  readonly LayoutInflater inflater; \n  const int MyMessageType = 0, TheirMessageType = 1; \n\n  public Adapter (Context context) \n  { \n    inflater = (LayoutInflater)context.GetSystemService (\n       Context.LayoutInflaterService); \n  } \n\n  public override long GetItemId(int position) \n  { \n    return position; \n  } \n\n  public override int Count \n  { \n    get { return messageViewModel.Messages == null ? 0\n      : messageViewModel.Messages.Length; } \n  } \n\n  public override Message this[int position] \n  { \n    get { return messageViewModel.Messages[position]; } \n  } \n\n  public override int ViewTypeCount \n  { \n    get { return 2; } \n  } \n\n  public override int GetItemViewType(int position) \n  { \n    var message = this [position]; \n    return message.UserName == settings.User.Name ?\n       MyMessageType : TheirMessageType; \n  } \n} \n\n```", "```kt\npublic override View GetView(\n   int position, View convertView, ViewGroup parent) \n{ \n  var message = this [position]; \n  int type = GetItemViewType(position); \n  if (convertView == null) \n  { \n    if (type == MyMessageType) \n    { \n      convertView = inflater.Inflate(\n         Resource.Layout.MyMessageListItem, null); \n    } \n    else \n    { \n      convertView = inflater.Inflate(\n         Resource.Layout.TheirMessageListItem, null); \n    } \n  } \n  TextView messageText; \n  if (type == MyMessageType) \n  { \n    messageText = convertView.FindViewById<TextView>(\n       Resource.Id.myMessageText); \n  } \n  else \n  { \n    messageText = convertView.FindViewById<TextView>(\n       Resource.Id.theirMessageText); \n  } \n  messageText.Text = message.Text; \n  return convertView; \n} \n\n```", "```kt\nListView listView; \nEditText messageText; \nButton sendButton; \nAdapter adapter; \n\nprotected override void OnCreate(Bundle savedInstanceState) \n{ \n  base.OnCreate(savedInstanceState); \n\n  Title = viewModel.Conversation.UserName; \n  SetContentView(Resource.Layout.Messages); \n  listView = FindViewById<ListView>(Resource.Id.messageList); \n  messageText = FindViewById<EditText>(Resource.Id.messageText); \n  sendButton = FindViewById<Button>(Resource.Id.sendButton); \n\n  listView.Adapter =\n     adapter = new Adapter(this); \n\n  sendButton.Click += async (sender, e) => \n  { \n    viewModel.Text = messageText.Text; \n    try \n    { \n      await viewModel.SendMessage(); \n      messageText.Text = string.Empty; \n      adapter.NotifyDataSetInvalidated(); \n    } \n    catch (Exception exc) \n    { \n      DisplayError(exc); \n    } \n  }; \n} \n\n```", "```kt\nprotected async override void OnResume() \n{ \n  base.OnResume(); \n  try \n  { \n    await viewModel.GetMessages(); \n    adapter.NotifyDataSetInvalidated(); \n    listView.SetSelection(adapter.Count); \n  } \n  catch (Exception exc) \n  { \n    DisplayError(exc); \n  } \n} \n\n```", "```kt\nprotected override void OnCreate(Bundle savedInstanceState) \n{ \n  base.OnCreate(savedInstanceState); \n\n  //Leave code here unmodified \n\n  listView.ItemClick += (sender, e) => \n  { \n    viewModel.Conversation = viewModel.Conversations[e.Position]; \n    StartActivity(typeof(MessagesActivity)); \n  }; \n} \n\n```"]