- en: Chapter 7. Android Compatibility Package
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第七章 Android兼容性包
- en: New Android APIs do not work in the previous versions of Android, so the Android
    Compatibility Package was thus introduced to allow the porting of the new APIs
    to the older versions of the Android platform. This chapter shows how we can use
    the Android Compatibility Package.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 新的Android API在之前版本的Android中无法工作，因此引入了Android兼容性包，以便将新的API移植到旧版本的Android平台。本章展示了我们如何使用Android兼容性包。
- en: 'The topics covered in this chapter are as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题包括：
- en: What is and why do we use the Android Compatibility Package
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android兼容性包是什么以及为什么我们要使用它
- en: How to use the Android Compatibility Package
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用Android兼容性包
- en: What is Android Compability Package
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是Android兼容性包
- en: 'Android has some great new APIs released with Android 3.0 and its later versions.
    However, many users don''t upgrade their devices to the latest Android platform.
    Google released the Android Compatibility Package that contains support for some
    of the new APIs released with Android 3.0 and its later versions. In this way,
    developers could develop applications that use new APIs and work in older Android
    versions. Some of the classes that are included in the Android Compatibility Package
    are as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Android在3.0及其后续版本中发布了一些伟大的新API。然而，许多用户并没有将他们的设备升级到最新的Android平台。Google发布了包含对一些随Android
    3.0及其后续版本发布的新API支持的Android兼容性包。这样，开发者就可以开发使用新API且能在旧版本Android中运行的应用程序。以下是一些包含在Android兼容性包中的类：
- en: '`Fragment`'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Fragment`'
- en: '`FragmentManager`'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FragmentManager`'
- en: '`FragmentTransaction`'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FragmentTransaction`'
- en: '`ListFragment`'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ListFragment`'
- en: '`DialogFragment`'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DialogFragment`'
- en: '`LoaderManager`'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`LoaderManager`'
- en: '`Loader`'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Loader`'
- en: '`AsyncTaskLoader`'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AsyncTaskLoader`'
- en: '`CursorLoader`'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`CursorLoader`'
- en: Some useful APIs such as animation classes, action bar, and FragmentMapActivity
    are not included in the Android Compatibility Package.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: Android兼容性包中并不包括一些有用的API，如动画类、操作栏和FragmentMapActivity。
- en: How to use the Android Compatibility Package
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用Android兼容性包
- en: We need to download and install the Android Compatibility Package. In order
    to download the Android Compatibility Package, click on the **Android SDK Manager**
    button in the Eclipse menu as shown in the following screenshot:![How to use the
    Android Compatibility Package](img/9526_07_01.jpg)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要下载并安装Android兼容性包。为了下载Android兼容性包，请按照以下截图所示在Eclipse菜单中点击**Android SDK管理器**按钮：![如何使用Android兼容性包](img/9526_07_01.jpg)
- en: 'Alternately, we can reach the Android SDK Manager by the Eclipse menu using
    **Window** | **Android SDK Manager**. After the **Android SDK Manager** window
    is opened, check the **Android Support Library** option as shown in the following
    screenshot:'
  id: totrans-19
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 或者，我们可以通过Eclipse菜单使用**窗口** | **Android SDK管理器**来访问Android SDK管理器。在打开**Android
    SDK管理器**窗口后，勾选**Android支持库**选项，如下截图所示：
- en: '![How to use the Android Compatibility Package](img/9526_07_02.jpg)'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![如何使用Android兼容性包](img/9526_07_02.jpg)'
- en: Then, click on the **Install** button and install the package. Now we are ready
    to develop an Android project that can use the Android Compatibility Package.
    Firstly, create an Android project in Eclipse. Then, we need to add the support
    library to our Android project. If it doesn't exist, create a folder named `libs`
    under the Android project's root folder as shown in the following screenshot:![How
    to use the Android Compatibility Package](img/9526_07_03.jpg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击**安装**按钮并安装该包。现在我们准备开发一个可以使用Android兼容性包的Android项目。首先，在Eclipse中创建一个Android项目。然后，我们需要将支持库添加到我们的Android项目中。如果不存在，请在Android项目的根目录下创建一个名为`libs`的文件夹，如下截图所示：![如何使用Android兼容性包](img/9526_07_03.jpg)
- en: Now, find and copy the `<your android sdk folder>/extras/android/support/v4/android-support-v4.jar`
    file to the `libs` folder. The folder structure should be as shown in the following
    screenshot:![How to use the Android Compatibility Package](img/9526_07_04.jpg)
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，找到并复制`<your android sdk folder>/extras/android/support/v4/android-support-v4.jar`文件到`libs`文件夹中。文件夹结构应该如下截图所示：![如何使用Android兼容性包](img/9526_07_04.jpg)
- en: Lastly, if the `.jar` file is not in the project build path, add the `.jar`
    file to the project build path as shown in the following screenshot:![How to use
    the Android Compatibility Package](img/9526_07_05.jpg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，如果`.jar`文件不在项目的构建路径中，请按照以下截图所示将`.jar`文件添加到项目构建路径中：![如何使用Android兼容性包](img/9526_07_05.jpg)
- en: 'Now you know how to manually add the support library. Eclipse makes this process
    easy with the **Add Support Library** menu option. Use the following steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你知道了如何手动添加支持库。Eclipse通过**添加支持库**的菜单选项使这个过程变得简单。使用以下步骤：
- en: Right-click on the project in the explorer.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在资源管理器中右键点击项目。
- en: Go to the **Android Tools** | **Add Support Library…** option.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**Android Tools** | **添加支持库…**选项。
- en: Follow the steps to complete the wizard.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照步骤完成向导。
- en: 'Now we can make use of the compatibility package. We are going to create an
    application that uses the `Fragment` class, but the `Fragment` class present in
    the compatibility package, to display a text using the following steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以使用兼容性包。我们将创建一个使用`Fragment`类的应用程序，但是使用的是兼容包中的`Fragment`类，通过以下步骤显示文本：
- en: 'Firstly, create a layout XML for the fragment and name the XML file `fragment.xml`:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，为Fragment创建一个布局XML，并将XML文件命名为`fragment.xml`：
- en: '[PRE0]'
  id: totrans-30
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Then, create a layout for the activity using the following code block:'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，使用以下代码块为活动创建一个布局：
- en: '[PRE1]'
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now we are going to create the `Fragment` class for the `fragment.xml` layout:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将为`fragment.xml`布局创建一个`Fragment`类：
- en: '[PRE2]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: As you can see from the preceding code, the `Fragment` class is from the `android.support.v4.app.Fragment`
    package. This means that we are using the Android Compatibility Package. If we
    don't want to use the compatibility package, then we should use the `Fragment`
    class from `the android.app.Fragment` package.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在上述代码中，`Fragment`类来自`android.support.v4.app.Fragment`包。这意味着我们正在使用Android兼容性包。如果我们不想使用兼容包，那么我们应该使用`android.app.Fragment`包中的`Fragment`类。
- en: 'The `Activity` class for our application is as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应用程序的`Activity`类如下：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: As you can see from the preceding code block, the support library APIs follow
    the same naming as the standard APIs. We just need to use the correct imports
    and call the correct managers. We have to add `android.support.v4.app` to our
    import list in order to use classes that are in the compatibility package.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在上述代码块中，支持库API与标准API的命名相同。我们只需要使用正确的导入并调用正确的管理器。为了使用兼容包中的类，我们需要将`android.support.v4.app`添加到我们的导入列表中。
- en: In order to get the `FragmentManager` instance, we call the `getSupportFragmentManager()`
    method of our `Activity` class. As you will have noticed, the `Activity` class
    extends the `FragmentActivity` class. We need to do this because it is the only
    way in which we can use Fragments.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 为了获取`FragmentManager`的实例，我们调用了我们`Activity`类的`getSupportFragmentManager()`方法。你可能已经注意到，`Activity`类扩展了`FragmentActivity`类。我们需要这样做，因为这是使用Fragments的唯一方式。
- en: 'The `AndroidManifest.xml` file should look like the following:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`AndroidManifest.xml`文件应该如下所示：'
- en: '[PRE4]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: As you can see in this code, the minimum SDK level is set to API Level 8\. We
    can set the minimum API Level to 4 or more. In this way, we can use the new APIs
    in older versions of Android.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，在这段代码中，最低SDK级别被设置为API级别8。我们可以将最低API级别设置为4或更高。这样，我们就可以在旧版本的Android中使用新的API。
- en: Summary
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概要
- en: In this chapter, we learned what the Android Compatibility Package is and how
    we can use it. We also learned how with the help of this library, we can use the
    new APIs in the older versions of Android.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了Android兼容性包是什么以及如何使用它。我们还学习到了如何借助这个库，在旧版本的Android中使用新的API。
- en: In the next chapter, we are going to learn using new connectivity APIs – Android
    Beam and Wi-Fi Direct.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习使用新的连接API——Android Beam和Wi-Fi Direct。
