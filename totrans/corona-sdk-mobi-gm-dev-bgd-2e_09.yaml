- en: Chapter 9. Handling Multiple Devices and Networking Your Apps
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第9章.处理多设备和网络应用
- en: '*Allowing your application to integrate with social networks is a great way
    to promote your finished product. Many games enable the player to upload their
    high scores and share them among other users who are playing the same title. Some
    provide challenges that need to be completed successfully in order to unlock achievements.
    Social networks enhance the gaming experience and provide great exposure for the
    developer.*'
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*允许您的应用程序与社交网络集成是推广您成品的好方法。许多游戏允许玩家上传他们的高分并与其他玩相同游戏的人分享。有些提供需要成功完成才能解锁成就的挑战。社交网络增强了游戏体验并为开发者提供了很好的曝光机会。*'
- en: We'll also go into more detail about build configuration since we're getting
    more accustomed to programming. Understanding the importance of configuring your
    device build is vital for cross-platform development. This is a capability that
    Corona SDK can handle with ease across iOS and Android devices.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们越来越习惯编程，我们还将更详细地介绍构建配置。理解配置设备构建的重要性对跨平台开发至关重要。这是 Corona SDK 可以轻松地在 iOS 和
    Android 设备上处理的能力。
- en: 'In this chapter, we will learn the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习以下主题：
- en: Revisiting configuration settings
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 重新访问配置设置
- en: Posting messages to Twitter
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布消息到 Twitter
- en: Posting messages to Facebook
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布消息到 Facebook
- en: Let's add in these finishing touches!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们添加这些最后的润色！
- en: Return to configuration
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回配置
- en: Build settings and runtime configuration were briefly discussed in [Chapter
    2](ch02.html "Chapter 2. Lua Crash Course and the Corona Framework"), *Lua Crash
    Course and the Corona Framework*. Let's get into more specific details on how
    to handle a variety of devices that work on the iOS and Android platforms.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](ch02.html "第2章. Lua速成课程和Corona框架")中简要讨论了构建设置和运行时配置，*Lua速成课程和Corona框架*。让我们深入了解如何处理在
    iOS 和 Android 平台上工作的各种设备的具体细节。
- en: Build configuration
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建配置
- en: There are a variety of ways to handle device orientation to match the settings
    your game design requires.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以处理设备方向，以匹配您的游戏设计所需的设置。
- en: Orientation support (iOS)
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方向支持（iOS）
- en: There are scenarios in which you want the native user interface (UI) elements
    to autorotate or to be oriented in a certain way, but you also need to maintain
    a fixed coordinate system within Corona.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 有时您希望原生用户界面（UI）元素自动旋转或以特定方式定向，但同时也需要在 Corona 中保持固定的坐标系统。
- en: 'To lock Corona''s orientation while allowing the native iPhone UI elements
    to rotate, add a content parameter in `build.settings` as follows:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要锁定 Corona 的方向同时允许原生 iPhone UI 元素旋转，可以在 `build.settings` 中添加以下内容参数：
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To lock Corona''s internal coordinate system to portrait orientation while
    locking iPhone UI elements to the landscape orientation, you could do the following
    in `build.settings`:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Corona 的内部坐标系统锁定为纵向同时将 iPhone UI 元素锁定为横向，您可以在 `build.settings` 中执行以下操作：
- en: '[PRE1]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Orientation support (Android)
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方向支持（安卓）
- en: The Android platform supports portrait and landscape orientations. The orientation
    *portraitUpsideDown* may not be available on some Android devices. Also, autorotation
    is not currently supported on Android. The default orientation doesn't affect
    Android devices. The orientation is initialized to the actual orientation of the
    device (unless only one orientation is specified).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓平台支持纵向和横向方向。方向 *portraitUpsideDown* 在某些安卓设备上可能不可用。此外，目前安卓设备不支持自动旋转。默认方向不会影响安卓设备。方向初始化为设备的实际方向（除非只指定了一个方向）。
- en: 'Here is an example of an Android-specific `build.settings` file (you might
    also combine Android and iPhone settings in the same file):'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一个针对安卓的 `build.settings` 文件的示例（您也可以在同一个文件中组合安卓和 iPhone 设置）：
- en: '[PRE2]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Version code and version name (Android)
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 版本代码和版本名称（安卓）
- en: The `versionCode` and `versionName` fields can be set within an optional `"android"`
    table in `build.settings`.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`versionCode` 和 `versionName` 字段可以在 `build.settings` 中的可选 `"android"` 表中设置。'
- en: The `versionCode` field is defaulted to `"1"`, while the `versionName` field
    is defaulted at `"1.0"` if it's not set in the `build.settings` file. When an
    updated version of an application is submitted to the Google Play Store, the `versionCode`
    and `versionName` fields also have to be updated. All version numbers for `versionCode`
    have to be whole numbers. The `versionCode` field cannot contain any decimal numbers,
    while the `versionName` field can contain decimals.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在`build.settings`文件中没有设置，`versionCode`字段默认为`"1"`，而`versionName`字段默认为`"1.0"`。当将应用程序的更新版本提交到Google
    Play商店时，也必须更新`versionCode`和`versionName`字段。`versionCode`的所有版本号都必须是整数。`versionCode`字段不能包含任何小数，而`versionName`字段可以包含小数。
- en: For more information, see *android:versionCode* and *android:versionName* at
    [http://developer.android.com/guide/topics/manifest/manifest-element.html#vcode](http://developer.android.com/guide/topics/manifest/manifest-element.html#vcode).
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多信息，请查看[http://developer.android.com/guide/topics/manifest/manifest-element.html#vcode](http://developer.android.com/guide/topics/manifest/manifest-element.html#vcode)中的*android:versionCode*和*android:versionName*。
- en: Note
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `versionCode` attribute is an internal number used to distinguish application
    releases for the Google Play Store. It is not the same as the version provided
    by the Corona build dialog. The `versionName` attribute is the version number
    shown to users.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`versionCode`属性是一个内部数字，用于在Google Play商店中区分应用程序版本。它与Corona构建对话框提供的版本不同。`versionName`属性是向用户显示的版本号。'
- en: Application permissions (Android)
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用权限（Android）
- en: 'An optional `"usesPermissions"` table can be used to specify permissions, using
    string values as given in the Android manifest reference: [http://developer.android.com/reference/android/Manifest.permission.html](http://developer.android.com/reference/android/Manifest.permission.html).'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用可选的`"usesPermissions"`表来指定权限，使用的是在Android清单参考中给出的字符串值：[http://developer.android.com/reference/android/Manifest.permission.html](http://developer.android.com/reference/android/Manifest.permission.html)。
- en: Developers should use permissions that match their application requirements.
    For example, if network access is required, the Internet permission needs to be
    set.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者应该使用符合他们应用程序需求的权限。例如，如果需要网络访问，就需要设置互联网权限。
- en: Note
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: For more useful information on the `android.permission` keys applied in Corona
    SDK, refer to [http://docs.coronalabs.com/guide/distribution/buildSettings/index.html#permissions](http://docs.coronalabs.com/guide/distribution/buildSettings/index.html#permissions).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 想要了解更多关于Corona SDK中应用的`android.permission`键的信息，请参考[http://docs.coronalabs.com/guide/distribution/buildSettings/index.html#permissions](http://docs.coronalabs.com/guide/distribution/buildSettings/index.html#permissions)。
- en: Content scaling on an easier level
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更简单的层次内容缩放
- en: Content scaling throughout multiple devices can be frustrating at times if you've
    never addressed them before in your `config.lua` file. There are many individual
    screen sizes. The size of iPhone 5 is 640 x 1136 px, and that of iPad 2 is 768
    x 1024 px. The size of Droid is 480 x 854 px, and that of the Samsung Galaxy tablet
    is 600 x 1024 px, just to name a few. Memory can run out easily due to image size
    boundaries.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在`config.lua`文件中从未处理过，那么在多个设备上调整内容大小有时可能会让人感到沮丧。有许多不同的屏幕尺寸。例如，iPhone 5的尺寸为640
    x 1136像素，iPad 2的尺寸为768 x 1024像素，Droid的尺寸为480 x 854像素，三星Galaxy平板的尺寸为600 x 1024像素等。由于图像大小限制，内存可能会很容易耗尽。
- en: When setting up your `config.lua`, like we've done in the previous chapters,
    we had our content set to `width = 320`, `height = 480`, and `scale = "letterbox"`.
    If building for Android devices, `"zoomStretch"` works best to accommodate varying
    screen sizes on the platform. This creates a common build for iOS and Android
    and presents display images that are large enough to fit on a variety of screen
    sizes.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在设置你的`config.lua`时，就像我们在前面的章节中所做的那样，我们将内容设置为`width = 320`，`height = 480`，以及`scale
    = "letterbox"`。如果为Android设备构建，`"zoomStretch"`最适合于适应该平台上不同的屏幕尺寸。这为iOS和Android创建了一个共同的构建，并展示了足够大的显示图像以适应各种屏幕尺寸。
- en: 'If you want to scale for larger screen sizes and then scale down, use the screen
    size of the iPad 2\. Your `config.lua` would look similar to the following code:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要先为更大的屏幕尺寸进行缩放，然后再缩小，请使用iPad 2的屏幕尺寸。你的`config.lua`文件将类似于以下代码：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: While the preceding example is another solution to scale content, it's important
    to remember the limitations in texture memory involved with larger (high resolution)
    images. While devices such as the iPad with Retina display, iPhone 5s, and the
    Samsung Galaxy Tab 4 tablet will handle this just fine, the iPhone 4s and older
    devices will have far less texture memory available to handle large graphics.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前面的例子是缩放内容的另一种解决方案，但重要的是要记住，较大（高分辨率）图像涉及的纹理内存限制。像iPad带Retina显示屏、iPhone 5s和三星Galaxy
    Tab 4平板电脑这样的设备可以很好地处理这个问题，但iPhone 4s和更旧的设备可用的纹理内存要少得多，无法处理大图形。
- en: A way to resolve this potential problem is to use dynamic image resolution to
    substitute assets that are better suited for low-end devices and high-end devices.
    We will discuss this topic in more detail later in this section.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个潜在问题的方法之一是使用动态图像解析，以替换更适合低端设备和高端设备的资源。我们将在本节的后面更详细地讨论这个话题。
- en: The best of both worlds
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 两全其美的方案
- en: As you may have noticed, some of the background images we used in our sample
    apps are scaled at 380 x 570\. This happens to be the size that fills the entire
    screen on all common devices for both iOS and Android. Better yet, it is a middle
    ground to compensate for higher- and lower-resolution images on any device.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到，我们在示例应用中使用的某些背景图像被缩放到了380 x 570。这个尺寸恰好能填满iOS和Android所有常见设备的整个屏幕。更重要的是，它是任何设备上高低分辨率图像的折中方案。
- en: 'In order for your content to be displayed as evenly as possible, the following
    must be set up accordingly:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让你的内容尽可能均匀地显示，以下设置必须相应地进行：
- en: 'Settings for `config.lua` are as follows:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '`config.lua`的设置如下：'
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In any file that contains any of your display images, a typical background
    would be displayed as follows:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在包含显示图像的任何文件中，典型的背景会如下所示：
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Any content with a size of 320 x 480 is considered the focus area. Anything
    outside of the area is cropped, but will fill the screen with content on any device.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 任何尺寸为320 x 480的内容都被认为是焦点区域。区域之外的内容将被裁剪，但在任何设备上都会用内容填满屏幕。
- en: The deeper meaning of dynamic image selection
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动态图像选择的深层含义
- en: We know we can swap base images used for smaller devices (iPhone 4s) and larger
    devices (iPhone 6 and Kindle Fire HD). This occurs when trying to scale multiple
    devices in the same build.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们知道我们可以交换用于较小设备（iPhone 4s）和较大设备（iPhone 6和Kindle Fire HD）的基本图像。在尝试在同一个构建中缩放多个设备时，会发生这种情况。
- en: A file-naming scheme is available for use to handle such devices for iOS and
    Android. Knowing how to handle the scaling of assets affected for the device proposed
    is half the battle. We'll have to define what resolution scale needs to be addressed
    for Corona to access the assets they're directed toward.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 针对iOS和Android设备，有一个文件命名方案可供使用。了解如何处理受提议设备影响的资源的缩放，是成功的一半。我们将需要定义Corona需要解决哪个分辨率比例，以便访问它们所指向的资源。
- en: Using the line `display.newImageRect( [parentGroup,] filename [, baseDirectory]
    w, h )` will call out your dynamic resolution images.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`display.newImageRect( [parentGroup,] filename [, baseDirectory] w, h )`这行代码将调用你的动态分辨率图像。
- en: 'Typically, we''ve used `["@2x"] = 2` to call out the higher resolution image
    when available in our project for iOS devices:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，我们在项目中为iOS设备调用更高分辨率图像时使用`["@2x"] = 2`：
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The preceding example will only work for iPhone 4s and iPad 2 since it surpasses
    the base size of 320 x 480 on both devices. If we wanted to make it accessible
    to the Droid 2, the scale threshold would be 1.5\. For an Android tablet to work,
    such as the Samsung Galaxy tablet, the scale threshold is 1.875\. So how do we
    figure out these numbers? Simple. Take the width of the higher-end device and
    divide it by 320 (the base size). For example, the Droid 2 dimensions are 480
    x 854\. Divide 480 by 320 and it equals 1.5.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的例子只适用于iPhone 4s和iPad 2，因为它超出了这两台设备的基本尺寸320 x 480。如果我们想要让Droid 2也能访问，那么比例阈值将是1.5。对于像三星Galaxy平板电脑这样的Android平板来说，比例阈值是1.875。那么我们如何得出这些数字呢？简单。取高端设备的宽度，除以320（基本尺寸）。例如，Droid
    2的尺寸是480 x 854。将480除以320，等于1.5。
- en: The Samsung Galaxy Tab 4 tablet's dimensions are 800 x 1280\. Divide 800 by
    320 and it equals 2.5.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 三星Galaxy Tab 4平板电脑的尺寸是800 x 1280。将800除以320，等于2.5。
- en: 'If trying to manage both iOS and Android devices in the same project, you can
    change your `imageSuffix` in `config.lua`, as shown in the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果尝试在同一个项目中管理iOS和Android设备，你可以在`config.lua`中更改你的`imageSuffix`，如下代码所示：
- en: '[PRE7]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Alternatively, you could use the following code:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用以下代码：
- en: '[PRE8]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Using either of the preceding examples will trigger the proposed Android devices
    to display the higher-resolution image.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面任一示例将触发提议的安卓设备显示更高分辨率的图像。
- en: The `imageSuffix` string doesn't necessarily have to be `"@2x"`; it can be anything
    like `"@2"`, `"_lrg"`, or even `"-2x"`. As long as your higher-resolution image
    has the intended suffix after the primary image name, it'll work just fine.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '`imageSuffix` 字符串不一定非要是 `"@2x"`；它可以是像 `"@2"`，`"_lrg"`，甚至是 `"-2x"` 这样的任何东西。只要你的更高分辨率图像在主图像名称后具有预期的后缀，它就能正常工作。'
- en: High-resolution sprite sheets
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 高分辨率精灵表
- en: High-resolution sprite sheets are not handled the same way as dynamic image
    selections. While you can continue using the same naming convention to differentiate
    your high-resolution images from your basic images, the image will not be able
    to use `display.newImageRect()` when referring to sprite sheets.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 高分辨率精灵表的处理方式与动态图像选择不同。虽然你可以继续使用相同的命名约定来区分你的高分辨率图像和基本图像，但图像将无法在引用精灵表时使用 `display.newImageRect()`。
- en: 'If your current content scale is `width = 320`, `height = 480`, and `scale
    = "letterbox"` in your `config.lua` file, then the scale output for the following
    devices will demonstrate the following:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的 `config.lua` 文件中当前的内容缩放设置为 `width = 320`，`height = 480`，以及 `scale = "letterbox"`，那么以下设备的缩放输出将展示如下：
- en: '`iPhone = 1`'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iPhone = 1`'
- en: '`iPhone 4s = 0.5`'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iPhone 4s = 0.5`'
- en: '`Droid 2 = 0.666666668653488`'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Droid 2 = 0.666666668653488`'
- en: '`iPad 2 = 0.46875`'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`iPad 2 = 0.46875`'
- en: 'Applying a basic sprite sheet that matches the scale for an iPhone will display
    sharp and clean images. When the same sprite sheet is applied to the iPhone 4,
    the display will match the content scale of the device, but the sprite sheet will
    look slightly pixilated and blurry around the edges. Using `display.contentScaleX`
    and calling some methods will solve that problem for you. Notice that `displayScale
    < 1` will access the high-resolution sprite sheet based on the preceding device
    scale:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 应用与 iPhone 尺寸相匹配的基本精灵表将显示清晰锐利的图像。当相同的精灵表应用于 iPhone 4 时，显示将匹配设备的内容缩放，但精灵表在边缘处看起来会有些像素化和模糊。使用
    `display.contentScaleX` 并调用一些方法将为你解决这个问题。注意 `displayScale < 1` 将根据前述设备比例访问高分辨率精灵表：
- en: '[PRE9]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Networking your apps
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用网络化
- en: When you have completed developing your main game framework, it's good to think
    about how to network it if you decide to do this.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当你完成主要游戏框架的开发后，如果决定这样做，考虑如何将其网络化是很有好处的。
- en: At some point in our lives, all of us have used some kind of networking tool,
    such as Twitter or Facebook. You probably use these applications currently, but
    the point is that you read updates from other users about a new game that was
    launched, or someone is spreading the word to download a game and compete with
    them. You can be that developer and develop the game they're talking about!
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们生活的某个时刻，我们所有人都使用过某种网络工具，比如 Twitter 或 Facebook。你可能现在正在使用这些应用程序，但重点是，你可以从其他用户那里阅读关于新游戏发布的更新，或者有人传播下载游戏并与他们竞争的消息。你可以成为他们谈论的那个游戏的开发者！
- en: Incorporating networking mechanisms in your game does not have to be a hassle.
    It only takes several lines of code to get it working.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的游戏中融入网络机制不必是一件麻烦事。只需几行代码就能让它工作。
- en: Posting to Twitter
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布到 Twitter
- en: Tweet, tweet, tweet… Twitter is a networking tool that connects you to the latest
    information that appeals to your interests. It is also a great tool to share information
    with others about your business and, of course, your game. Reach out to the game
    development audience by promoting your application.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 推推推……Twitter 是一个网络工具，能让你接触到吸引你兴趣的最新信息。它还是一个分享你业务信息，当然还有你的游戏的好工具。通过推广你的应用，接触游戏开发受众。
- en: The user who will be sharing a post to Twitter will need to create an account
    at [http://twitter.com/](http://twitter.com/) and will also need to make sure
    they're logged in.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 那些想要将帖子分享到 Twitter 的用户需要先在[http://twitter.com/](http://twitter.com/)创建一个账户，并确保他们已经登录。
- en: Time for action – adding Twitter to your apps
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——将 Twitter 加入你的应用
- en: We're going to implement Twitter in our apps by accessing a web service through
    UI buttons.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将通过 UI 按钮访问网络服务，在我们的应用中实现 Twitter 功能。
- en: In the `Chapter 9` folder, copy the `Twitter Web Pop-Up` project folder to your
    desktop. All the configuration, libraries, and assets needed are already included.
    You can download the project files that accompany this book from the Packt Publishing
    website.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`Chapter 9`文件夹中，将`Twitter Web Pop-Up`项目文件夹复制到你的桌面。所有需要的配置、库和资源都已包含。你可以从Packt
    Publishing网站下载伴随这本书的项目文件。
- en: Create a new `main.lua` file and save it to the project folder.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的`main.lua`文件并将其保存到项目文件夹中。
- en: 'Set the following variables at the beginning of the code:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码开始时设置以下变量：
- en: '[PRE10]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Create a local function called `onOpenTouch()` with an event parameter. Add
    an `if` statement so that the event receives a `"release"` action:'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`onOpenTouch()`的本地函数，带有事件参数。添加一个`if`语句，以便事件接收一个`"release"`动作：
- en: '[PRE11]'
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Using the local variable called `message`, add in the following string statement
    and concatenate `score`:'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用名为`message`的局部变量，添加以下字符串语句并拼接`score`：
- en: '[PRE12]'
  id: totrans-87
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Add in `local myString` and apply `string.gsub()` for `message` to replace
    space instances:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加`local myString`并应用`string.gsub()`对`message`进行处理，替换空格实例：
- en: '[PRE13]'
  id: totrans-89
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Introduce the `native.showWebPopup()` function that links to the Twitter account.
    Concatenate `myString` to include the preloaded message. Close the function:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引入链接到Twitter账户的`native.showWebPopup()`函数。将`myString`拼接进来以包含预加载的消息。关闭函数：
- en: '[PRE14]'
  id: totrans-91
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Set up the `openBtn` UI function:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`openBtn` UI函数：
- en: '[PRE15]'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Create a local function called `onCloseTouch()` with an `event` parameter.
    Add an `if` statement with `event.phase == "release"` to activate `native.cancelWebPopup()`:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为`onCloseTouch()`的本地函数，带有`event`参数。添加一个`if`语句，其中`event.phase == "release"`以激活`native.cancelWebPopup()`：
- en: '[PRE16]'
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Set up the `closeBtn` UI function:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`closeBtn` UI函数：
- en: '[PRE17]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Save the file and run the project in the simulator. Make sure you're connected
    to the Internet to see the results.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并在模拟器中运行项目。确保你连接到互联网以查看结果。
- en: Note
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you're currently not logged in to your Twitter account, you'll be asked to
    log in before you see the results of the tweet from our code.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你当前没有登录你的Twitter账户，你将被要求在查看我们代码中的推文结果之前登录。
- en: '![Time for action – adding Twitter to your apps](img/9343OT_09_01.jpg)'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![行动时间——将Twitter添加到你的应用中](img/9343OT_09_01.jpg)'
- en: '*What just happened?*'
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Near the top of the code, we set a variable `local score = 100`. This will be
    used inour Twitter message.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码的顶部，我们设置了一个变量`local score = 100`。这将在我们的Twitter消息中使用。
- en: In the `onOpenTouch(event)` function, a web popup will load on the release of
    `openBtn`. The text that will be posted is displayed in a string format under
    the variable, `local message`. You will notice that we concatenate `score` into
    the string so that it displays the value in the message post.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onOpenTouch(event)`函数中，当释放`openBtn`时将加载一个网页弹窗。要发布的文本以字符串格式显示在变量`local message`下。你会注意到我们将`score`拼接到字符串中，以便在消息发布时显示其值。
- en: '`local myString` and `string.gsub()` are used to replace all the instances
    indicated in a pattern inside the string. In this case, it takes the string inside
    a message and searches for every empty space between each word and replaces it
    with `%20`. `%20` encodes URL parameters to indicate spaces. The extra `%` acts
    as an escape character.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '`local myString`和`string.gsub()`用于替换字符串中模式指示的所有实例。在这种情况下，它取消息中的字符串，并搜索每个单词之间的每个空格，并将其替换为`%20`。`%20`编码URL参数以表示空格。额外的`%`充当转义字符。'
- en: The `native.showWebPopup()` function displays at dimensions 320 x 300, which
    is about half the screen size on a device. The URL to display the Twitter message
    dialog is added and concatenates `myString`.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '`native.showWebPopup()`函数以320 x 300的尺寸显示，这大约是设备屏幕尺寸的一半。添加显示Twitter消息对话框的URL并拼接`myString`。'
- en: When the web pop up no longer needs to be used and needs to be closed, `onCloseTouch(event)`
    is called by `closeBtn`. This will take the `event` parameter `"release"` and
    call `native.cancelWebPopup()`. This particular function will dismiss the current
    web popup.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当网页弹窗不再需要使用并需要关闭时，`closeBtn`会调用`onCloseTouch(event)`。这将传递参数`"release"`给`event`，并调用`native.cancelWebPopup()`。这个特定的函数将会关闭当前的网页弹窗。
- en: Posting to Facebook
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 发布到Facebook
- en: Another social networking tool that can be used to share information about your
    game is Facebook. You can easily customize a post to link information about your
    game or share messages about high scores and to encourage other users to download
    it.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以用来分享关于你的游戏信息的社交网络工具是Facebook。你可以轻松地自定义一个帖子来链接关于你的游戏的信息，或者分享关于高分的消息，并鼓励其他用户下载。
- en: In order to post messages to Facebook, you need to be logged in to your Facebook
    account or create one at [https://www.facebook.com/](https://www.facebook.com/).
    You will have to obtain an App ID from the Facebook Developer website at [https://developers.facebook.com/](https://developers.facebook.com/).
    The App ID is a unique identifier for your site that determines what the right
    level of security is in place between the user and the app page/website.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在 Facebook 上发布消息，你需要登录到你的 Facebook 账户或创建一个账户，网址为 [https://www.facebook.com/](https://www.facebook.com/)。你还需要从
    Facebook 开发者网站 [https://developers.facebook.com/](https://developers.facebook.com/)
    获取一个 App ID。App ID 是你站点的唯一标识符，它决定了用户与应用页面/网站之间适当的安全级别。
- en: Once you have created an App ID, you will also need to edit the App information
    and choose how you want it to integrate with Facebook. You are given several choices,
    such as Website, Native iOS App, and Native Android App, just to name a few. The
    website integration must be selected and filled in with a valid URL in order for
    Facebook to redirect to the specified URL for posts that deal with web popups.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 App ID 后，你还需要编辑应用信息，并选择应用与 Facebook 的集成方式。这里有几个选项，如网站、原生 iOS 应用和原生 Android
    应用等。网站集成必须选中，并填写有效的 URL，以便 Facebook 在处理涉及网页弹窗的帖子时重定向到指定 URL。
- en: Time for action – adding Facebook to your apps
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间——将 Facebook 添加到你的应用中
- en: 'Similar to our Twitter example, we''ll be incorporating Facebook posts with
    a web popup as well:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 类似于我们的 Twitter 示例，我们也将通过网页弹窗整合 Facebook 帖子：
- en: In the `Chapter 9` folder, copy the `Facebook Web Pop-Up` project folder to
    your desktop. All the configuration, libraries, and assets needed are already
    included. You can download the project files that accompany this book from the
    Packt Publishing website.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Chapter 9` 文件夹中，将 `Facebook Web Pop-Up` 项目文件夹复制到你的桌面。所有需要的配置、库和资源都已包含在内。你可以从
    Packt Publishing 网站下载伴随本书的项目文件。
- en: Create a new `main.lua` file and save it to the project folder.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的 `main.lua` 文件并将其保存到项目文件夹中。
- en: 'Set the following variables at the beginning of the code:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码开始处设置以下变量：
- en: '[PRE18]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Create a local function called `onOpenTouch()` with an event parameter. Add
    an `if` statement when the event receives a `"release"` action:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `onOpenTouch()` 的局部函数，并带有一个事件参数。当事件接收到 `"release"` 动作时，添加一个 `if` 语句：
- en: '[PRE19]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'Add the following local variables that include the strings that we''ll be implementing
    in the Facebook post:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加以下局部变量，包括我们将在 Facebook 帖子中实施的字符串：
- en: '[PRE20]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'Introduce the native web popup function that links to the Facebook account.
    Include parameters for the Facebook dialog box that redirects the URL of your
    preferred website, the display with a touch mode that connects to your app URL,
    and an image URL that presents your app icon or company logo. Concatenate all
    variables with string methods to output all messages. Close the function. Add
    in the `openBtn` UI function. You will need to replace all of the following URL
    information with your own:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 引入连接到 Facebook 账户的本地网页弹窗功能。包括 Facebook 对话框参数，用于重定向你首选网站的 URL，以触摸模式连接到你的应用 URL
    的显示，以及展示你的应用图标或公司标志的图片 URL。使用字符串方法连接所有变量以输出所有消息。关闭函数。在 `openBtn` UI 函数中加入。你需要将以下所有
    URL 信息替换为你自己的：
- en: '[PRE21]'
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE21]'
- en: Note
  id: totrans-124
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: More information pertaining to the Facebook Dialog can be found on the Facebook
    Developers website at [http://developers.facebook.com/docs/reference/dialogs/](http://developers.facebook.com/docs/reference/dialogs/).
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 关于 Facebook 对话框的更多信息可以在 Facebook 开发者网站找到，网址为 [http://developers.facebook.com/docs/reference/dialogs/](http://developers.facebook.com/docs/reference/dialogs/)。
- en: 'Create a local function called `onCloseTouch()` with an event parameter. Add
    an `if` statement with `event.phase == "release"` to activate `native.cancelWebPopup()`.
    Set up the `closeBtn` UI function:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `onCloseTouch()` 的局部函数，并带有一个事件参数。添加一个 `if` 语句，判断 `event.phase == "release"`
    以激活 `native.cancelWebPopup()`。设置 `closeBtn` UI 函数：
- en: '[PRE22]'
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE22]'
- en: Save the file and run the project in the simulator. Make sure you're connected
    to the Internet and your Facebook account to see the results.![Time for action
    – adding Facebook to your apps](img/9343OT_09_02.jpg)
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保存文件并在模拟器中运行项目。确保你已连接到互联网并登录你的 Facebook 账户以查看结果。![行动时间——将 Facebook 添加到你的应用中](img/9343OT_09_02.jpg)
- en: '*What just happened?*'
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: Within the `onOpenTouch(event)` function, several variables are called when
    `openBtn` is pressed and released. Notice that `local appId` indicates a string
    of numbers that you can obtain after creating an app on the Facebook Developers
    website.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `onOpenTouch(event)` 函数内部，当按下并释放 `openBtn` 时会调用几个变量。注意 `local appId` 表示你在
    Facebook Developers 网站上创建应用后可以获得的数字字符串。
- en: '`message1`, `message2`, and `message3` are the strings that display the message
    post. `myString1`, `myString2`, and `myString3` help replace the spaces indicated
    in `message1`, `message2`, and `message3`.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '`message1`、`message2` 和 `message3` 是显示信息帖子的字符串。`myString1`、`myString2` 和 `myString3`
    用于替换 `message1`、`message2` 和 `message3` 中指定的空格。'
- en: 'The `native.showWebPopup()` function displays with a dimension of 320 x 300
    and presents the dialog URL to Facebook. The following parameters display accordingly:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: '`native.showWebPopup()` 函数以 320 x 300 的尺寸显示，并将对话框 URL 呈现给 Facebook。以下参数相应地显示：'
- en: '`app_id`: This is your unique ID created on the Facebook Developer website.
    For example, `"1234567"`.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`app_id`：这是你在 Facebook Developer 网站上创建的唯一 ID。例如，`"1234567"`。'
- en: '`redirect_uri`: The URL to redirect to after the user clicks on a button on
    the dialog. This is required in the parameters.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`redirect_uri`：用户在对话框上点击按钮后重定向的 URL。这是参数中必需的。'
- en: '`display`: This displays the mode to render the dialog.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`display`：这显示渲染对话框的模式。'
- en: '`touch`: This is used on smart phone devices such as iPhone and Android. This
    fits the dialog screen within small dimensions.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`touch`：这用于如 iPhone 和 Android 这样的智能手机设备。这使对话框屏幕适应较小的尺寸。'
- en: '`link`: This is the link attached to the post.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`link`：这是帖子附带的链接。'
- en: '`picture`: This is the URL of a picture to the post.'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`picture`：这是帖子图片的 URL。'
- en: '`name`: This is the name of the link attachment.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这是链接附件的名称。'
- en: '`caption`: This is the caption of the link (appears beneath the link name).'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`caption`：这是链接的标题（显示在链接名称下方）。'
- en: '`description`: This is the description of the link (appears beneath the link
    caption).'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description`：这是链接的描述（显示在链接标题下方）。'
- en: When the web popup is no longer required and needs to be closed, `onCloseTouch(event)`
    is called by `closeBtn`. This will take the event parameter `"release"` and call
    `native.cancelWebPopup()`. This particular function will dismiss the current web
    popup.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 当网页弹窗不再需要并需要关闭时，`closeBtn` 会调用 `onCloseTouch(event)`。这将使用事件参数 `"release"` 并调用
    `native.cancelWebPopup()`。这个特定的函数将关闭当前的网页弹窗。
- en: Facebook Connect
  id: totrans-143
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Facebook Connect
- en: This library supplies a number of functions that provide access to [http://www.facebook.com](http://www.facebook.com)
    through the official Facebook Connect interface.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这个库提供了一系列通过官方 Facebook Connect 接口访问 [http://www.facebook.com](http://www.facebook.com)
    的功能。
- en: Time for action – posting scores using Facebook Connect
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动手操作时间——使用 Facebook Connect 发布分数。
- en: Facebook Connect is another way to post on the wall feed by using the native
    Facebook UI features. We'll be creating a different way to post messages and scores
    to the newsfeed. In order to see how Facebook Connect operates, you need to load
    the build to a device to view the results. It will not run in the simulator.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: Facebook Connect 是另一种使用原生 Facebook UI 功能在墙贴上发布信息的方式。我们将创建一种不同的方法来将消息和分数发布到新闻源。为了了解
    Facebook Connect 的工作方式，你需要将构建加载到设备上查看结果。它不会在模拟器中运行。
- en: In the `Chapter 9` folder, copy the `Facebook Connect` project folder to your
    desktop. All the configuration, libraries, and assets needed are already included.
    You can download the project files that accompany this book from the Packt Publishing
    website.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Chapter 9` 文件夹中，将 `Facebook Connect` 项目文件夹复制到你的桌面。所有需要的配置、库和资源都已包含在内。你可以从
    Packt Publishing 网站下载伴随这本书的项目文件。
- en: Create a new `main.lua` file and save it to the project folder.
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `main.lua` 的新文件并将其保存到项目文件夹中。
- en: 'Set up the following variables at the beginning of the code:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在代码开始时设置以下变量：
- en: '[PRE23]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'Create a local function called `onFBTouch()` with an event parameter. Add an
    `if` statement that contains `event.phase == release`. Also, include your Facebook
    app ID in a string format:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个名为 `onFBTouch()` 的本地函数，带有一个事件参数。添加一个包含 `event.phase == release` 的 `if` 语句。同时，以字符串格式包含你的
    Facebook 应用 ID：
- en: '[PRE24]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Create another local function within `onFBTouch(event)` called `facebookListener()`
    with an event parameter as well. Include an `if` statement that refers to `"session"
    == event.type`:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `onFBTouch(event)` 内部创建另一个本地函数，名为 `facebookListener()`，同样带有一个事件参数。包含一个引用 `"session"
    == event.type` 的 `if` 语句：
- en: '[PRE25]'
  id: totrans-154
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'Add in another `if` statement where `"login"` equals to `event.phase`. Include
    a local variable called `theMessage` to display the message you want to share
    with other Facebook users:'
  id: totrans-155
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在另一个 `if` 语句中添加 `"login"` 等于 `event.phase` 的条件。包含一个名为 `theMessage` 的局部变量，以显示你想要与其他
    Facebook 用户分享的消息：
- en: '[PRE26]'
  id: totrans-156
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE26]'
- en: 'Add the `facebook.request()` function that will post the following messages
    to the user''s Facebook wall. Close any remaining `if` statements with `end` in
    the `facebookListener(event)` function:'
  id: totrans-157
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加 `facebook.request()` 函数，它将在用户的 Facebook 墙上发布以下消息。在 `facebookListener(event)`
    函数中用 `end` 关闭任何剩余的 `if` 语句：
- en: '[PRE27]'
  id: totrans-158
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Note
  id: totrans-159
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The `link` parameter demonstrates a URL for an iOS application. You can direct
    the URL to an Android application that will look something like `https://play.google.com/store/apps/details?id=com.yourcompany.yourappname`
    or a general website URL of your choosing.
  id: totrans-160
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`link` 参数展示了一个 iOS 应用的 URL。你可以将 URL 指向类似 `https://play.google.com/store/apps/details?id=com.yourcompany.yourappname`
    的 Android 应用或你选择的任何通用网站 URL。'
- en: 'Call the `facebook.login()` function that includes your App ID, listener, and
    permissions to post on a user''s Facebook wall. Close the remainder of the `onFBTouch(event)`
    function:'
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 调用 `facebook.login()` 函数，其中包括你的 App ID、监听器和在用户 Facebook 墙上发布的权限。关闭 `onFBTouch(event)`
    函数的其余部分：
- en: '[PRE28]'
  id: totrans-162
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE28]'
- en: 'Enable the `fbBtn` UI function and save your file:'
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用 `fbBtn` UI 功能并保存你的文件：
- en: '[PRE29]'
  id: totrans-164
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE29]'
- en: Create a new device build for either iOS or Android. Load the build to your
    device and run the application. You will be asked to log in to your Facebook account
    before you can see the results from the application.![Time for action – posting
    scores using Facebook Connect](img/9343OT_09_03.jpg)
  id: totrans-165
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为 iOS 或 Android 创建一个新的设备构建。将构建加载到你的设备上并运行应用程序。在你能看到应用程序的结果之前，系统会要求你登录到你的 Facebook
    账户。![行动时间——使用 Facebook Connect 发布分数](img/9343OT_09_03.jpg)
- en: '*What just happened?*'
  id: totrans-166
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*刚才发生了什么？*'
- en: One of the most important things that need to be done is `require "facebook"`
    in order to have the Facebook API to work. We also created a local variable called
    `score` with the value of 100.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 需要完成的最重要的任务之一是 `require "facebook"` 以便 Facebook API 能够工作。我们还创建了一个名为 `score`
    的局部变量，其值为 100。
- en: The `onFBTouch(event)` function will initiate the event parameter on `"release"`
    of `fbBtn`. Within the function, `fbAppID` is included with characters in a string
    format. This will be a unique set of numbers that you must obtain from the Facebook
    Developers website. The App ID will be created for you when you make an App page
    on the site.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: '`onFBTouch(event)` 函数将在 `fbBtn` 的 `"release"` 上初始化事件参数。在函数中，`fbAppID` 以字符串格式包含字符。这将是一组你必须在
    Facebook 开发者网站上获取的独特数字。当你在该网站上创建应用页面时，系统会为你创建 App ID。'
- en: 'Another function, `facebookListener(event)`, is created, and it will initiate
    all `fbConnect` events. The `if` statement that contains `("login" == event.phase
    )` will request to post a message to your feed through `"me/feed, "POST"`. The
    feed contains the following:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个函数 `facebookListener(event)` 被创建，它将初始化所有的 `fbConnect` 事件。包含 `("login" ==
    event.phase)` 的 `if` 语句将通过 `"me/feed", "POST"` 请求在你的动态中发布一条消息。该动态包含以下内容：
- en: '`message=theMessage`: This refers to the string that belongs to the variable.
    It also concatenates scores, so it displays the value as well.'
  id: totrans-170
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`message=theMessage`：这指的是属于变量的字符串。它还连接分数，因此也会显示值。'
- en: '`name`: This is a message that includes your app name or subject matter.'
  id: totrans-171
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`name`：这是一条包含你的应用名称或主题的消息。'
- en: '`caption`: This is a short persuasive message to catch other users'' attention
    about playing the game.'
  id: totrans-172
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`caption`：这是一条简短的吸引其他用户关注玩游戏的宣传信息。'
- en: '`link`: This provides the URL to download the game from either the App Store
    or Google Play Store.'
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`link`：这提供了从 App Store 或 Google Play Store 下载游戏的 URL。'
- en: '`picture`: This is a URL that contains your image that displays your app icon
    or a visual representation of the game.'
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`picture`：这是一个包含你的应用图标或游戏视觉表示的图片 URL。'
- en: After the parameters are set, `facebook.login()` will refer to `fbAppID` and
    `facebookListener()` to see if a valid application ID is being used to post on
    Facebook. On success, the post is published through `"publish_actions"`.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 设置参数后，`facebook.login()` 将引用 `fbAppID` 和 `facebookListener()` 以查看是否使用了有效的应用程序
    ID 在 Facebook 上发布。成功后，将通过 `"publish_actions"` 发布帖子。
- en: Have a go hero – create a dialog box
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试成为英雄——创建一个对话框
- en: 'See if you can figure out how to display a dialog box using Facebook Connect
    and using the same setup as shown in the preceding example. The following line
    will display this as:'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 看看你能否弄清楚如何使用 Facebook Connect 显示一个对话框，并使用前面示例中展示的相同设置。以下行将显示为：
- en: '[PRE30]'
  id: totrans-178
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: Now, see where in the code `facebook.showDialog()` can be accessed. This is
    another way of posting messages to Facebook.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，查看代码中可以访问`facebook.showDialog()`的位置。这是发布消息到Facebook的另一种方式。
- en: Pop quiz – handling social networks
  id: totrans-180
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 小测验——处理社交网络
- en: Q1\. What is the specific API that scales down high-resolution sprite sheets?
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: Q1.哪个特定的API可以缩小高分辨率精灵表？
- en: '`object.xScale`'
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`object.xScale`'
- en: '`display.contentScaleX`'
  id: totrans-183
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`display.contentScaleX`'
- en: '`object.xReference`'
  id: totrans-184
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`object.xReference`'
- en: None of the above
  id: totrans-185
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以上都不正确
- en: Q2\. What are the publishing permissions called that allow posting on a user's
    wall on Facebook?
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: Q2.允许在Facebook上在用户墙上发布的内容的发布权限叫什么？
- en: '`"publish_stream"`'
  id: totrans-187
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`"publish_stream"`'
- en: '`"publish_actions"`'
  id: totrans-188
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`"publish_actions"`'
- en: '`"post"`'
  id: totrans-189
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`"post"`'
- en: '`"post_listener"`'
  id: totrans-190
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`"post_listener"`'
- en: Q3\. Which parameter(s) is required for `facebook.login()`?
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: Q3. `facebook.login()`需要哪些参数？
- en: '`appId`'
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`appId`'
- en: '`listener`'
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`listener`'
- en: '`permissions`'
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`permissions`'
- en: All of the above
  id: totrans-195
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 所有以上选项
- en: Summary
  id: totrans-196
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: We have covered several more areas on enhancing configuration settings and integrating
    three of the most popular social networks in today's media in our apps.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经涵盖了关于增强配置设置以及将当今媒体中最受欢迎的三个社交网络整合到我们的应用中的多个领域。
- en: 'We also took an in-depth look into the following:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还深入了解了以下内容：
- en: Build settings
  id: totrans-199
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建设置
- en: Dynamic content scaling and dynamic image resolution
  id: totrans-200
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 动态内容缩放和动态图像分辨率
- en: High-resolution sprite sheets
  id: totrans-201
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高分辨率精灵表
- en: Posting message feeds to Twitter and Facebook
  id: totrans-202
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将消息推送到Twitter和Facebook
- en: In the next chapter, we will go over the process on how to submit our games
    to the App Store and Google Play Store. You don't want to miss this for the world!
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将详细介绍如何将我们的游戏提交到App Store和Google Play Store。你绝对不想错过这个！
