["```kt\nlocal physics = require \"physics\"\n```", "```kt\nphysics.setGravity( 0, 9.8 ): Standard Earth gravity\n```", "```kt\nfunction movePaddle(event)\n\n  paddle.x = display.contentCenterX - (display.contentCenterX * (event.yGravity*3))\n\nend\n\nRuntime:addEventListener( \"accelerometer\", movePaddle )\n```", "```kt\nphysics.setScale( 60 )\n```", "```kt\nphysics.setPositionIterations(16)\n```", "```kt\nphysics.setVelocityIterations( 6 )\n```", "```kt\n    settings =\n    {\n      orientation =\n      {\n        default = \"landscapeRight\",\n        supported = { \"landscapeLeft\", \"landscapeRight\" },\n      }\n    }\n    ```", "```kt\n    application =\n    {\n      content =\n      {\n        width = 320,\n        height = 480, \n        scale = \"letterbox\",\n        fps = 60,\n      },\n    }\n    ```", "```kt\nlocal rect = display.newRect(0, 0, 150, 150)\nrect:setFillColor(1, 1, 1)\n\nlocal myGroup = display.newGroup()\nmyGroup:insert(rect)\n```", "```kt\nprint(system.getInfo(\"name\")) -- display the deviceID\n```", "```kt\nsystem.setAccelerometerInterval( 75 )\n```", "```kt\n    display.setStatusBar(display.HiddenStatusBar)\n\n    local physics = require \"physics\"\n    physics.start()\n    physics.setGravity(0, 0)\n\n    system.setAccelerometerInterval(100)\n    ```", "```kt\n    local menuScreenGroup  -- display.newGroup()\n    local mmScreen\n    local playBtn\n    ```", "```kt\n    local background\n    local paddle\n    local brick\n    local ball\n    ```", "```kt\n    local scoreText\n    local scoreNum\n    local levelText\n    local levelNum\n    ```", "```kt\n    local alertDisplayGroup    -- display.newGroup()\n    local alertBox\n    local conditionDisplay\n    local messageText\n    ```", "```kt\n    local _W = display.contentWidth / 2\n    local _H = display.contentHeight / 2\n    local bricks = display.newGroup()\n    local brickWidth = 35\n    local brickHeight = 15\n    local row\n    local column\n    local score = 0\n    local scoreIncrease = 100\n    local currentLevel\n    local vx = 3\n    local vy = -3\n    local gameEvent = \"\"\n    ```", "```kt\n    local isSimulator = \"simulator\" == system.getInfo(\"environment\")\n    ```", "```kt\n    function main()\n\n    end\n\n    --[[\n    This empty space will hold other functions and methods to run the application\n    ]]--\n\n    main()\n    ```", "```kt\nlocal playBtn = display.newImage(\"playbtn.png\")\nplayBtn.name = \"playbutton\"\n\nlocal function listener(event)\n  if event.target.name == \"playbutton\" then\n\n    print(\"The button was touched.\")\n\nend\nend\n\nplayBtn:addEventListener(\"touch\", listener )\n```", "```kt\nlocal playBtn = display.newImage(\"playbtn.png\") \n\nlocal function listener(event) \n  print(\"The button appeared.\")\nend\n\nRuntime:addEventListener(\"enterFrame\", listener )\n```", "```kt\nlocal playBtn = display.newImage(\"playbtn.png\")\n\nlocal function listener(event)\n  print(\"The button appeared.\")\nend\n\nRuntime:addEventListener(\"enterFrame\", listener )\n```", "```kt\n_W = display.contentWidth\n_H = display.contentHeight\n\nlocal square = display.newRect( 0, 0, 100, 100 )\nsquare:setFillColor( 1, 1, 1 )\nsquare.x = _W/2; square.y = _H/2\n\nlocal square2 = display.newRect( 0, 0, 50, 50 )\nsquare2:setFillColor( 1, 1, 1 )\nsquare2.x = _W/2; square2.y = _H/2\n\ntransition.to( square, { time=1500, x=250, y=400 } )\ntransition.from( square2, { time=1500, x=275, y=0 } )\n```", "```kt\n    function mainMenu()  \n\n    end\n    ```", "```kt\n      menuScreenGroup = display.newGroup()\n\n      mmScreen = display.newImage(\"mmScreen.png\", 0, 0, true)\n      mmScreen.x = _W\n      mmScreen.y = _H\n\n      playBtn = display.newImage(\"playbtn.png\")\n      playBtn.anchorX = 0.5; playBtn.anchorY = 0.5  \n      playBtn.x = _W; playBtn.y = _H + 50\n      playBtn.name = \"playbutton\"\n\n      menuScreenGroup:insert(mmScreen)\n      menuScreenGroup:insert(playBtn)\n    ```", "```kt\n    function main()\n      mainMenu()\n    end \n    ```", "```kt\n    function loadGame(event)\n      if event.target.name == \"playbutton\" then\n\n        transition.to(menuScreenGroup,{time = 0, alpha=0, onComplete = addGameScreen})\n\n        playBtn:removeEventListener(\"tap\", loadGame)\n      end\n    end\n    ```", "```kt\n    playBtn:addEventListener(\"tap\", loadGame)\n    ```", "```kt\n    function addGameScreen()\n\n      background = display.newImage(\"bg.png\", 0, 0, true )\n      background.x = _W \n      background.y = _H\n\n      paddle = display.newImage(\"paddle.png\")\n      paddle.x = 240; paddle.y = 300\n      paddle.name = \"paddle\"\n\n      ball = display.newImage(\"ball.png\")\n      ball.x = 240; ball.y = 290\n      ball.name = \"ball\"\n    ```", "```kt\n      scoreText = display.newText(\"Score:\", 25, 10, \"Arial\", 14)\n      scoreText:setFillColor( 1, 1, 1 )\n\n      scoreNum = display.newText(\"0\", 54, 10, \"Arial\", 14)\n      scoreNum: setFillColor( 1, 1, 1 )\n\n      levelText = display.newText(\"Level:\", 440, 10, \"Arial\", 14)\n      levelText:setFillColor( 1, 1, 1 )\n\n      levelNum = display.newText(\"1\", 470, 10, \"Arial\", 14)\n      levelNum:setFillColor( 1, 1, 1 )\n    ```", "```kt\n      gameLevel1() \n\n    end\n    ```", "```kt\n    function gameLevel1()\n\n      currentLevel = 1\n\n      bricks:toFront()\n    ```", "```kt\n      local numOfRows = 4\n      local numOfColumns = 4\n      local brickPlacement = {x = (_W) - (brickWidth * numOfColumns ) / 2  + 20, y = 50}\n    ```", "```kt\n      for row = 0, numOfRows - 1 do\n        for column = 0, numOfColumns - 1 do\n\n          local brick = display.newImage(\"brick.png\")\n          brick.name = \"brick\"\n          brick.x = brickPlacement.x + (column * brickWidth)\n          brick.y = brickPlacement.y + (row * brickHeight)\n          physics.addBody(brick, \"static\", {density = 1, friction = 0, bounce = 0})\n          bricks.insert(bricks, brick)\n\n        end\n      end\n    end\n    ```", "```kt\n    function gameLevel2()\n\n      currentLevel = 2\n\n      bricks:toFront()\n\n      local numOfRows = 5\n      local numOfColumns = 8\n      local brickPlacement = {x = (_W) - (brickWidth * numOfColumns ) / 2  + 20, y = 50}\n\n      for row = 0, numOfRows - 1 do\n        for column = 0, numOfColumns - 1 do\n\n          -- Create a brick\n          local brick = display.newImage(\"brick.png\")\n          brick.name = \"brick\"\n          brick.x = brickPlacement.x + (column * brickWidth)\n          brick.y = brickPlacement.y + (row * brickHeight)\n          physics.addBody(brick, \"static\", {density = 1, friction = 0, bounce = 0})\n          bricks.insert(bricks, brick)\n\n        end\n      end\n    end\n    ```", "```kt\nif event.other.name == \"brick\" and ball.x + ball.width * 0.5 < event.other.x + event.other.width * 0.5 then\n        vx = -vx \nelseif event.other.name == \"brick\" and ball.x + ball.width * 0.5 >= event.other.x + event.other.width * 0.5 then\n        vx = vx \nend\n```", "```kt\n    function alertScreen(title, message)\n\n      alertBox = display.newImage(\"alertBox.png\")\n      alertBox.x = 240; alertBox.y = 160\n\n      transition.from(alertBox, {time = 500, xScale = 0.5, yScale = 0.5, transition = easing.outExpo})\n    ```", "```kt\n      conditionDisplay = display.newText(title, 0, 0, \"Arial\", 38)\n      conditionDisplay:setFillColor( 1, 1, 1 )\n      conditionDisplay.xScale = 0.5\n      conditionDisplay.yScale = 0.5\n      conditionDisplay.anchorX = 0.5\n      conditionDisplay.x =  display.contentCenterX\n      conditionDisplay.y = display.contentCenterY - 15\n    ```", "```kt\n      messageText = display.newText(message, 0, 0, \"Arial\", 24)\n      messageText:setFillColor( 1, 1, 1 )\n      messageText.xScale = 0.5\n      messageText.yScale = 0.5\n      messageText.anchorX = 0.5  \n      messageText.x = display.contentCenterX\n      messageText.y = display.contentCenterY + 15\n    ```", "```kt\n      alertDisplayGroup = display.newGroup()\n      alertDisplayGroup:insert(alertBox)\n      alertDisplayGroup:insert(conditionDisplay)\n      alertDisplayGroup:insert(messageText)\n    end\n    ```", "```kt\nlocal square = display.newRect( 0, 0, 50, 50 )\nsquare:setFillColor( 1, 1, 1 )\nsquare.x = 100 square2.y = 300\n```"]