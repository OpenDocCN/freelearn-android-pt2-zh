- en: Chapter 4. Incorporating Multimedia Elements
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第4章. 融入多媒体元素
- en: 'This chapter will discuss how to incorporate multimedia elements inside a project
    and handle several screens in an app. The readers will be shown how to add images,
    sounds and an HTML page in the project. We will discuss the following topics with
    the help of a project called `SimpleNumb3r5`:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将讨论如何在项目中融入多媒体元素并在应用中处理多个屏幕。我们将向读者展示如何添加图片、声音和HTML页面。我们将通过一个名为`SimpleNumb3r5`的项目来讨论以下主题：
- en: Forming the layout
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建布局
- en: Adding the image resources
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加图像资源
- en: Inserting ImageView
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入ImageView
- en: Inserting ImageButtons
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 插入ImageButtons
- en: ImageButton and handling events
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ImageButton和事件处理
- en: Adding audio and multiple screen support
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加音频和支持多屏幕
- en: Inserting HTML in a WebView
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在WebView中插入HTML
- en: Using Intent and Activity
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Intent和Activity
- en: Adding a new activity in the manifest file
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在清单文件中添加新的活动
- en: The final product – run, deploy, and test app
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最终产品——运行、部署和测试应用
- en: For this chapter, we need a new project that will cover the Android devices
    from Version 2.1 (API level 7) to the latest version. So set `android:minSdkVersion`
    to 7, and `android:targetSdkVersion` to 16.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 为了本章内容，我们需要一个新项目，该项目将涵盖从Android 2.1（API级别7）到最新版本的设备。因此，将`android:minSdkVersion`设置为7，`android:targetSdkVersion`设置为16。
- en: The icon and other resources are available in a downloadable source code (refer
    to the download tip mentioned in the *Preface* of this book). Download these materials
    prior to developing this app. We do not want to make your life miserable doing
    the graphic design.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 图标和其他资源可以在可下载的源代码中找到（参考本书*前言*中提到的下载提示）。在开发此应用之前，请下载这些材料。我们不想让你在做图形设计时感到痛苦。
- en: 'The selected name for the new app is `SimpleNumb3r5`, as shown in the following
    screenshot. If you are wondering why we chose Android 2.1, this is to widen the
    device coverage:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 新应用选择的名称为`SimpleNumb3r5`，如下截图所示。如果你好奇为什么我们选择Android 2.1，这是因为我们希望扩大设备覆盖范围：
- en: '![Incorporating Multimedia Elements](img/1103OS-04-01.jpg)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![融入多媒体元素](img/1103OS-04-01.jpg)'
- en: Create a new Android project named SimpleNumb3r5
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一个名为SimpleNumb3r5的新Android项目
- en: We provide the launcher icon in the resource materials and the image named `ic_launcher-web.png`
    in the **Image File** field, as shown in the following screenshot. This is the
    dedicated logo of this app. Should you prefer a different logo to suit your app,
    you are welcome to design it personally. By using this wizard, the icon launcher
    will be prepared to suit the `xhdpi`, `hdpi`, `mdpi`, and `ldpi` formats in the
    respective drawable folder.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在资源材料中提供启动图标，并在**图像文件**字段中提供名为`ic_launcher-web.png`的图片，如下截图所示。这是此应用的专用标志。如果你想要一个不同的标志以适应你的应用，欢迎你亲自设计。使用这个向导，图标启动器将被准备到适应`xhdpi`、`hdpi`、`mdpi`和`ldpi`格式的相应drawable文件夹中。
- en: '![Incorporating Multimedia Elements](img/1103OS-04-02.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![融入多媒体元素](img/1103OS-04-02.jpg)'
- en: Creating the launcher icon
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 创建启动图标
- en: The next screen, as shown in the following screenshot, is to provide a name
    of the application. This can be any string that has the right meaning suitable
    to the app. The layout name will be created automatically for you, and could be
    changed to your preference. Choose the navigation type as **None** as it has no
    concern with respect to our application development.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如下截图所示的下一个屏幕是提供应用程序名称的。这可以是任何对应用有合适意义的字符串。布局名称将自动为您创建，可以根据您的喜好进行更改。选择导航类型为**无**，因为这与我们的应用开发无关。
- en: '![Incorporating Multimedia Elements](img/1103OS-04-03.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![融入多媒体元素](img/1103OS-04-03.jpg)'
- en: Choose the blank activity
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 选择空白活动
- en: The following screenshot is the mock-up of the app being developed. We have
    a major section of the screen dedicated to display the image of the numbers zero
    to nine and the spelling. The bottom row of the screen is the navigation bar where
    the user may navigate to the previous and next screen. The button with the speaker
    is for the user to listen to the number spoken to them. The button with the lower
    case, **i**, is the icon to show the information screen.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图是正在开发的应用的模拟图。我们有一个主要区域用于显示数字零到九的图片和拼写。屏幕底部的行是导航栏，用户可以通过它导航到上一个或下一个屏幕。带有扬声器的按钮是让用户听数字发音的。带有小写字母**i**的按钮是显示信息屏幕的图标。
- en: The project title (appears by default).
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目标题（默认显示）。
- en: The image number location. This row consists of the three cells merged together.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像编号位置。这一行由三个单元格合并而成。
- en: The bottom row consists of previous, info, play sound, and next buttons.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 底部行包括上一个、信息、播放声音和下一个按钮。
- en: '![Incorporating Multimedia Elements](img/1103OS-04-04.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![整合多媒体元素](img/1103OS-04-04.jpg)'
- en: The main screen mock-up
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 主屏幕模拟图
- en: Adding a TableLayout
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加TableLayout
- en: 'Our project will consist of one TableLayout and inside it there are two TableRows.
    By default, when you add a TableLayout, the IDE will include four sets of TableRows.
    Remove two rows by using the XML code editor, the previous app mock-up can provide
    some guidelines to remove the rows not in use. Adjust the TableLayout, so that
    it utilizes all the space of the screen layout, as shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的项目将包含一个TableLayout，内部有两个TableRow。默认情况下，当你添加TableLayout时，IDE将包含四组TableRow。使用XML代码编辑器删除两行，上一个应用程序模拟图可以提供一些指导以删除不使用的行。调整TableLayout，使其利用屏幕布局的所有空间，如下一个截图所示：
- en: '![Adding a TableLayout](img/1103OS-04-05.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![添加TableLayout](img/1103OS-04-05.jpg)'
- en: Inserting a TableLayout
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 插入TableLayout
- en: Adding the image resources
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加图像资源
- en: Copy the images provided in the supplement files for [Chapter 4](ch04.html "Chapter 4. Incorporating
    Multimedia Elements") to the `res/drawable-hdpi` folder through the Windows file
    manager, as shown in the following screenshot. In this exercise, we just provide
    the image resources for `hdpi` drawable. It's always a good practice to prepare
    all the suitable resources for `xhdpi`, `mdpi`, and `ldpi` accordingly. Do not
    forget we have a lot of screen size variant in the Android devices. Currently
    we also do not consider resources for the tablet size devices.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 通过Windows文件管理器将[第4章](ch04.html "第4章. 整合多媒体元素")补充文件中提供的图像复制到`res/drawable-hdpi`文件夹中，如下一个截图所示。在此练习中，我们只为`hdpi`
    drawable提供图像资源。相应地准备`xhdpi`、`mdpi`和`ldpi`的所有适当资源总是一个好习惯。别忘了Android设备中有许多屏幕尺寸变种。目前我们也没有考虑平板尺寸设备的资源。
- en: '![Adding the image resources](img/1103OS-04-06.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![添加图像资源](img/1103OS-04-06.jpg)'
- en: The resources for the drawable
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: drawable的资源
- en: 'Then go to your project explorer (in Eclipse), right-click on `res/drawable-hdpi`
    and click on **Refresh**. The following screenshot shows the appearance of the
    `drawable-hdpi` folder after the image resources have been copied:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 然后进入你的项目资源管理器（在Eclipse中），右键点击`res/drawable-hdpi`并选择**刷新**。以下截图显示了图像资源复制后`drawable-hdpi`文件夹的外观：
- en: '![Adding the image resources](img/1103OS-04-07.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![添加图像资源](img/1103OS-04-07.jpg)'
- en: The resources for the drawable
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: drawable的资源
- en: Adding ImageView
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加ImageView
- en: As shown on the previous screenshot, our app has an image 0 that fills the entire
    screen and to achieve that let's add an ImageView to the first row of the TableLayout.
    Use the no0 image in the drawable folder as the initial image (zero is the first
    number to be displayed). Adjust the width and height of the ImageView to populate
    the screen.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一个截图所示，我们的应用程序有一个图像0，它占据了整个屏幕，为了实现这一点，让我们在TableLayout的第一行添加一个ImageView。使用drawable文件夹中的no0图像作为初始图像（零是要显示的第一个数字）。调整ImageView的宽度和高度以填满屏幕。
- en: '![Adding ImageView](img/1103OS-04-08.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![添加ImageView](img/1103OS-04-08.jpg)'
- en: Adding an ImageView to the app screen
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 向应用屏幕添加ImageView
- en: 'Distribute weight (specifies how much of the extra space in the layout to be
    allocated to the View) evenly to center the widget. Use the button shown in the
    following screenshot to adjust the ImageView to the center of the screen. Do this
    while the ImageView is active (selected):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 平均分配权重（指定布局中额外的空间分配给视图的比例），以使小部件居中。使用以下截图中的按钮调整ImageView到屏幕中心。在ImageView处于激活（选中）状态时进行此操作：
- en: '![Adding ImageView](img/1103OS-04-10.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![添加ImageView](img/1103OS-04-10.jpg)'
- en: Distribute weight evenly
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 平均分配权重
- en: Adding ImageButtons
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加ImageButton
- en: 'The second row in TableLayout is for the navigation buttons (previous and next)
    and the play sound button. ImageButton is more attractive for this kind of app.
    When you create an ImageButton, you will be asked to choose the image. For the
    first button use the image **prev** from the drawables. The second is **sound**
    and the last one is **next**. These buttons need to be added one at a time, as
    shown in the following screenshot:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: TableLayout的第二行用于导航按钮（上一个和下一个）以及播放声音按钮。对于这种类型的应用程序，ImageButton更具吸引力。创建ImageButton时，系统会要求你选择图像。对于第一个按钮，使用drawables中的**prev**图像。第二个是**sound**，最后一个是**next**。这些按钮需要逐一添加，如下一个截图所示：
- en: '![Adding ImageButtons](img/1103OS-04-09.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![添加ImageButton](img/1103OS-04-09.jpg)'
- en: Adding ImageButtons
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 添加ImageButton
- en: Activate (select) one of the buttons and distribute evenly, as shown in the
    following screenshot. This is to make sure all the buttons are spread evenly across
    the screen's width.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 激活（选择）其中一个按钮并平均分布，如下面的截图所示。这是为了确保所有按钮均匀分布在屏幕宽度上。
- en: '![Adding ImageButtons](img/1103OS_04_00.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![添加ImageButton](img/1103OS_04_00.jpg)'
- en: Distribute weight of the ImageButtons evenly
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 平均分配ImageButton的权重
- en: And if you prefer, change the background of your screen. A background image
    has been prepared for you; it is in the drawables and is named **bglight**. Activate
    the main layout by clicking on the app title/logo on the app screen. Change the
    background properties by clicking on the three dots button on the right-side of
    the attributes. Later, you may add the **btninfo** button to display the app's
    information.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意，可以更改屏幕的背景。已经为你准备了一个背景图像；它在drawables文件夹中，名为**bglight**。通过点击应用屏幕上的应用标题/标志来激活主布局。点击属性右侧的三点按钮来更改背景属性。稍后，你可以添加**btninfo**按钮来显示应用信息。
- en: Assigning the widget's ID
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分配小部件的ID
- en: 'There are basically one ImageView and three ImageButtons. To change the ImageView
    ID, select it and go to the widget properties on the right-side. Click on the
    three dots button on the **Id** attribute. Change the ID of the ImageView to **imagenumber**,
    as shown in the following screenshot:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上有一个ImageView和三个ImageButton。要更改ImageView的ID，选择它并转到右侧的小部件属性。点击**Id**属性上的三点按钮。将ImageView的ID更改为**imagenumber**，如下面的截图所示：
- en: '![Assigning the widget''s ID](img/1103OS-04-11.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![分配小部件的ID](img/1103OS-04-11.jpg)'
- en: Changing the widget's ID through the Property window
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过属性窗口更改小部件的ID
- en: 'After that, change all the IDs of all the buttons to **btnprevious**, **btninfo**,
    **btnsound**, and **btnnext**. Use the following table as a guide:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，将所有按钮的ID更改为**btnprevious**、**btninfo**、**btnsound**和**btnnext**。以下表格可作为指南：
- en: '| Widget | ID |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 小部件 | ID |'
- en: '| --- | --- |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| ImageView | imagenumber |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| ImageView | imagenumber |'
- en: '| Left most button | btnprevious |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| 最左边的按钮 | btnprevious |'
- en: '| Display app info | btninfo |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| 显示应用信息 | btninfo |'
- en: '| Play sound button | btnsound |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| 播放声音按钮 | btnsound |'
- en: '| Right most button | btnnext |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| 最右边的按钮 | btnnext |'
- en: 'Finally, you will get the screen, as shown here:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将得到如下所示的屏幕：
- en: '![Assigning the widget''s ID](img/1103OS-04-12.jpg)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![分配小部件的ID](img/1103OS-04-12.jpg)'
- en: The whole layout design of the main activity
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 主活动的设计布局
- en: 'The following XML code is available through the XML editor in the tab `activity_simple_numb3rs.xml`
    across the **Graphical Layout** tab:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 以下XML代码可以通过**Graphical Layout**标签中的XML编辑器在`activity_simple_numb3rs.xml`标签中找到：
- en: '[PRE0]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: ImageButtons and handling event
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ImageButton和处理事件
- en: 'This is where we code the ImageButtons click events. Open the Java source code
    from `src/net.kerul.simplenumb3r5/SimpleNumb3r5.java`. Here, we will be discussing
    the main activity class that will provide the screen navigation with the following
    code:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们将编写ImageButton的点击事件。打开`src/net.kerul.simplenumb3r5/SimpleNumb3r5.java`中的Java源代码。这里，我们将讨论主要活动类，它将使用以下代码提供屏幕导航：
- en: '[PRE1]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The main class, as usual, will inherit the `Activity` class, and implement `OnClickListener`
    to enable the widget interaction.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 主类通常继承`Activity`类，并实现`OnClickListener`以启用小部件交互。
- en: 'The main variable declarations are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 主要变量声明如下：
- en: '[PRE2]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Widget objects are `imagenumber` as for the container to display the number
    of images, and we have `btnprevious`, `btnsound`, and `btnnext` for the buttons.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 小部件对象是用于显示图像数量的容器`imagenumber`，以及按钮`btnprevious`、`btnsound`和`btnnext`。
- en: The `screennumber` is the variable to keep a track of the current screen position;
    initially it is given the value 0 because we have a list of numbers that start
    from zero (0).
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '`screennumber`是跟踪当前屏幕位置的变量；最初它被赋予0的值，因为我们有一个从零（0）开始的数字列表。'
- en: The sound controller object is named `mp`, and the string array named `soundfile`
    is the list of all the recordings of the spoken numbers from zero to nine.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 声音控制器对象名为`mp`，字符串数组`soundfile`是零到九的口语数字录音列表。
- en: 'The `onCreate` method is the place where all the widgets are initialized and
    linked together in a view, as follows:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '`onCreate`方法是在其中初始化所有小部件并将它们在视图中连接在一起的地方，如下所示：'
- en: '[PRE3]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, we have the `onClick` method to handle the navigation interactions. What
    we do here is basically disabling the `btnprevious` button if the `screennumber`
    is 0, and enabling it on for `screennumber` more than 0\. `btnnext` will also
    be disabled if the `screennumber` value is 9, on when less than 9\. These are
    to prevent runtime errors when the user trying to access that is less than 0 or
    more than 9\. The `btnsound` value is currently ignored; it will be discussed
    later when we deal with sounds (that is, playing of sound/audio).
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们有`onClick`方法来处理导航交互。这里的基本操作是如果`screennumber`为0，则禁用`btnprevious`按钮，如果`screennumber`大于0则启用。如果`screennumber`的值为9，则禁用`btnnext`，如果小于9则启用。这是为了防止用户尝试访问小于0或大于9的值时出现运行时错误。`btnsound`的值目前被忽略；我们将在处理声音（即播放声音/音频）时再讨论。
- en: '[PRE4]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'There is an additional method to switch the image of the numbers. The `R.id.imagefile`
    is the representation of the actual drawable image resources. Since we have 10
    images altogether, and `R.id` returns `int`, so we can use the switch case 10
    times as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一种方法可以切换数字的图片。`R.id.imagefile`是实际可绘制图像资源的表示。因为我们总共有10张图片，而`R.id`返回的是`int`类型，所以我们可以按照如下方式使用switch
    case 10次：
- en: '[PRE5]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Adding audio
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加音频
- en: 'Before doing this exercise, copy all the sound resources to the `assets` folder.
    You may do this by copying all the mp3 files to the `assets` folder through the
    `File Manager`, as shown in the following screenshot:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在进行这个练习之前，将所有声音资源复制到`assets`文件夹中。你可以通过`文件管理器`将所有mp3文件复制到`assets`文件夹中，如下面的截图所示：
- en: '![Adding audio](img/1103OS-04-13.jpg)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![添加音频](img/1103OS-04-13.jpg)'
- en: Copy the MP3 files to the folder assets
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 将MP3文件复制到assets文件夹。
- en: Add code for `btnsound` in the `onClick` method. Add the following lines so
    that when the `btnplay` button is clicked, it will execute the method named `playSound()`.
    This method will receive a string argument as the value of the sound file name
    to be played.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 在`onClick`方法中为`btnsound`添加代码。添加以下几行，以便当点击`btnplay`按钮时，执行名为`playSound()`的方法。这个方法将接收一个字符串参数，作为要播放的声音文件名。
- en: The `soundfile` array variable is the variable that stores the list of the mp3
    filenames, while the `screennumber` indicates the current number on the screen.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '`soundfile`数组变量是存储mp3文件名列表的变量，而`screennumber`表示屏幕上的当前数字。'
- en: '[PRE6]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The next important method is the `playsound` method. This method will play an
    mp3 sound file. The `soundname` parameter is the string that contains the sound
    file name which resides in the `assets` folder of the Android project.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个重要的方法是`playsound`方法。这个方法将播放一个mp3声音文件。`soundname`参数是包含位于Android项目的`assets`文件夹中的声音文件名的字符串。
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The following is the explanation of the variables and processes involved:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是涉及到的变量和过程的解释：
- en: '`try…catch block`: This is an exception handler, whose purpose is to enclose
    the code that might throw an exception. In this case the exception is to try to
    catch any problem while trying to play the sound file using `MediaPlayer`. If
    you notice, the catch block is the statement that will be executed if a certain
    code execution causes an exception.'
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`try…catch块`: 这是一个异常处理程序，其目的是包围可能抛出异常的代码。在本例中，异常是尝试使用`MediaPlayer`播放声音文件时捕捉任何问题。如果你注意，如果某个代码执行导致异常，将执行catch块语句。'
- en: '`mp` is the object instantiated from the class `MediaPlayer`.'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`mp`是从`MediaPlayer`类实例化的对象。'
- en: '`isPlaying()`: Checks whether the `MediaPlayer` is playing, `True` is playing
    whereas `false` is otherwise'
  id: totrans-99
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`isPlaying()`: 检查`MediaPlayer`是否正在播放，`True`表示正在播放，`false`表示未播放。'
- en: '`setDataSource()`: Sets the data source to be used. In this case, the data
    source is `FileDescriptor`'
  id: totrans-100
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setDataSource()`: 设置将要使用的数据源。在本例中，数据源是`FileDescriptor`。'
- en: '`prepare()`: Prepares the player for playback, synchronously'
  id: totrans-101
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prepare()`: 同步准备播放器进行播放。'
- en: '`play()`: Plays the sound file'
  id: totrans-102
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`play()`: 播放声音文件。'
- en: '`stop()`: Stops the current sound playing'
  id: totrans-103
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`stop()`: 停止当前正在播放的声音。'
- en: '`release()`: Releases the sound from the memory'
  id: totrans-104
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`release()`: 从内存中释放声音。'
- en: '`afd` is a variable instantiated from the class `AssetFileDescriptor`.'
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`afd`是从`AssetFileDescriptor`类实例化的变量。'
- en: '`getAssets()`: Retrieves the underlying resources (from the `assets` folder)
    via the `AssetManager` API'
  id: totrans-106
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getAssets()`: 通过`AssetManager` API从`assets`文件夹中获取底层资源。'
- en: '`openFD()`: Opens the file specified in the `String` argument'
  id: totrans-107
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`openFD()`: 打开`String`参数中指定的文件。'
- en: '`getFileDescriptor()`: Returns the `FileDescriptor` data source that can be
    used to read the data in the file'
  id: totrans-108
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getFileDescriptor()`: 返回可以用来读取文件中数据的`FileDescriptor`数据源。'
- en: '`getStartOffSet()`: Returns the byte offset where this asset entry''s data
    starts'
  id: totrans-109
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getStartOffSet()`: 返回此资产条目数据开始的字节偏移量'
- en: '`getLength()`: Returns the total number of bytes of this asset entry''s data'
  id: totrans-110
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`getLength()`: 返回此资产条目数据的总字节数'
- en: Adding another screen in the app
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在应用中添加另一个屏幕
- en: 'This exercise is to add an information screen on the `SimpleNumb3r5` app. The
    information regarding the developer, email, Facebook fan page, and other information
    is displayed in the next screen. Since the screen contains a lot of text information
    including several pictures, so we make use of an HTML page as our approach here:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 这个练习是在`SimpleNumb3r5`应用中添加一个信息屏幕。关于开发者、电子邮件、Facebook粉丝页面和其他信息将在下一个屏幕上显示。由于屏幕包含大量文本信息，包括几幅图片，因此我们在这里使用HTML页面作为我们的方法：
- en: Now, create an activity class to handle the new screen. Open the `src` folder,
    right-click on the package name (`net.kerul.SimpleNumb3r5`), and choose **New**
    | **Other...** From the selections, choose to add a new Android activity, and
    click on the **Next** button. Then, choose a blank activity and click on **Next**.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，创建一个活动类来处理新屏幕。打开`src`文件夹，右键点击包名（`net.kerul.SimpleNumb3r5`），选择**New** | **Other...**。在选项中，选择添加新的Android活动，然后点击**Next**按钮。接着，选择一个空白活动并点击**Next**。
- en: Set the activity name as **Info**, as shown in the following screenshot and
    the wizard will suggest the screen layout as **info_activity**. Click on the **Finish**
    button.![Adding another screen in the app](img/1103OS-04-14.jpg)
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将活动名称设置为**Info**，如下截图所示，向导将建议屏幕布局为**info_activity**。点击**Finish**按钮。![在应用中添加另一个屏幕](img/1103OS-04-14.jpg)
- en: Creating a new activity named Info
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 创建一个名为Info的新活动
- en: A blank new screen layout will appear. Remove the `HelloWorld` TextView (that
    comes with default). On the **Palette** panel, open the folder named `Composite`.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将出现一个新的空白屏幕布局。移除默认的`HelloWorld`TextView。在**Palette**面板中，打开名为`Composite`的文件夹。
- en: Click and drag the WebView widget. Change the ID of WebView to `webinfo`. This
    layout will be saved in the file `info_activity.xml`.![Adding another screen in
    the app](img/1103OS-04-15.jpg)
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击并拖动WebView小部件。将WebView的ID更改为`webinfo`。此布局将保存在`info_activity.xml`文件中。![在应用中添加另一个屏幕](img/1103OS-04-15.jpg)
- en: Adding a WebView widget
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加一个WebView小部件
- en: Adding HTML to WebView
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在WebView中添加HTML
- en: Create an HTML page using your favorite web editor, or you may just reuse the
    HTML page in the resources provided (in the `assets` folder, file name `info.html`).
    The HTML page, as shown in the following screenshot, is a simple HTML page that
    contains the app information. If you find that the HTML is too simple, do add
    your own information. In this exercise, we will put the HTML pages and the resources
    inside the `assets` folder, hence before proceeding, copy all the related materials
    of the HTML page into the `assets` folder.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 使用您喜欢的网页编辑器创建一个HTML页面，或者您可以重复使用提供的资源中的HTML页面（在`assets`文件夹中，文件名为`info.html`）。如下截图所示的HTML页面是一个包含应用信息的简单HTML页面。如果您发现HTML过于简单，请添加您自己的信息。在这个练习中，我们将把HTML页面和资源放在`assets`文件夹中，因此在继续之前，请将HTML页面的所有相关材料复制到`assets`文件夹中。
- en: '![Adding HTML to WebView](img/1103OS-04-16.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![在WebView中添加HTML](img/1103OS-04-16.jpg)'
- en: The HTML page in info.html
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '`info.html`中的HTML页面'
- en: 'Next is to edit the source code for `Info.java` that resides in the folder
    `src/net.kerul.simplenumb3r5`. Add the following code to the existing template:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是编辑位于`src/net.kerul.simplenumb3r5`文件夹中的`Info.java`源代码。在现有模板中添加以下代码：
- en: '[PRE8]'
  id: totrans-124
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Let''s understand the following lines of code added to the template above:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们理解一下添加到上述模板中的以下代码行：
- en: '`setContentView(R.layout.activity_info)`: `R.layout.activity_info` is referring
    to the layout created previously.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`setContentView(R.layout.activity_info)`: `R.layout.activity_info`是指之前创建的布局。'
- en: '`webinfo.loadUrl("file:///android_asset/info.html")`: This is the method to
    load an HTML page from a specific URL. The path to point to an HTML file inside
    the `assets` folder is `file:///android_asset/info.html`. This path cannot be
    found on a real device, however it provides access to the `app asset` files.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`webinfo.loadUrl("file:///android_asset/info.html")`: 这是加载特定URL的HTML页面的方法。指向`assets`文件夹内HTML文件的路径是`file:///android_asset/info.html`。这个路径在真实设备上找不到，但它提供了访问`app
    asset`文件的方法。'
- en: Intent and Activity
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 意图和活动
- en: Intent is an abstract description of an operation to be performed. To be more
    specific, it is an asynchronous call which allows the application to request functionality
    from other Android components, for example, services/activities. It can be used
    with the `startActivity()` command to launch an activity. The previous code in
    `SimpleNumb3r5.java` is the main activity (or class) for this application. We've
    just created the second activity (class) in the file `Info.java`. In order for
    the second activity to appear, it has to be started using an intent.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 意图是对将要执行的操作的抽象描述。更具体地说，它是一个异步调用，允许应用程序从其他Android组件（例如服务/活动）请求功能。它可以与`startActivity()`命令一起使用来启动一个活动。在`SimpleNumb3r5.java`中的先前代码是此应用程序的主活动（或类）。我们刚刚在文件`Info.java`中创建了第二个活动（类）。为了让第二个活动出现，必须使用意图来启动它。
- en: We have decided to use the button `btninfo` as the trigger to invoke the second
    activity. Again, open the file `SimpleNumb3r5.java` and add the following lines
    to invoke another activity. These lines must be added to the `btninfo` button's
    `onClick` method. Notice that an instance of `Intent` is created as info. The
    main class is able to call the second class using the `startActivity()` method.
    The `Info.class` argument is referring to the second class.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 我们决定使用按钮`btninfo`作为触发器来调用第二个活动。再次打开文件`SimpleNumb3r5.java`，并添加以下代码以调用另一个活动。这些代码必须添加到`btninfo`按钮的`onClick`方法中。注意，这里创建了一个名为info的`Intent`实例。主类能够使用`startActivity()`方法调用第二个类。`Info.class`参数指的是第二个类。
- en: '[PRE9]'
  id: totrans-131
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'In order to call the second class through `Intent`, the `Manifest.xml` files
    need to be modified. However, you will notice that this has been done automatically
    by the **Android Development Toolkits** since Version 20\. In case the following
    lines are missing in `AndroidManifest.xml` please add it manually:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 为了通过`Intent`调用第二个类，需要修改`Manifest.xml`文件。但是，你会注意到从版本20开始，**Android开发工具包**已经自动完成了这一步。如果`AndroidManifest.xml`中缺少以下代码，请手动添加：
- en: '[PRE10]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'Should you need to display a webpage from the Internet in the WebView, you
    must declare the user permission by adding this line in `AndroidManifest.xml`
    above the `<application>` tag as follows:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你需要在WebView中显示来自互联网的网页，你必须在`AndroidManifest.xml`中的`<application>`标签上方添加以下这行代码来声明用户权限：
- en: '[PRE11]'
  id: totrans-135
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The final product run and test
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最终产品的运行和测试
- en: 'After all the processes we have gone through, run the app in the emulator and
    you''ll get the following screen:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在经历了所有这些过程之后，在模拟器中运行应用程序，你将得到以下屏幕：
- en: '![The final product run and test](img/1103OS-04-17.jpg)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![最终产品的运行和测试](img/1103OS-04-17.jpg)'
- en: SimpleNumb3r5 in action
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '`SimpleNumb3r5`实战'
- en: Summary
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we have explored a simple approach to incorporate several multimedia
    elements, such as image, an HTML page, and voice. The latest SDK is much more
    user friendly than any of the previous versions.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探索了一种简单的方法来整合多个多媒体元素，如图片、HTML页面和语音。最新的SDK比之前的任何版本都要用户友好。
- en: In the next chapter, we will learn more about the different widgets, such as
    menu, checkbox, radio button, and also about adding the preference screen.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将了解更多关于不同小部件的知识，如菜单、复选框、单选按钮，以及如何添加偏好设置屏幕。
