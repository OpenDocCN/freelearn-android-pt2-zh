- en: Chapter 3. Social APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章. 社交API
- en: New Social APIs have been introduced with Android Ice Cream Sandwich and this
    API makes it easy to integrate social networks. Furthermore, high resolution photos
    could be used as contact photos after Android Ice Cream Sandwich was released.
    This chapter shows Social API usage with examples.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 随着Android Ice Cream Sandwich的推出，引入了新的社交API，这个API使得集成社交网络变得简单。此外，在Android Ice
    Cream Sandwich发布后，可以使用高分辨率照片作为联系人照片。本章通过示例展示了社交API的使用。
- en: 'The topics covered in this chapter are as follows:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章涵盖的主题如下：
- en: Basics of contacts in Android
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android中的联系人基础
- en: Using the Social API
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用社交API
- en: Basics of contacts in Android
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Android中的联系人基础
- en: 'A person may have multiple contact information details. In Android, these multiple
    contact information details are joined and displayed as one contact detail. For
    instance; a person may have a Google+ contact, a Skype contact, and a phone contact,
    and Android joins all these contacts into one contact. Each of these sources of
    contacts is **RawContact**. Each RawContact has one or more data row, which holds
    some data about the contact such as phone number, e-mail, and so on. Refer to
    the following block diagram for a better understanding of their relationship:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一个人可能有多个联系人信息详情。在Android中，这些多个联系人信息详情被合并并显示为一个联系人详情。例如；一个人可能有一个Google+联系人，一个Skype联系人，以及一个电话联系人，Android将这些联系人全部合并为一个联系人。这些联系人的每个来源都是**RawContact**。每个RawContact有一个或多个数据行，它们保存有关联系人的某些数据，如电话号码、电子邮件等。参考以下框图可以更好地理解它们之间的关系：
- en: '![Basics of contacts in Android](img/9526OS_03_01.jpg)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![Android中的联系人基础](img/9526OS_03_01.jpg)'
- en: 'Each RawContact has support for storing social network streams—texts and photos—with
    Android Ice Cream Sandwich. Each RawContact is associated with **StreamItems**
    which contains texts, timestamp, and comments from social media updates, such
    as Google+, and each StreamItem is associated with **StreamItemPhotos** which
    contains photos (such as photos in a Google+ post). However, there is a limit
    for the number of StreamItems stored in RawContact. This number can be fetched
    with a query with `StreamItems.CONTENT_LIMIT_URI URI`. When the number exceeds
    the limit, the stream item with the oldest time stamp is removed. The following
    block diagram depicts the relationship between these blocks:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 每个 RawContact 在Android Ice Cream Sandwich中都支持存储社交网络流——文本和照片。每个RawContact都与**StreamItems**相关联，其中包含来自社交媒体更新的文本、时间戳和评论，如Google+，每个StreamItem都与包含照片的**StreamItemPhotos**相关联（如Google+帖子中的照片）。然而，存储在RawContact中的StreamItems数量是有限制的。这个数字可以通过查询`StreamItems.CONTENT_LIMIT_URI
    URI`获取。当数量超过限制时，将移除时间戳最旧的流项目。以下框图描述了这些块之间的关系：
- en: '![Basics of contacts in Android](img/9526OS_03_02.jpg)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![Android中的联系人基础](img/9526OS_03_02.jpg)'
- en: Using Social API
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用社交API
- en: 'In the following example, we are going to show how to add **StreamItem** and
    then how to display added StreamItems. Firstly, we inserted two buttons into the
    user interface, one for triggering an insert and one for listing StreamItems.
    In order to display StreamItems, we put three `TextView` components in the layout.
    The layout XML should look like the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下示例中，我们将展示如何添加**StreamItem**，以及如何显示已添加的StreamItems。首先，我们在用户界面中插入了两个按钮，一个用于触发插入操作，另一个用于列出StreamItems。为了显示StreamItems，我们在布局中放置了三个`TextView`组件。布局XML应如下所示：
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will implement the `Activity` class step-by-step that firstly adds a contact
    and then adds `StreamItems` and displays them. The `Activity` class with the `onCreate()`
    method is shown in the following code block:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将逐步实现`Activity`类，首先添加一个联系人，然后添加`StreamItems`并显示它们。带有`onCreate()`方法的`Activity`类如下代码块所示：
- en: '[PRE1]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'As you can see in this code, we firstly get instances of `Button` and `TextView`
    in the layout in the `onCreate(Bundle savedInstanceState`) method. The `Chapter3_1Activity`
    class implements `OnClickListener` for the buttons. As you can see in the `onClick(View
    v)` method, when the **Insert** button is clicked, the `addContact()` method is
    called. The `addContact()` method is defined as follows:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如您在此代码中看到的，我们首先在`onCreate(Bundle savedInstanceState)`方法中获取布局中的`Button`和`TextView`实例。`Chapter3_1Activity`类为按钮实现了`OnClickListener`。如您在`onClick(View
    v)`方法中看到的，当点击**Insert**按钮时，会调用`addContact()`方法。`addContact()`方法定义如下：
- en: '[PRE2]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the `addContact()` method, firstly a RawContact is created with the `addRawContact()`
    method. In the `addRawContact()` method, we use `accountName` and `accountType`
    to create a raw contact. The `addRawContact()` method is defined as follows:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在`addContact()`方法中，首先使用`addRawContact()`方法创建一个RawContact。在`addRawContact()`方法中，我们使用`accountName`和`accountType`来创建原始联系人。`addRawContact()`方法的定义如下：
- en: '[PRE3]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'After the raw contact is created, we use the ID of the created raw contact
    in creating the name, e-mail, phone number, and StreamItems. `addName()`, `addEmail()`,
    and `addPhoneNumber()` methods are using `ContentValues` class to create the name,
    e-mail, and phone number data as shown in the following code block:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 创建原始联系人后，我们使用创建的原始联系人ID来创建姓名、电子邮件、电话号码和StreamItems。`addName()`，`addEmail()`和`addPhoneNumber()`方法使用`ContentValues`类来创建姓名、电子邮件和电话号码数据，如下代码块所示：
- en: '[PRE4]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the `addContactStreamItem()` method, we create the StreamItems. We provide
    the raw contact ID, text of the StreamItem, time stamp in milliseconds in which
    the StreamItem is created, account name, and type to create StreamItems. Raw contact
    ID, account name, and type are required fields for creating a StreamItem. The
    `addContactStreamItem()` method is defined as follows:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在`addContactStreamItem()`方法中，我们创建StreamItems。我们提供了原始联系人ID、StreamItem的文本、StreamItem创建时的时间戳（毫秒）、账户名称和类型来创建StreamItems。原始联系人ID、账户名称和类型是创建StreamItem所需的必填字段。`addContactStreamItem()`方法的定义如下：
- en: '[PRE5]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `addContactStreamPhoto()` method is used for creating StreamItemPhotos
    for a StreamItem. We have to provide a photo in binary, or `PHOTO_FILE_ID`, or
    `PHOTO_URI`. As you can see in the following code block, we used a drawable to
    create a photo in binary using `loadPhotoFromResource` and `readInputStream` methods.
    We also provide the StreamItem ID, sort index, account name, and type for creating
    a stream photo. If we don''t provide a sort index, the ID column will be used
    for sorting. The `addContactStreamPhoto()` method is defined as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`addContactStreamPhoto()`方法用于为StreamItem创建StreamItemPhotos。我们必须提供二进制格式的照片，或者`PHOTO_FILE_ID`，或者`PHOTO_URI`。正如以下代码块所示，我们使用了`loadPhotoFromResource`和`readInputStream`方法从资源中加载并创建二进制照片。我们还提供了StreamItem
    ID、排序索引、账户名称和类型以创建流照片。如果我们不提供排序索引，将使用ID列进行排序。`addContactStreamPhoto()`方法的定义如下：'
- en: '[PRE6]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'When the **List** button is clicked, the `getStreams()` method is called. As
    you can see in the following code, in the `getStream()` method, we firstly retrieve
    the `contactId` details of the raw contact using the `getContactId()` method.
    Then we use this contact ID in querying StreamItems by passing `contactId` as
    the search parameter. Since we query the StreamItems, `ContactsContract.StreamItems.CONTENT_URI`
    is used as the URI. Lastly, StreamItems are retrieved with a cursor and texts
    of StreamItems are displayed in TextViews. The `getStreams()` method and the `getContactId()`
    method are defined as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击**列表**按钮时，会调用`getStreams()`方法。正如以下代码所示，在`getStream()`方法中，我们首先使用`getContactId()`方法获取原始联系人的`contactId`详情。然后我们使用这个联系人ID作为查询参数来查询StreamItems。由于我们查询的是StreamItems，因此使用`ContactsContract.StreamItems.CONTENT_URI`作为URI。最后，使用游标检索StreamItems，并在TextViews中显示StreamItems的文本。`getStreams()`方法和`getContactId()`方法的定义如下：
- en: '[PRE7]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Lastly, we need some permissions for reading and writing social streams and
    contacts: `READ_SOCI` `AL_STREAM`, `WRITE_SOCIAL_STREAM, READ_CONTACTS`, and `WRITE_CONTACTS`.
    Furthermore, we have to set the minimum SDK to the API Level 15 in order to use
    Social APIs. The `AndroidManifest.xml` file should look like the following code
    block:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们需要一些权限来读取和写入社交流和联系人：`READ_SOCI` `AL_STREAM`，`WRITE_SOCIAL_STREAM, READ_CONTACTS`和`WRITE_CONTACTS`。此外，为了使用社交API，我们必须将最小SDK设置为API
    Level 15。`AndroidManifest.xml`文件应如下代码块所示：
- en: '[PRE8]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'When we execute the application in the emulator, click the **Insert** button
    and then click the **List** button; the screen will look like the following:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们在模拟器中执行应用程序时，点击**插入**按钮，然后点击**列表**按钮；屏幕将如下所示：
- en: '![Using Social API](img/9526_03_03.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![使用社交API](img/9526_03_03.jpg)'
- en: 'When you execute the `People` app in the emulator, you will see that the contact
    named **Murat Aydın** is created as seen in the following screenshot:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在模拟器中执行`人员`应用时，您会看到名为**Murat Aydın**的联系人已创建，如下截图所示：
- en: '![Using Social API](img/9526_03_04.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![使用社交API](img/9526_03_04.jpg)'
- en: 'You will also see the recent social network updates with photos that we created
    programmatically:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您还将看到我们以编程方式创建的包含照片的最新社交网络更新：
- en: '![Using Social API](img/9526_03_05.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![使用社交API](img/9526_03_05.jpg)'
- en: Device user profile
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设备用户资料
- en: 'Starting from API Level 14, Android displays the device user profile at the
    top of the contacts as **ME** as seen in the following screen:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 从API级别14开始，Android将在联系人列表顶部显示设备用户资料，标记为**我**，如下屏幕所示：
- en: '![Device user profile](img/9526_03_06.jpg)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![设备用户资料](img/9526_03_06.jpg)'
- en: '`ContactsContract.Profile. CONTENT_URI and ContactsContract.Profile.CONTENT_RAW_CONTACTS_URI`
    URIs could be used in order to read and write the device user profile. Operations
    are similar to reading and writing a contact except that `READ_PROFILE` and `WRITE_PROFILE`
    permissions are needed in the `AndroidManifest.xml` file.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 `ContactsContract.Profile.CONTENT_URI` 和 `ContactsContract.Profile.CONTENT_RAW_CONTACTS_URI`
    URI来读取和写入设备用户资料。操作与读取和写入联系人相似，但需要在 `AndroidManifest.xml` 文件中拥有 `READ_PROFILE`
    和 `WRITE_PROFILE` 权限。
- en: Summary
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Integration of contacts and social networks became easier with the new Social
    APIs introduced with Android Ice Cream Sandwich. `StreamItems` and `StreamItemPhotos`
    classes are used for storing social network updates to be stored in contacts.
    In this chapter, we learned how to use these classes. Furthermore, we learned
    the device user profile that displays the contact information of the device user.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 新的社交API随Android Ice Cream Sandwich一同引入，使得联系人和社会网络的整合变得更加简单。`StreamItems` 和 `StreamItemPhotos`
    类用于存储要保存在联系人中的社交网络更新。在本章中，我们学习了如何使用这些类。此外，我们还学习了设备用户资料，它显示设备用户联系信息。
- en: New APIs have been introduced with Android Ice Cream Sandwich for managing calendars.
    In the next chapter, we will learn the new Calendar API and how to use it.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Android Ice Cream Sandwich引入了新的API来管理日历。在下一章中，我们将学习新的日历API及其使用方法。
