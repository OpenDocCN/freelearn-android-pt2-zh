["```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;public Font fontDefault32Bold;\n    public Text countingText;\n    public int countingInt = 0;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n        ScreenOrientation.LANDSCAPE_SENSOR,\n        new FillResolutionPolicy(), new Camera(0, 0, \n        cameraWidth, cameraHeight)).setWakeLockOptions(\n        WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      fontDefault32Bold = FontFactory.create(\n        mEngine.getFontManager(),\n        mEngine.getTextureManager(), 256, 256,\n        Typeface.create(Typeface.DEFAULT, Typeface.BOLD),\n        32f, true, Color.BLACK_ARGB_PACKED_INT);\n      fontDefault32Bold.load();\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      countingText = new Text(400f, 240f,\n        fontDefault32Bold, \"0\", 10,\n        this.getVertexBufferObjectManager());\n      mScene.attachChild(countingText);\n      mScene.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          countingInt++;\n          countingText.setText(\n            String.valueOf(countingInt));\n        }\n        @Override public void reset() {}\n      });\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```", "```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;\n    public Font fontDefault32Bold;\n    public Text countingText;\n    public int countingInt = 0;\n    public Entity blankEntity;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n        ScreenOrientation.LANDSCAPE_SENSOR,\n        new FillResolutionPolicy(), new Camera(0, 0, \n        cameraWidth, cameraHeight)).setWakeLockOptions(\n        WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      fontDefault32Bold = FontFactory.create(\n        mEngine.getFontManager(),\n        mEngine.getTextureManager(), 256, 256,\n        Typeface.create(Typeface.DEFAULT, Typeface.BOLD),\n        32f, true, Color.BLACK_ARGB_PACKED_INT);\n      fontDefault32Bold.load();\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      countingText = new Text(400f, 240f,\n        fontDefault32Bold, \"0\", 10,\n        this.getVertexBufferObjectManager());\n      mScene.attachChild(countingText);\n      blankEntity = new Entity();\n      blankEntity.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          countingInt++;\n          countingText.setText(\n            String.valueOf(countingInt));\n        }\n        @Override public void reset() {}\n      });\n      mScene.setOnSceneTouchListener(this);\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```", "```kt\n    @Override\n    public boolean onSceneTouchEvent(Scene pScene,\n        TouchEvent pSceneTouchEvent) {\n      if(pSceneTouchEvent.isActionDown() && \n          !blankEntity.hasParent())\n        mScene.attachChild(blankEntity);\n      return true;\n    }\n    ```", "```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;\n    public Font fontDefault32Bold;\n    public Text countingText;\n    public int countingInt = 0;\n    public boolean performanceIntensiveLoop = true;\n    public double performanceHeavyVariable;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n        ScreenOrientation.LANDSCAPE_SENSOR,\n        new FillResolutionPolicy(), new Camera(0, 0, \n        cameraWidth, cameraHeight)).setWakeLockOptions(\n        WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      fontDefault32Bold = FontFactory.create(\n        mEngine.getFontManager(),\n        mEngine.getTextureManager(), 256, 256,\n        Typeface.create(Typeface.DEFAULT, Typeface.BOLD),\n        32f, true, Color.BLACK_ARGB_PACKED_INT);\n      fontDefault32Bold.load();\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      countingText = new Text(400f, 240f, \n        fontDefault32Bold, \"0\", 10,\n        this.getVertexBufferObjectManager());\n      mScene.attachChild(countingText);\n      mScene.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          if(performanceIntensiveLoop) {\n            countingInt++;\n            for(int i = 3; i < 1000000; i++)\n            performanceHeavyVariable = \n              Math.sqrt(i);\n          } else {\n            countingInt--;\n          }\n          countingText.setText(\n            String.valueOf(countingInt));\n        }\n        @Override public void reset() {}\n      });\n      mScene.setOnSceneTouchListener(this);\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```", "```kt\n    @Override\n    public boolean onSceneTouchEvent(Scene pScene, TouchEvent \n        pSceneTouchEvent) {\n      if(pSceneTouchEvent.isActionDown())\n        performanceIntensiveLoop = !performanceIntensiveLoop;\n      return true;\n    }\n    ```", "```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;\n    public Rectangle spinningRect;\n    public float totalElapsedSeconds = 0f;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n        ScreenOrientation.LANDSCAPE_SENSOR,\n        new FillResolutionPolicy(), new Camera(0, 0, \n        cameraWidth, cameraHeight)).setWakeLockOptions(\n        WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      spinningRect = new Rectangle(400f, 240f, 100f, 20f,\n        this.getVertexBufferObjectManager());\n      spinningRect.setColor(Color.BLACK);\n      spinningRect.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          spinningRect.setRotation(\n            spinningRect.getRotation()+0.4f);\n          totalElapsedSeconds += pSecondsElapsed;\n          if(totalElapsedSeconds > 5f) {\n            runOnUpdateThread(new Runnable() {\n              @Override\n              public void run() {\n                spinningRect.detachSelf();\n              }});\n          }\n        }\n        @Override public void reset() {}\n      });\n      mScene.attachChild(spinningRect);\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```", "```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;\n    public Font fontDefault32Bold;\n    public Text countingText;\n    public float EndingTimer = 10f;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n        ScreenOrientation.LANDSCAPE_SENSOR,\n        new FillResolutionPolicy(), new Camera(0, 0, \n        cameraWidth, cameraHeight)).setWakeLockOptions(\n        WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      fontDefault32Bold = FontFactory.create(\n        mEngine.getFontManager(),\n        mEngine.getTextureManager(), 256, 256,\n        Typeface.create(Typeface.DEFAULT, Typeface.BOLD), \n        32f, true, Color.BLACK_ARGB_PACKED_INT);\n      fontDefault32Bold.load();\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      countingText = new Text(400f, 240f, \n        fontDefault32Bold, \"10\", 10,\n        this.getVertexBufferObjectManager());\n      mScene.attachChild(countingText);\n      mScene.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          EndingTimer-=pSecondsElapsed;\n          if(EndingTimer<=0) {\n            // The timer has ended\n            countingText.setText(\"0\");\n            mScene.unregisterUpdateHandler(this);\n          } else {\n            countingText.setText(String.valueOf(\n              Math.round(EndingTimer)));\n          }\n        }\n        @Override public void reset() {}\n      });\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```", "```kt\n    public static int cameraWidth = 800;\n    public static int cameraHeight = 480;\n    public Scene mScene;\n    public Rectangle spinningRect;\n    ```", "```kt\n    @Override\n    public EngineOptions onCreateEngineOptions() {\n      return new EngineOptions(true, \n      ScreenOrientation.LANDSCAPE_SENSOR,\n      new FillResolutionPolicy(), new Camera(0, 0,\n      cameraWidth, cameraHeight)).setWakeLockOptions(\n      WakeLockOptions.SCREEN_ON);\n    }\n    @Override\n    public void onCreateResources(OnCreateResourcesCallback\n        pOnCreateResourcesCallback) {\n      pOnCreateResourcesCallback.onCreateResourcesFinished();\n    }\n    @Override\n    public void onCreateScene(OnCreateSceneCallback\n        pOnCreateSceneCallback) {\n      mScene = new Scene();\n      mScene.setBackground(new Background(0.9f,0.9f,0.9f));\n      pOnCreateSceneCallback.onCreateSceneFinished(mScene);\n    }\n    ```", "```kt\n    @Override\n    public void onPopulateScene(Scene pScene,\n        OnPopulateSceneCallback pOnPopulateSceneCallback) {\n      spinningRect = new Rectangle(400f, 240f, 100f, 20f,\n        this.getVertexBufferObjectManager());\n      spinningRect.setColor(Color.BLACK);\n      spinningRect.registerUpdateHandler(new IUpdateHandler() {\n        @Override\n        public void onUpdate(float pSecondsElapsed) {\n          spinningRect.setRotation(\n            spinningRect.getRotation() +\n            ((pSecondsElapsed*360f)/2f));\n        }\n        @Override public void reset() {}\n      });\n      mScene.attachChild(spinningRect);\n      pOnPopulateSceneCallback.onPopulateSceneFinished();\n    }\n    ```"]