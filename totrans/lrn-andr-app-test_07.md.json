["```kt\n$ java -jar fitnesse.jar -p 8900\n\n```", "```kt\nBootstrapping FitNesse, the fully integrated standalone wiki and acceptance testing framework.\nroot page: fitnesse.wiki.fs.FileSystemPage at ./FitNesseRoot#latest\nlogger: none\nauthenticator: fitnesse.authentication.PromiscuousAuthenticator\npage factory: fitnesse.html.template.PageFactory\npage theme: fitnesse_straight\nStarting FitNesse on port: 8900\n\n```", "```kt\n| '''My Tests''' |\n| TemperatureConverterTests | ''Temperature Converter Tests'' |\n```", "```kt\n!contents -R2 -g -p -f -h\n\nThis is the !-TemperatureConverterTests SubWiki-!.\n```", "```kt\n!contents\n\n!|TemperatureConverterCelsiusToFahrenheitFixture          |\n|celsius|fahrenheit?                                      |\n|0.0    |~= 32                                            |\n|100.0  |212.0                                            |\n|-1.0   |30.2                                             |\n|-100.0 |-148.0                                           |\n|32.0   |89.6                                             |\n|-40.0  |-40.0                                            |\n|-273.0 |~= -459.4                                        |\n|-273   |~= -459.4                                        |\n|-273   |~= -459                                          |\n|-273   |~= -459.40000000000003                           |\n|-273   |-459.40000000000003                              |\n|-273   |-459.41 < _ < -459.40                            |\n|-274.0 |Invalid temperature: -274.00C below absolute zero|\n```", "```kt\n!define TEST_SYSTEM {slim}\n```", "```kt\npublic class TemperatureConverterCelsiusToFahrenheitFixture {\n    private double celsius;\n    public void setCelsius(double celsius) {\n        this.celsius = celsius;\n    }\n    public String fahrenheit() throws Exception {\n        try {\n            double fahrenheit = TemperatureConverter\n.celsiusToFahrenheit(celsius);\n            return String.valueOf(fahrenheit);\n        } catch (RuntimeException e) {\n            return e.getLocalizedMessage();\n        }\n    }\n}\n```", "```kt\n|import|\n|com.blundell.tut.fitnesse.fixture|\n```", "```kt\n!path /Users/blundell/AndroidApplicationTestingGuide/core/build/classes/test\n!path /Users/blundell/AndroidApplicationTestingGuide/core/build/classes/main\n\n```", "```kt\n$ java -jar /lib/fitnesse.jar -p 8900\n\n```", "```kt\n-|script|\n|given|I'm using the !-TemperatureConverter-!|\n|when |I enter 100 into the Celsius field|\n|then |I obtain 212 in the Fahrenheit field|\n```", "```kt\n|import|\n|org.givwenzen|\n-|script|\n|start|giv wen zen for slim|\n```", "```kt\n!define TEST_SYSTEM {slim}\n\n!path ./target/classes\n!path ./target/examples\n!path ./lib/clover-2.6.1.jar\n!path ./lib/commons-logging.jar\n!path ./lib/commons-vfs-1.0.jar\n!path ./lib/dom4j-1.6.1.jar\n!path ./lib/fitnesse.jar\n!path ./lib/guava-18.0.jar\n!path ./lib/javassist.jar\n!path ./lib/log4j-1.2.9.jar\n!path ./lib/slf4j-simple-1.5.6.jar\n!path ./lib/slf4j-api-1.5.6.jar\n!path ./givwenzen-20150106.jar\n!path /Users/blundell/AndroidApplicationTestingGuide/core/build/classes/test\n!path /Users/blundell/AndroidApplicationTestingGuide/core/build/classes/main\n```", "```kt\n__EXCEPTION__:org.givwenzen.DomainStepNotFoundException:\n\n```", "```kt\n @DomainSteps\n public class StepClass {\n @DomainStep(\"I'm using the TemperatureConverter\")\n public void domainStep() {\n // TODO implement step by invoking your own code\n }\n}\n\n```", "```kt\ntestCompile 'com.github.bernerbits:givwenzen:1.0.6.1'\n```", "```kt\npackage bdd.steps.tc;\n\nimport com.blundell.tut.TemperatureConverter;\n\nimport org.givwenzen.annotations.DomainStep;\nimport org.givwenzen.annotations.DomainSteps;\n\n@DomainSteps\npublic class TemperatureConverterSteps {\n\n    private static final String CELSIUS = \"Celsius\";\n    private static final String FAHRENHEIT = \"Fahrenheit\";\n    private static final String UNIT_NAME \n= \"(\" + CELSIUS + \"|\" + FAHRENHEIT + \")\";\n    private static final String ANY_TEMPERATURE \n= \"([-+]?\\\\d+(?:\\\\.\\\\d+)?)\";\n\n    private double inputTemperature = Double.NaN;\n\n    @DomainStep(\"I(?: a|')m using the TemperatureConverter\")\n    public void createTemperatureConverter() {\n        // do nothing\n    }\n\n    @DomainStep(\"I enter \" + ANY_TEMPERATURE \n + \" into the \" + UNIT_NAME + \" field\")\n    public void setField(double inputTemperature, String unitName) {\n        this.inputTemperature = inputTemperature;\n    }\n\n    @DomainStep(\"I obtain \" + ANY_TEMPERATURE \n  + \" in the \" + UNIT_NAME + \" field\")\n    public boolean verifyConversion(double expectedTemperature, String unitName) {\n        double outputTemperature = convertInputInto(unitName);\n        return Math.abs(outputTemperature - expectedTemperature) < 0.01D;\n    }\n\n    private double convertInputInto(String unitName) {\n        double convertedInputTemperature;\n        if (CELSIUS.equals(unitName)) {\n            convertedInputTemperature = getCelsius();\n        } else if (FAHRENHEIT.equals(unitName)) {\n            convertedInputTemperature = getFahrenheit();\n        } else {\n            throw new RuntimeException(\"Unknown conversion unit\" + unitName);\n        }\n        return convertedInputTemperature;\n    }\n\n    private double getCelsius() {\n        return TemperatureConverter.fahrenheitToCelsius(inputTemperature);\n    }\n\n    private double getFahrenheit() {\n        return TemperatureConverter.celsiusToFahrenheit(inputTemperature);\n    }\n}\n```", "```kt\nI enter 100 into the Celsius field\n```", "```kt\n@DomainStep(\"I enter \" + ANY_TEMPERATURE \n  + \" into the \" + UNIT_NAME + \" field\")\n```", "```kt\npublic void setField(double inputTemperature, String unitName) \n```", "```kt\nAssertions: 1 right, 0 wrong, 0 ignored, 0 exceptions.\n\n```", "```kt\n-|script|\n|given|I am using the !-TemperatureConverter-!             |\n|when |I enter -274 into the Celsius field                 |\n|then |I obtain 'Invalid temperature: -274.00C below absolute zero' exception|\n```", "```kt\n    @DomainStep(\"I obtain '(Invalid temperature: \" + ANY_TEMPERATURE + \" C|F below absolute zero)' exception\")\n    public boolean verifyException(String message, String value, String unit) {\n        try {\n          if ( \"C\".equals(unit) ) {\n            getFahrenheit();\n          } else {\n            getCelsius();\n          }\n        } catch (RuntimeException ex) {\n          return ex.getMessage().contains(message);\n        }\n        return false;\n      }\n```", "```kt\n-|script|\n|given |I'm using the !-TemperatureConverter-!   |\n|when  |I enter -100 into the Celsius field      |\n|then  |I obtain -148 in the Fahrenheit field    |\n\n-|script|\n|given |I'm using the !-TemperatureConverter-!   |\n|when  |I enter -100 into the Fahrenheit field   |\n|then  |I obtain -73.33 in the Celsius field     |\n\n-|script|\n|given|I'm using the !-TemperatureConverter-!          |\n|when |I enter -460 into the Fahrenheit field          |\n|then |I obtain 'Invalid temperature: -460.00F below absolute zero' exception|\n```"]