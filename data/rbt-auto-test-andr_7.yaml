- en: Chapter 7. Other Robotium Utilities
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第7章 其他 Robotium 实用工具
- en: This chapter consists of various utilities present in the Robotium Framework.
    These utilities include the `RobotiumUtils` class, XPath usage, Robotium usage
    for the already installed Android applications, and the signature process involved
    during the application sign-unsign operation to perform tests. Let's see these
    utilities one by one in this chapter.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括 Robotium 框架中的各种实用工具。这些实用工具包括 `RobotiumUtils` 类、XPath 的使用、Robotium 对已安装的
    Android 应用程序的用途，以及在应用程序签名和解签名操作期间涉及的签名过程，以执行测试。让我们逐一了解本章中的这些实用工具。
- en: The RobotiumUtils class
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`RobotiumUtils` 类'
- en: The `RobotiumUtils` class was introduced in the Robotium v4.2\. It contains
    the utility methods. Let's see the API set for the class `RobotiumUtils`.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '`RobotiumUtils` 类在 Robotium v4.2 中引入。它包含实用方法。让我们看看 `RobotiumUtils` 类的 API 集合。'
- en: '![The RobotiumUtils class](img/8010OS_07_01.jpg)'
  id: totrans-4
  prefs: []
  type: TYPE_IMG
  zh: '![`RobotiumUtils` 类](img/8010OS_07_01.jpg)'
- en: API set
  id: totrans-5
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: API 集合
- en: 'The `RobotiumUtils` class provides methods for sorting, ordering, filtering
    views, and so on. The different methods for providing these features are as follows:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: '`RobotiumUtils` 类提供了用于排序、订购、过滤视图等方法。提供这些功能的不同方法如下：'
- en: 'The following method filters the views based on the class passed as a parameter:'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法基于作为参数传递的类过滤视图：
- en: '[PRE0]'
  id: totrans-8
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The following method filters all the views that are not present in the `classSet`
    parameter:'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法过滤掉所有不在 `classSet` 参数中的视图：
- en: '[PRE1]'
  id: totrans-10
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The following method checks if a view matches the `stringToMatch` variable
    and returns the number of matches found:'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法检查视图是否与 `stringToMatch` 变量匹配，并返回找到的匹配数量：
- en: '[PRE2]'
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The following method removes all the views whose visibility is invisible:'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法移除了所有可见性为不可见的视图：
- en: '[PRE3]'
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The following method sorts all the views by their location on the screen:'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法根据屏幕上的位置对所有视图进行排序：
- en: '[PRE4]'
  id: totrans-16
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The following method filters the views collection and returns the views that
    match a specified regular expression.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下面的方法过滤视图集合，并返回与指定正则表达式匹配的视图。
- en: '[PRE5]'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Note
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'You can get more information about these methods from the following link:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下链接获取这些方法的更多信息：
- en: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/RobotiumUtils.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/RobotiumUtils.html)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/RobotiumUtils.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/RobotiumUtils.html)'
- en: XPath API and syntax
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: XPath API 及语法
- en: Web Elements can be located by using an XPath-style expression. This helps testers
    to find the elements of DOM while keeping the tests resistant to the application
    UI. Note that this applies only to Web Elements inside the WebView application.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用类似 XPath 的表达式定位网页元素。这帮助测试人员在保持测试对应用程序 UI 的抵抗力的同时找到 DOM 的元素。请注意，这仅适用于 WebView
    应用程序内的网页元素。
- en: '![XPath API and syntax](img/8010OS_07_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![XPath API 及语法](img/8010OS_07_02.jpg)'
- en: XPath is basically used to navigate through the attributes and elements in an
    XML document. A simple path expression can be used to navigate through XML documents
    using XPath.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: XPath 主要用于在 XML 文档中导航属性和元素。可以使用简单的路径表达式通过 XPath 导航 XML 文档。
- en: 'Let us see a simple example that provides a basic understanding of how XPath
    is to be used:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个简单的例子来了解如何使用 XPath：
- en: 'The following is the XML file that we have to parse using XPath:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们必须使用 XPath 解析的 XML 文件：
- en: '[PRE6]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Suppose you want to extract the names of the authors from the previous XML
    file. The function to do it using XPath is as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你想从上一个 XML 文件中提取作者的名字。使用 XPath 完成此操作的功能如下：
- en: '[PRE7]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'You can find Web Elements by using the following XPath expression example:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用以下 XPath 表达式示例查找网页元素：
- en: '[PRE8]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Robotium for pre-installed applications
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Robotium 用于预装应用程序
- en: Robotium allows writing and running test cases for the pre-installed applications
    in Android. To do this, you need to perform the re-sign operation on the target
    application with the debug key that you are using for the test project. This requires
    access to the `/system/app` folder on the device. To access this folder, you must
    have a rooted device.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium 允许编写和运行针对 Android 上预装应用程序的测试用例。为此，你需要使用测试项目的调试密钥对目标应用程序执行重新签名操作。这需要访问设备上的
    `/system/app` 文件夹。要访问此文件夹，你必须有一个已获得根权限的设备。
- en: '![Robotium for pre-installed applications](img/8010OS_07_03.jpg)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![Robotium 用于预装应用程序](img/8010OS_07_03.jpg)'
- en: Note
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Please note that some of the preinstalled applications for which the re-sign
    operation is performed don't work properly. These applications don't even show
    up when re-signed with the new debug key.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，一些经过重新签名操作预装的应用程序可能无法正常工作。这些应用在用新的调试密钥重新签名后甚至不会显示。
- en: 'To re-sign an APK file, you can follow the listed steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 要重新签名APK文件，请按照以下步骤操作：
- en: 'Log in as root: `adb root`.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 以root用户登录：`adb root`。
- en: Remount using the following code
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用以下代码重新挂载：
- en: '[PRE9]'
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Re-sign the `ApplicationName.apk` file, so that it has the same certificate
    debug key signature signing as the `adb pull /data/system/packages.xml` test project.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重新签名 `ApplicationName.apk` 文件，使其具有与 `adb pull /data/system/packages.xml` 测试项目相同的证书调试密钥签名。
- en: 'Open `packages.xml` and remove the following code:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `packages.xml` 并删除以下代码：
- en: '[PRE10]'
  id: totrans-44
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Push `packages.xml` back to the `adb push packages.xml /data/system` device.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 `packages.xml` 推回设备 `adb push packages.xml /data/system`。
- en: Restart your device.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重启你的设备。
- en: Push the re-signed `ApplicationName.apk` file back to the `adb push ApplicationName.apk
    /system/app` device.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将重新签名的 `ApplicationName.apk` 文件推回设备 `adb push ApplicationName.apk /system/app`。
- en: Test for only APK
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 仅测试APK
- en: The APK file to be tested should have the same certificate signature as the
    test project. If the signatures are different, a mismatch will occur.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试的APK文件应具有与测试项目相同的证书签名。如果签名不同，将会发生不匹配。
- en: '![Test for only APK](img/8010OS_07_04.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![仅测试APK](img/8010OS_07_04.jpg)'
- en: If you know the APK certificate signature, sign the test project with the same
    signature.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你知道APK证书签名，请使用相同的签名对测试项目进行签名。
- en: If the APK is not signed, sign the APK with the Android debug key signature.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果APK尚未签名，请使用Android调试密钥签名APK。
- en: If you don't know the APK certificate signature, delete its certificate signature
    and provide the debug key signature to the APK and your test project.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你不知道APK证书签名，删除其证书签名，并为APK和你的测试项目提供调试密钥签名。
- en: Signature process
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 签名过程
- en: In Android OS, all the applications are signed with the certificate whose private
    key is held by the app developer.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android操作系统中，所有应用程序都使用持有私钥的证书进行签名，该私钥由应用程序开发者持有。
- en: 'There are two build modes to build your Android application. They are as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种构建模式可以构建你的Android应用程序。它们如下：
- en: Debug mode
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试模式
- en: Release mode
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发布模式
- en: The Android build process signs the application depending on the type of build
    mode. The Debug mode is mostly used when you are developing and testing the application,
    whereas the Release mode is used when you want to distribute the released version
    of your application to the users, or publish the application in the marketplace
    such as the **Google Play Store**.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Android构建过程会根据构建模式类型对应用程序进行签名。在开发测试应用程序时通常使用调试模式，而发布模式则用于将发布版本的应用程序分发给用户，或者在如
    **Google Play Store** 的市场中发布应用程序。
- en: '![Signature process](img/8010OS_07_05.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![签名过程](img/8010OS_07_05.jpg)'
- en: The `Keytool` utility is used to create a debug key when you are using a build
    mode. The alias and password of the debug key are known to the SDK build tools.
    This is why tools don't prompt you for the debug key's alias and password every
    time the program is compiled.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用构建模式时，`Keytool` 实用工具用于创建调试密钥。调试密钥的别名和密码为SDK构建工具所知。这就是为什么工具在每次编译程序时不会提示你输入调试密钥的别名和密码。
- en: The private key is used when you build your application in the Release mode.
    If you don't have a private key with you, the `Keytool` utility creates one for
    you. When your application is compiled in the Release mode, the build tools use
    your private key, along with the `jarsigner` utility to sign the application APK
    file.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在发布模式下构建应用程序时，会使用私钥。如果你没有私钥，`Keytool` 实用工具会为你创建一个。当你的应用程序在发布模式下编译时，构建工具会使用你的私钥以及
    `jarsigner` 实用工具来签名应用程序APK文件。
- en: Whenever you debug or run your application using Eclipse with the ADT plugin
    installed, the debug key signing process happens automatically in the background.
    The same signing process is followed when using an Ant script with the debug option
    enabled to build the application. The *Eclipse Export wizard* helps automating
    the release signing process or modifying the Ant build script and building applications
    with the release option.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 当你使用安装了ADT插件的Eclipse调试或运行应用程序时，调试密钥签名过程会在后台自动进行。使用启用了调试选项的Ant脚本构建应用程序时，也会遵循相同的签名过程。《Eclipse导出向导》可以帮助自动化发布签名过程或修改Ant构建脚本，以及使用发布选项构建应用程序。
- en: 'To unsign a signed APK and then sign it with the debug key, perform the following
    steps:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 要取消已签名的APK的签名，然后使用调试密钥重新签名，请执行以下步骤：
- en: Unzip the APK file using any ZIP extractor.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用任何ZIP解压工具解压APK文件。
- en: Delete the `Meta-INF` folder.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除`Meta-INF`文件夹。
- en: Rezip the extracted files to an APK file and change the extension from `appname.apk.zip`
    to `appname.apk`. This way, you can un-sign the signed APK!
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将提取的文件重新压缩成APK文件，并将扩展名从`appname.apk.zip`改为`appname.apk`。这样，你就可以取消已签名的APK的签名！
- en: 'To sign this APK with the Android debug signature key, run the following command
    in the command prompt:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要使用Android调试签名密钥为这个APK签名，请在命令提示符中运行以下命令：
- en: '[PRE11]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: The `jarsigner` utility can be found under the JDK binaries and *zipalign* is
    an Android SDK part.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '`jarsigner`工具可以在JDK二进制文件中找到，而*zipalign*是Android SDK的一部分。'
- en: The *zipalign* tool is used for optimization of the Android APK files. Its basic
    purpose is to have the uncompressed data alignment relative to the start of the
    file.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '*zipalign*工具用于优化Android APK文件。其基本目的是使未压缩的数据与文件的开始位置相对齐。'
- en: 'With the help of Eclipse, you can also sign and export your Android app. Perform
    the following steps:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 借助Eclipse，你也可以为你的Android应用签名并导出。执行以下步骤：
- en: Right-click on the Android project and navigate to **Android Tools** | **Export
    Signed Application Package**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Android项目上右键点击，导航到**Android Tools** | **导出已签名的应用程序包**。
- en: In the **Export** Android application wizard, select the project you want to
    export, and then click on **Next**.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**导出**Android应用程序向导中，选择你想要导出的项目，然后点击**下一步**。
- en: The **Keystore Selection** screen will appear.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将会出现**密钥库选择**屏幕。
- en: If you don't have the existing keystore, create a new keystore. You should be
    able to create a keystore by entering the location and password.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你没有现有的密钥库，请创建一个新的密钥库。你应该可以通过输入位置和密码来创建一个密钥库。
- en: After navigating to the folder you want to use, type a name in the **File name:**
    field in the file browse window, for example, `hrushikesh.keystore`. Then, you
    should be able to proceed with the key creation.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在导航到你想使用的文件夹后，在文件浏览窗口中的**文件名：**字段里输入一个名字，例如，`hrushikesh.keystore`。然后，你应该可以继续进行密钥的创建。
- en: 'For more information on APK signing, please refer to the following link:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 有关APK签名的更多信息，请参考以下链接：
- en: '[http://developer.android.com/tools/publishing/app-signing.html](http://developer.android.com/tools/publishing/app-signing.html)'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '[APK签名指南](http://developer.android.com/tools/publishing/app-signing.html)'
- en: Summary
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, you learned about the different utilities present in the Robotium
    Framework and their usage. In the next chapter, we will see the integration mechanism
    of Robotium with Maven, with some examples.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解到了Robotium Framework中不同的工具及其使用方法。在下一章中，我们将看到Robotium与Maven的集成机制，以及一些示例。
