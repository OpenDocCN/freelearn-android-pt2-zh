- en: Chapter 13. Distribution Patterns
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第13章. 分发模式
- en: With most of the important aspects of Android development covered, we are left
    with just the processes of deploying and publishing. Simply getting an app published
    on the Google Play store is not a complex process, but there are a few tips and
    tricks that we can apply to maximize an app's potential reach, and of course,
    there is a growing number of ways to make money from our apps.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在覆盖了安卓开发的大部分重要方面之后，我们只需要处理部署和发布的过程。简单来说，将应用发布在谷歌应用商店并不是一个复杂的流程，但我们可以应用一些技巧和诀窍来最大化应用的可能覆盖范围，当然，我们应用获利的方式也在不断增加。
- en: In this chapter, we will look at how to increase backwards compatibility beyond
    that provided by the support libraries, and then move on to see how the registration
    and distribution processes work, and then we will explore the various ways to
    make our application pay.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨如何在使用支持库提供的向后兼容性之外增加兼容性，然后继续了解注册和分发过程是如何工作的，接着我们将探索各种让我们的应用程序盈利的方式。
- en: 'In this chapter, you will learn how to do the following:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习如何进行以下操作：
- en: Prepare an app for distribution
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备应用分发
- en: Generate a digital certificate
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成数字证书
- en: Register as a Google Developer
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注册成为谷歌开发者
- en: Prepare promotional material
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 准备宣传材料
- en: Publish an app on Google Play store
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在谷歌应用商店发布应用
- en: Incorporate in-app billing
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加入应用内购
- en: Include advertisements
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 包含广告
- en: Extending platform scope
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 扩展平台范围
- en: 'The support libraries we have been working with throughout the book do a marvelous
    job of making our apps available on older devices, but they do not work for all
    situations, and many new innovations simply cannot be realized on some older machines.
    Taking a look at the following device dashboard, it is obvious that we would like
    to extend our apps back to API level 16:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在整个书中一直在使用的支持库在让应用在旧设备上可用方面做得非常出色，但它们并不适用于所有情况，许多新的创新在一些旧机器上根本无法实现。看看下面的设备仪表盘，很明显，我们希望将应用扩展回API级别16：
- en: '![Extending platform scope](img/B05685_13_01.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![扩展平台范围](img/B05685_13_01.jpg)'
- en: We have seen how the AppCompat library enables our apps to run on platforms
    even older than this, but we have to avoid using some features. For example, the
    `view.setElevation()` method (along with other material features) will not work
    below API level 21 and will cause the machine to crash if it is called.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到AppCompat库是如何让我们的应用运行在比当前平台更旧的平台上，但我们不得不避免使用某些功能。例如，`view.setElevation()`方法（以及其他材料特性）在API级别21以下将不起作用，如果调用它会导致机器崩溃。
- en: 'It would be tempting to think that we could simply sacrifice such features
    for the benefit of reaching a wider audience, but fortunately, this is not necessary
    as it is possible to detect dynamically which platform our app is running on with
    the following conditional clause:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可能会很自然地认为，我们可以简单地为了吸引更广泛的受众而牺牲这些功能，但幸运的是，这并不必要，因为我们可以使用以下条件子句动态检测我们的应用正在运行的平台：
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It is always down to the individual developer, but this slight drop in quality
    is often well worth the large increase in potential user adoption.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这总是取决于个别开发者，但这种轻微的质量下降通常值得潜在用户采用的大幅增加。
- en: The preceding example is a simple one, however, and adding this kind of dynamic
    backwards compatibility can often require a lot of extra coding. A good example
    might be the camera2 API, which is far more sophisticated than its predecessor
    but only available on devices carrying API 21 and higher. In such a case, we can
    apply exactly the same principle but would need to set up a more sophisticated
    system. The clause might cause different methods to be called or even different
    activities to be launched.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，前面的例子很简单，添加这种动态向后兼容性通常需要额外的编码工作。一个很好的例子是camera2 API，它比其前身复杂得多，但只在携带API 21及更高版本的设备上可用。在这种情况下，我们可以应用完全相同的原理，但需要设置一个更复杂系统。该子句可能导致调用不同的方法，甚至启动不同的活动。
- en: 'However, we choose to implement this, we can of course, employ design patterns.
    There are several that could be used here, but the most suitable would probably
    be the strategy pattern along the lines of the one seen here:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，无论我们选择如何实现这一点，当然可以采用设计模式。这里有几种可能被使用，但最适合的可能是在这里看到的策略模式：
- en: '![Extending platform scope](img/image_13_002.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![扩展平台范围](img/image_13_002.jpg)'
- en: This approach may often require a considerable amount of extra coding, but the
    expanded potential market often makes that well worth the extra work. Once we
    have set the scope of our app like this, it is then ready to publish.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法可能经常需要额外的编码工作，但扩大的潜在市场往往使这些额外工作变得非常值得。一旦我们像这样设置了我们应用的范畴，它就可以发布了。
- en: Publishing apps
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 发布应用
- en: 'It goes without saying that you will have exhaustively tested your app on a
    wide variety of handsets and emulators and probably prepared your promotional
    material and checked out Google Play Policies and Agreements. There are many things
    to consider before publication, such as content rating and country distribution.
    From a programming point of view, there are just three things that we need to
    check before we proceed:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 不言而喻，你应该在各种各样的手机和模拟器上彻底测试你的应用，并可能准备好你的推广材料，查看Google Play的政策和协议。在发布之前有很多事情要考虑，比如内容分级和国家分布。从编程的角度来看，在我们继续之前，只需检查三件事情：
- en: 'Remove all logging from the project such as the following:'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从项目中删除所有日志记录，例如以下内容：
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Make sure you have an application `label` and `icon` declared in your manifest.
    Here''s an example:'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保你的清单中声明了应用`label`和`icon`。以下是一个示例：
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Ensure you have declared all the necessary permissions in the manifest. Here''s
    an example:'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保在清单中声明了所有必要的权限。以下是一个示例：
- en: '[PRE3]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: We are now just three steps from seeing our app on the Google Play store. All
    we need to do is generate a Signed Release APK, register as a Google Play Developer
    and, finally upload our app to the store or publish it on our own site. There
    are also one or two other ways of publishing an app and we will see how they are
    done at the end of the section. First, though, we will begin by generating an
    APK that is ready for uploading onto the Google Play store.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们只需三个步骤就能在Google Play商店上看到我们的应用。我们需要做的就是生成一个已签名的发布APK，注册成为Google Play开发者，最后将应用上传到商店或发布在自己的网站上。还有一两种发布应用的其他方式，我们将在本节末尾了解它们是如何完成的。首先，我们将开始生成一个准备上传到Google
    Play商店的APK。
- en: Generating a signed APK
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 生成签名的APK
- en: 'All published Android apps require a digitally signed certificate. This is
    used to prove the authenticity of an app. Unlike many other digital certificates,
    there is no authority and you hold the signed key, which clearly has to be securely
    protected. To do this, we need to generate a private key and then use it to generate
    a signed APK. There are some very handy tools on GitHub for facilitating this
    process, but here, to aid our understanding, we will follow the traditional route.
    This can all be done in the Android Studio with the Generate Signed APK Wizard.
    These steps will take you through it:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 所有发布的Android应用都需要一个数字签名的证书。这用于证明应用程序的真实性。与其他许多数字证书不同，它没有权威机构，你持有签名的私钥，这显然需要被安全保护。为此，我们需要生成一个私钥，然后使用它来生成签名的APK。GitHub上有些工具可以方便地完成这个过程，但为了帮助理解，我们将遵循传统的方法。这可以在Android
    Studio中的“生成签名的APK向导”中完成。以下步骤将引导你完成：
- en: Open the app you want to publish.
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你想要发布的应用。
- en: Start the Generate Signed APK Wizard from the **Build | Generate Signed APK...**
    menu.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**构建 | 生成签名的APK...**菜单启动生成签名的APK向导。
- en: Select **Create new...** on the first screen.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在第一个屏幕上选择**创建新的...**。
- en: On the next screen, provide a path and name for your key store along with a
    strong password.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在下一个屏幕上，为你的密钥库提供一个路径和名称，以及一个强密码。
- en: Do the same for the Alias.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对别名做同样的操作。
- en: Select a Validity of greater than 27 years, like so:![Generating a signed APK](img/image_13_003.jpg)
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个有效期超过27年的选项，如下所示：![生成签名的APK](img/image_13_003.jpg)
- en: Fill in at least one of the Certificate fields. Click on **OK**, and you will
    be taken back to the wizard.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 至少填写一个证书字段。点击**确定**，你将被带回向导。
- en: Select **release** as the Build Variant and click on **Finish**.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**release**作为构建变体，然后点击**完成**。
- en: You now have a signed APK ready for publication.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在有一个准备发布的已签名APK。
- en: The key store (a `.jks` file) can be used to store any number of keys (aliases).
    It is perfectly fine to use the same key for all your apps, and you must use the
    same key when producing updates of an app. Google require certificates to be valid
    until at least 22 October 2033, and any number that surpasses this date will suffice.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 密钥库（一个`.jks`文件）可以用来存储任意数量的密钥（别名）。对所有应用使用同一个密钥是完全可以的，而且在产生应用更新时也必须使用相同的密钥。谷歌要求证书有效期至少到2033年10月22日，任何超过这个日期的数字都足够。
- en: Tip
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**IMPORTANT ** Keep at least one secure backup of your keys. If you lose them,
    you will not be able to develop future versions of those apps.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要**：至少保留一份密钥的安全备份。如果丢失了，你将无法开发这些应用程序的未来版本。'
- en: Once we have our digital signature, we are ready to register as a developer
    with Google.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们有了数字签名，我们就可以注册成为Google的开发者。
- en: Registering as a developer
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 注册为开发者
- en: 'As with signing an APK, registering as a developer is similarly straightforward.
    Note that Google charge a one-off fee of USD 25 and 30% of any revenue your app
    may generate. The following directions assume that you have already have a Google
    account:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 与签名APK一样，注册为开发者也同样简单。请注意，Google收取一次性费用25美元，以及你的应用程序可能产生的任何收入的30%。以下说明假设你已经有一个Google账户：
- en: 'Review **Supported Locations** at the following URL:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 查阅以下链接中的**支持的位置**：
- en: '[support.google.com/googleplay/android-developer/table/3541286?hl=en&rd=1](http://support.google.com/googleplay/android-developer/table/3541286?hl=en&rd=1)'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[support.google.com/googleplay/android-developer/table/3541286?hl=en&rd=1](http://support.google.com/googleplay/android-developer/table/3541286?hl=en&rd=1)'
- en: 'Go to the Developer Play Console:'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往开发者Play控制台：
- en: '[PRE4]'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Sign in with your Google account and enter the following information:![Registering
    as a developer](img/image_13_004.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用你的Google账户登录，并输入以下信息：![注册为开发者](img/image_13_004.jpg)
- en: Read and accept the **Google Play Developer Distribution Agreement**.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 阅读并接受**Google Play开发者分发协议**。
- en: Pay the USD 25 with Google Checkout, creating an account if necessary, and that's
    it, you are now a registered Google Developer.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Google Checkout支付25美元，如有必要请创建一个账户，这样你就成为了注册的Google开发者。
- en: If you intend to make your apps available worldwide, then it is always worth
    checking the Supported Locations page, as it changes regularly. The only thing
    left to do is upload our app, which we will do next.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你打算让你的应用程序在全球范围内可用，那么检查支持的位置页面总是值得的，因为它经常变化。剩下要做的就是上传我们的应用程序，我们接下来会做。
- en: Publishing an app on the Google Play store
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Google Play商店上发布应用程序
- en: 'Uploading and publishing our apps to the Play store is done through the **Developer
    Console**. As you will see, there is a lot of information and promotional material
    that we could provide about our app during this process. Providing you have followed
    the previous steps in this chapter and have a release-ready signed `.apk` file,
    then complete the following instructions to publish it. Alternatively, you may
    just want to have a look at what is involved at this point and what form the promotional
    material will take. In this case, ensure you have the following four images and
    a signed APK and select **Save Draft** at the end rather than **Publish app**:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 将我们的应用程序上传并发布到Play商店是通过**开发者控制台**完成的。正如你将看到的，在这个过程中，我们可以提供大量关于我们应用程序的信息和推广材料。只要你按照本章前面的步骤操作，并且有一个准备好的已签名的`.apk`文件，那么就按照以下说明发布它。或者，你可能只是想看看此时涉及的内容以及推广材料的形式。在这种情况下，确保你有以下四张图片和一个已签名的APK，并在最后选择**保存草稿**而不是**发布应用**：
- en: At least two screenshots of your app. These must not have any side that is shorter
    than 320 px or longer than 3840 px.
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 至少两张应用程序的截图。这些截图的任何一边不得短于320像素或长于3840像素。
- en: If you want your app to be visible on the Play store to users searching for
    apps designed for tablets, then you should prepare at least one 7 '' and one 10
    '' screenshot.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你希望你的应用程序在Play商店中对搜索设计用于平板电脑的应用程序的用户可见，那么你应该至少准备一张7英寸和一张10英寸的截图。
- en: A Hi-res icon image of 512 x 512 px.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个512 x 512像素的高分辨率图标图像。
- en: A Feature Graphic of 1024 x 500 px.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个1024 x 500像素的特色图形。
- en: 'With these images prepared, and a signed .`apk`, we have all we need to start.
    Decide how much, if anything, you wish to charge for the app and then follow these
    instructions:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好这些图片和一个已签名的`.apk`文件后，我们就可以开始了。决定你希望为应用程序收取多少费用（如果有的话），然后按照以下说明操作：
- en: Open your Developer Console.
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你的开发者控制台。
- en: Supply a **Title** and click on the **Upload APK** button.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写**标题**并点击**上传APK**按钮。
- en: Click on the **Upload your first APK to Production**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**上传你的第一个APK到生产环境**。
- en: Locate your signed `app-release.apk` file. It will be in `AndroidStudioProjects\YourApp\app`.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定位到你的已签名`app-release.apk`文件。它将在`AndroidStudioProjects\YourApp\app`目录中。
- en: Drag and drop this into the space suggested.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将此内容拖放到建议的空间中。
- en: When this is completed, you will be taken to the application page.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，你将被带到应用程序页面。
- en: Work your way through the top four sections:![Publishing an app on the Google
    Play store](img/image_13_005.jpg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按照前四个部分进行操作：![在Google Play商店上发布应用程序](img/image_13_005.jpg)
- en: Complete all required fields until the Publish app button becomes clickable.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成所有必填字段，直到“发布应用”按钮可以点击。
- en: If you need help, the **Why can't I publish?** link above the button will list
    uncompleted compulsory fields.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果您需要帮助，按钮上方的**为什么我不能发布？**链接将列出未完成的必填字段。
- en: When all the required fields are completed, click on the P**ublish app** ( or
    **Save draft**) button at the top of the page.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当所有必填字段都填写完毕后，点击页面顶部的**发布应用**（或**保存草稿**）按钮。
- en: Congratulations! You are now a published Android developer.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 恭喜！您现在已成为一名已发布的安卓开发者。
- en: We now know how to publish our apps on the Play store. There are, of course,
    many other app markets, and they all have their own uploading procedures. Google
    Play, however, provides the widest possible audience and is the obvious choice
    for publication.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在知道如何将应用发布到 Play 商店。当然，还有许多其他的应用市场，它们都有各自的上传流程。然而，Google Play 提供了最广泛的受众群体，是发布应用的自然选择。
- en: Even though the Play store makes the ideal market place, it is still well worth
    looking at two alternative methods of distributing.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Play 商店是理想的市场，但仍然值得看看两种其他的分发方法。
- en: Distributing by e-mail and on websites
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过电子邮件和网站进行分发
- en: The first of these two methods is as simple as it sounds. If you attach the
    APK to an e-mail and it's opened on an Android device, the user will be invited
    to install the app when the attachment is opened. On more recent devices, they
    will be able to tap an install button directly in the e-mail.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这两种方法中的第一种就像听起来一样简单。如果您将 APK 作为电子邮件附件发送，并在安卓设备上打开，用户在打开附件时会被邀请安装应用。在较新的设备上，他们可以直接在电子邮件中点击安装按钮。
- en: Tip
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: For both these methods, your users will have to allow the installation of unknown
    sources in the security settings of their devices.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这两种方法，用户将必须在设备的 安全设置 中允许安装未知来源。
- en: 'Distributing your app from your website is almost as simple as e-mailing it.
    All you need to do is host the APK file on your site somewhere and provide a download
    link along the lines of the following:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 从您的网站分发应用几乎和通过电子邮件发送一样简单。您需要做的就是在网站上托管 APK 文件，并提供如下所示的下载链接：
- en: '[PRE5]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When browsing your site from and Android device, a tap on your link will install
    your app on their device.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户从安卓设备浏览您的网站时，点击您的链接将在他们的设备上安装您的应用。
- en: Tip
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Distribution by e-mail provides no protection against piracy and should only
    be used with this in mind. The other methods are as secure as we could hope, but
    if you would like to take extra measures, then Google offer a **Licensing Service**
    which can be found at developer.android.com/google/play/licensing.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 通过电子邮件分发无法防止盗版，因此只有在考虑到这一点时才应使用此方法。其他方法尽可能安全，但如果您想采取额外措施，谷歌提供了一项**许可服务**，可以在
    developer.android.com/google/play/licensing 找到。
- en: Whether we have released a paid app or a free one, we want to be able to reach
    as many users as possible. Google provide several tools to help us with this,
    as well as ways to monetize our apps, as we shall see next.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 无论我们是发布付费应用还是免费应用，我们都希望能够触达尽可能多的用户。谷歌提供了几种工具来帮助我们实现这一点，以及我们接下来将看到的盈利方法。
- en: Promoting and monetizing apps
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 推广和盈利应用
- en: Very few apps become successful without first being well promoted. There are
    countless ways to do this and you will, no doubt, be well ahead of the curve on
    how to promote your products. To help you reach a wider audience, Google provides
    some handy tools to assist with promotion.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有应用在没有经过良好推广的情况下就能成功。有无数种推广方法，毫无疑问，您将遥遥领先于如何推广您的产品。为了帮助您触达更广泛的受众，谷歌提供了一些实用的工具来协助推广。
- en: 'After looking at promotion tools, we will explore two ways to make money from
    our app: in-app payments and advertising.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了推广工具之后，我们将探索两种通过应用赚钱的方法：应用内支付和广告。
- en: Promoting an app
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推广应用
- en: 'There are two very simple methods, provided by Google, to help steer people
    towards our products on the Play store: links from both websites and our apps,
    and the **Google Play Badge**, which provides official branding to our links.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 谷歌提供了两种非常简单的方法，帮助引导人们从网站和我们的应用中关注 Play 商店上的产品：链接以及**谷歌 Play 徽章**，它为我们的链接提供官方品牌标识。
- en: 'We can add links to both individual apps and our publisher page, where all
    our apps can be browsed, and we can include these links in our apps as well as
    our websites:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以添加指向单个应用和我们发布商页面的链接，在发布商页面可以浏览我们所有的应用，并且我们可以在我们的应用和网站中包含这些链接：
- en: 'To include a link to a specific app''s page in the Play store, use the full
    package name, as found in the Manifest, in the following format:'
  id: totrans-92
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要包含指向Play商店中特定应用页面的链接，请使用以下格式中的清单中找到的完整包名：
- en: '[PRE6]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'To Include this within an Android app, use this:'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要在Android应用中包含这个，请使用这个：
- en: '[PRE7]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'If you want a link to your publisher page and a list of all your products,
    use this:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你想要一个指向你的发布者页面以及你所有产品的列表的链接，请使用这个：
- en: '[PRE8]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Make the same changes as before when linking from an app:'
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当从应用中链接时，请像之前一样进行相同的更改：
- en: '[PRE9]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'To link to a specific search result, use this:'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要链接到特定的搜索结果，请使用这个：
- en: '[PRE10]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'To use an official Google Badge as your link, replace one of the preceding
    elements with the highlighted HTML here:'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果要使用官方Google徽章作为你的链接，请用下面突出显示的HTML替换前面元素之一：
- en: '[PRE11]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The Badge comes in two sizes, `60.png` and `45.png`, and two styles, Android
    app on Google Play and Get it on Google Play. Simply change the relevant code
    to select the Badge that best suits your purpose:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 徽章有两种尺寸，`60.png`和`45.png`，以及两种样式，Android应用在Google Play上和在Google Play上获取。只需更改相关代码以选择最适合你目的的徽章：
- en: '![Promoting an app](img/image_13_006.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![推广应用](img/image_13_006.jpg)'
- en: With our app published and with well-placed links to our Play store page, it
    is now time to consider how we can profit from the inevitable downloads, and so
    we come to how to monetize and Android app.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们的应用发布，并在合适的位置放置了指向我们Play商店页面的链接，现在是考虑如何从不可避免的下载中获利的时候了，因此我们来看看如何实现Android应用的盈利。
- en: Monetizing an app
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用盈利
- en: There are many ways to make money from an app, but two of the most popular and
    effective are **in-app billing** and **advertising**. In-app billing can become
    quite involved and perhaps deserves an entire chapter to itself. Here, we will
    see how to build an effective template that you can use as a foundation for an
    in-app product you might develop. It will include all the libraries and packages
    needed, along with some very useful helper classes.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 有很多方法可以从应用中赚钱，但最流行和有效的两种方法是**应用内购买**和**广告**。应用内购买可能会相当复杂，或许值得用一整章来讲述。这里，我们将看到一个有效的模板，你可以将其作为开发可能的应用内产品的基础。它将包括所有需要的库和包，以及一些非常有用的帮助类。
- en: Including Google AdMob advertisements in our apps is, in contrast, a very familiar
    process to us by now. An ad is in effect just another View and can be identified
    and referenced just like any other Android widget. The final exercise of this
    chapter, and indeed the book, will be constructing a simple working AdMob demo.
    First, though, let's take a look at in-app billing.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，现在我们在应用中包含Google AdMob广告对我们来说是一个非常熟悉的过程。实际上，广告只是另一个View，并且可以像其他任何Android小部件一样被识别和引用。本章的最后一个练习，也是整本书的最后一个练习，将构建一个简单的AdMob演示。不过，首先让我们看看应用内购买。
- en: In-app billing
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 应用内购买
- en: There is a large number of products that users can purchase from within an app,
    from upgrades and unlockables to in-game objects and currencies, and it would
    certainly provide a payment option for the sandwich builder app we developed earlier
    in the book.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 用户可以从应用内购买大量产品，从升级和可解锁内容到游戏内物品和货币，这当然为我们在书中前面开发的那个三明治制作应用提供了一个支付选项。
- en: 'Whatever the user is buying, the Google checkout process ensures they will
    pay in the same way as they pay for other Play store products. From the developer''s
    point of view, each purchase will boil down to responding to the click of a button.
    We will need to install the Google Play Billing Library, and add an AIDL file
    and some helper classes to our project. Here is how:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 无论用户购买什么，Google结账流程都会确保他们以与其他Play商店产品相同的方式支付。从开发者的角度来看，每次购买都会归结为响应一个按钮的点击。我们需要安装Google
    Play Billing Library，并向我们的项目中添加一个AIDL文件和一些帮助类。以下是方法：
- en: Start a new Android project or open one you want to add in-app billing to.
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个新的Android项目，或者打开一个你想要添加应用内购买功能的已有项目。
- en: Open the SDK Manager.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开SDK管理器。
- en: Under Extras, make sure you have the Google Play Billing Library installed.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Extras下，确保你已经安装了Google Play Billing Library。
- en: 'Open the manifest and apply this permission:'
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开清单并应用这个权限：
- en: '[PRE12]'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In the Project pane, right-click on app and select **New | Folder | AIDL Folder**.
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目窗格中，右键点击app并选择**新建 | 文件夹 | AIDL文件夹**。
- en: From this AIDL folder, create a **New | Package**, and call it com.android.vending.billing.
  id: totrans-119
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这个AIDL文件夹中，创建一个**新建 | 包**，并将其命名为com.android.vending.billing。
- en: Locate and copy the `IinAppBillingService.aidl` file in the `sdk\extras\google\play_billing`
    directory.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`sdk\extras\google\play_billing`目录中找到并复制`IinAppBillingService.aidl`文件。
- en: Paste the file into the `com.android.vending.billing` package.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件粘贴到`com.android.vending.billing`包中。
- en: Create a **New | Package** in the Java folder called `com.`**your.package.name**`.util`
    and click on **Finish**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Java文件夹中创建一个名为`com.`**你的包名**`.util`的**新包**，然后点击**完成**。
- en: From the `play_billing` directory, locate and open the `TrivialDrive\src\com\example\android\trivialdrivesample\util`
    folder.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从`play_billing`目录中找到并打开`TrivialDrive\src\com\example\android\trivialdrivesample\util`文件夹。
- en: Copy the nine Java files into the util package you just created.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将九个Java文件复制到你刚刚创建的util包中。
- en: 'You now have a working template for any app you wish to include in-app purchasing
    in. Alternatively, you can complete the preceding steps on a project where you
    have already developed your in-app products. Either way, you will no doubt be
    taking advantage of the `IabHelper class`, which vastly simplifies coding, providing
    listeners for every step of the purchasing process. Documentation can be found
    here:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经拥有了一个适用于任何想要加入应用内购买功能的应用的模板。或者，你也可以在已经开发好应用内产品的项目中完成上述步骤。无论哪种方式，无疑你都将利用`IabHelper类`，它极大地简化了编码工作，并为购买过程的每一步提供了监听器。相关文档可以在这里找到：
- en: '[https://developer.android.com/google/play/billing/index.html](https://developer.android.com/google/play/billing/index.html)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://developer.android.com/google/play/billing/index.html](https://developer.android.com/google/play/billing/index.html)'
- en: Tip
  id: totrans-127
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Before you can start to implement in-app purchases, you will need to secure
    a **License Key** for your app. This can be found in the app's details in your
    developer console.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始实现应用内购买之前，你需要为你的应用获取一个**许可密钥**。这可以在开发者控制台中的应用详情中找到。
- en: Paid apps and in-app products are just two ways to make money from an app, and
    many people choose another, and often lucrative, route for monetizing their work
    through advertising. **Google AdMob** allows for a great deal of flexibility and
    a familiar programming interface, as we shall see next.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 付费应用和应用内产品只是从应用中赚钱的两种方式，很多人选择通过广告来获取收入，这通常是一种更有利可图的途径。**Google AdMob**提供了很大的灵活性以及熟悉的编程接口，我们将在下一节中看到。
- en: Including an advertisement
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 包含广告
- en: There are many ways that we can earn money from advertising, but AdMob provides
    one of the easiest. Not only does the service allow you to select what types of
    product you wish to advertise, but it also provides great analytical tools and
    seamless payment into your Checkout account.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 广告赚钱的方式有很多，但AdMob提供的方法最为简单。该服务不仅允许你选择想要推广的产品类型，还提供了优秀的分析工具，并能无缝地将收入转入你的Checkout账户。
- en: On top of this, an **AdView** can be treated programmatically in a way that
    is almost identical to the methods we are used to and familiar with, as we shall
    see in this final exercise, where we will develop a simple app with a demo banner
    AdMob ad.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们将会看到，**AdView**可以通过几乎与我们熟悉的方法一样的编程方式来处理，我们将在最后的练习中开发一个带有演示横幅AdMob广告的简单应用。
- en: 'Before you start this exercise, you will need to have signed up for an AdMob
    account at google.com/admob:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始这个练习之前，你需要先在google.com/admob上注册一个AdMob账户。
- en: Open a project you want to test ads on or start a new Android project.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你想要测试广告的项目，或者开始一个新的Android项目。
- en: Make sure you have the Google Repository installed with the SDK Manager.
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保你已经通过SDK Manager安装了Google Repository。
- en: 'In the `build.gradle` file, add this dependency:'
  id: totrans-136
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`build.gradle`文件中，添加这个依赖项：
- en: '[PRE13]'
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Rebuild the project.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重建项目。
- en: 'In the manifest, set these two permissions:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在清单文件中设置这两个权限：
- en: '[PRE14]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'Within the application node, add this `meta-data` tag:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在应用节点内，添加这个`meta-data`标签：
- en: '[PRE15]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Include this second Activity in the manifest:'
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在清单文件中包含这个第二个Activity。
- en: '[PRE16]'
  id: totrans-144
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Add the following string to the `res/values/strings.xml` file:'
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`res/values/strings.xml`文件中添加以下字符串：
- en: '[PRE17]'
  id: totrans-146
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Open the `main_activity.xml` layout file.
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开`main_activity.xml`布局文件。
- en: 'Add this second namespace to the root layout:'
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在根布局中添加这个第二个命名空间：
- en: 'Add this `AdView` under the `TextView`:'
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`TextView`下方添加这个`AdView`：
- en: '[PRE18]'
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the `onCreate()` method of `MainActivity`, insert these lines:'
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`MainActivity`的`onCreate()`方法中，插入以下代码行：
- en: '[PRE19]'
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE19]'
- en: Now test the app on a device.![Including an advertisement](img/image_13_007.jpg)
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在在设备上测试应用。![包含广告](img/image_13_007.jpg)
- en: More or less everything we did here resembles the way that we would program
    any other element, with one or two exceptions. The use of the `ACCESS_NETWORK_STATE`
    permission is not strictly necessary; it is used here to check for a connection
    prior to requesting an ad.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在这里所做的几乎与我们编程任何其他元素的方式相同，有一两个例外。使用`ACCESS_NETWORK_STATE`权限并不是严格必要的；它在这里用于在请求广告之前检查网络连接。
- en: Any Activity that displays an ad will require a separate ID and be declared
    in the manifest. The ID supplied here is for testing purposes only as it is not
    allowed to use live IDs for testing purposes. There are only six classes in the
    `android.gms.ads` package, and documentation for all of them can be found at [developer.android.com/reference/com/google/android/gms/ads/package-summary](http://developer.android.com/reference/com/google/android/gms/ads/package-summary).
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 任何显示广告的活动都将需要一个单独的ID，并在清单中声明。这里提供的ID仅用于测试目的，因为不允许使用实时ID进行测试。`android.gms.ads`包中只有六个类，它们的全部文档可以在[developer.android.com/reference/com/google/android/gms/ads/package-summary](http://developer.android.com/reference/com/google/android/gms/ads/package-summary)找到。
- en: AdMob ads come in two flavors, the banner that we saw here and the interstitial,
    or full screen. We only dealt with banner ads here, but interstitial ads are handled
    in a very similar manner. With knowledge of how to implement paid apps, in-app
    billing, and AdMob, we are now armed to reap the rewards of our hard work and
    make the very most of our apps.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: AdMob广告有两种形式，我们在这里看到的横幅广告和插屏广告，或全屏广告。我们在这里只处理了横幅广告，但插屏广告的处理方式非常相似。了解了如何实现付费应用、应用内购买和AdMob，我们现在有能力收获辛勤工作的回报，最大限度地利用我们的应用程序。
- en: Summary
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This chapter has outlined the final stages of app development, and although
    these stages only make up a small proportion of the workload, they are essentially
    important and can make all the difference when it comes to the success of an application.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 本章概述了应用程序开发的最后阶段，尽管这些阶段只占工作量的很小一部分，但它们至关重要，当涉及到应用程序的成功时，它们可以起到决定性的作用。
- en: Throughout the book, we have relied heavily on support libraries to increase
    the number of devices our apps can run on, but here we saw how we can extend that
    range even further by dynamically determining the platform and running appropriate
    code accordingly. This process provided a lovely example of how design patterns
    can pervade all aspects of programming.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们大量依赖支持库来增加我们应用程序可以在其上运行的设备数量，但在这里，我们看到了如何通过动态确定平台并相应地运行适当的代码来进一步扩大这一范围。这个过程很好地展示了设计模式如何渗透到编程的所有方面。
- en: Once we have used these tools to extend our reach, we can further enhance our
    app's chances of success with prudent promotion and hopefully make our work pay,
    either directly by charging our users for the app or its features, or indirectly
    through hosting advertisements.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们使用这些工具扩大了我们的影响范围，我们还可以通过谨慎的推广来进一步提高我们应用程序成功的可能性，并希望我们的工作能够得到回报，无论是直接向用户收取应用程序或其功能的费用，还是通过投放广告间接盈利。
- en: Throughout the book, we have looked at how design patterns can assist us in
    many aspects of development, but it is a way of thinking that makes patterns so
    useful rather than any individual pattern itself. Design patterns provide an approach
    to problem solving and a clear path to solutions. It is an approach designed to
    guide us to new creative solutions, and design patterns should not be seen as
    written in stone but more as a guide, and any pattern can be modified and altered
    to better suit its purpose.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们探讨了设计模式如何在开发的许多方面帮助我们，但真正有用的是设计模式背后的思考方式，而不是任何一个单独的模式。设计模式提供了一种解决问题的方法和一条通往解决方案的清晰路径。这是一种旨在引导我们找到新的创造性解决方案的方法，设计模式不应被视为一成不变的，而应更多地视为一种指导，任何模式都可以根据其目的进行修改和调整。
- en: The pattern and samples in this book are not designed to be cut and pasted into
    other project, but rather as a methodology to help us find the most elegant solutions
    to our own original situations. If this book has done its job, then the patterns
    you go on to design will not be the ones outlined here but entirely new and original
    creations of your own.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的模式和示例并非设计为可以直接复制粘贴到其他项目中，而是作为帮助我们发现解决自己原始情况的最优雅解决方案的方法论。如果这本书完成了它的任务，那么你接下来设计的模式将不是这里所概述的，而是你自己全新的原创作品。
