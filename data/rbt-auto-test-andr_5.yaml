- en: Chapter 5. Comparison with Other Frameworks
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五章.与其他框架的比较
- en: This chapter provides a comparison between Robotium and other testing frameworks
    based on certain parameters. This will provide you a way to select a proper framework
    according to your project needs. In this chapter, we will compare Robotium with
    MonkeyRunner, Robolectric, UI Automator, and Calabash frameworks.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章节将根据某些参数对Robotium与其他测试框架进行比较。这将为你提供一个根据项目需求选择合适框架的方法。在本章中，我们将比较Robotium与MonkeyRunner、Robolectric、UI
    Automator和Calabash框架。
- en: MonkeyRunner
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MonkeyRunner
- en: '**MonkeyRunner** is a tool used to write programs that can access the Android
    emulator/device from outside of the Android code. Python programs are written
    to install the Android test app and send keystrokes to the app. The program takes
    the screenshots of the Android UI and sends it to the workstation for storage.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**MonkeyRunner** 是一个用于编写可以从Android代码外部访问Android模拟器/设备的程序的工具。编写Python程序来安装Android测试应用并向应用发送按键。该程序获取Android
    UI的截图并将其发送到工作站以存储。'
- en: MonkeyRunner is an API, not a program. It uses **Jython** (an implementation
    of python) that uses the Java programming language.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: MonkeyRunner是一个API，不是一个程序。它使用 **Jython**（Python的一种实现）, 该实现使用Java编程语言。
- en: Since MonkeyRunner is a module of Python, you can do anything that is supported
    by Python. All you need to do is create a Python program and add MonkeyRunner
    to it and you're done!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 由于MonkeyRunner是Python的一个模块，你可以执行任何Python支持的操作。你需要做的就是创建一个Python程序，加入MonkeyRunner，就完成了！
- en: 'Let''s see the difference between Robotium and MonkeyRunner in the following
    table:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看下表中Robotium与MonkeyRunner的区别：
- en: '| Features | Robotium | MonkeyRunner |'
  id: totrans-7
  prefs: []
  type: TYPE_TB
  zh: '| 功能 | Robotium | MonkeyRunner |'
- en: '| --- | --- | --- |'
  id: totrans-8
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Object selection | Object selection is based on attributes such as index,
    text/name, image, and ID. | Object selection is based on its location (x, y co-ordinates),
    which can change when the application evolves. There are high chances that touch
    events can''t be used as the exact location is not provided. |'
  id: totrans-9
  prefs: []
  type: TYPE_TB
  zh: '| 对象选择 | 对象选择基于诸如索引、文本/名称、图像和ID等属性。 | 对象选择基于其位置（x, y坐标），当应用程序发展时可能会改变。很可能无法使用触摸事件，因为未提供确切位置。
    |'
- en: '| Actions | It can perform actions only on the tested app. | It can click throughout
    the device, that is, all the applications present. |'
  id: totrans-10
  prefs: []
  type: TYPE_TB
  zh: '| 动作 | 它只能在测试应用上执行动作。 | 它可以在整个设备上点击，即所有应用都可以。 |'
- en: '| Assertion | JUnit based. A red/green bar is displayed for asserts (verification).
    | Screenshot-based verification. |'
  id: totrans-11
  prefs: []
  type: TYPE_TB
  zh: '| 断言 | 基于JUnit。断言（验证）时会显示红/绿条。 | 基于截图的验证。 |'
- en: '| Language | Java. | Python scripts. |'
  id: totrans-12
  prefs: []
  type: TYPE_TB
  zh: '| 语言 | Java。 | Python脚本。 |'
- en: '| Installation | The Robotium JAR can be imported inside the Eclipse plugin
    and the test case can be executed as a `.apk` file. | To use MonkeyRunner, run
    the `monkeyrunner` tool present in `<android sdk>/tools/` and pass the filename
    to be used as a test case. It does not install any program inside the emulator/device.
    |'
  id: totrans-13
  prefs: []
  type: TYPE_TB
  zh: '| 安装 | Robotium JAR可以导入Eclipse插件内，并将测试用例作为`.apk`文件执行。 | 要使用MonkeyRunner，请运行
    `<android sdk>/tools/` 中的 `monkeyrunner` 工具，并将要作为测试用例使用的文件名传递。它不会在模拟器/设备内安装任何程序。
    |'
- en: There are some points common to the two frameworks. They can run on an emulator/device
    and control devices/emulators from a workstation by sending specific commands
    and events from an API.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个框架有一些共同点。它们可以在模拟器/设备上运行，并通过从工作站发送特定命令和事件来控制设备/模拟器。
- en: 'In the Android testing domain, different frameworks are present for different
    needs. Since Robotium is mostly used for UI testing, it doesn''t support some
    of the following features of MonkeyRunner:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android测试领域，针对不同的需求有各种不同的框架。由于Robotium主要用于UI测试，因此它不支持MonkeyRunner以下的一些功能：
- en: Extensible automation
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展自动化
- en: Multiple application and device control
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多应用和设备控制
- en: Robolectric
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Robolectric
- en: '**Robolectric** is a test framework that mocks a part of the Android framework
    and allows the running of test cases directly on the **Java Virtual Machine**
    (**JVM**) with the help of the JUnit 4 framework. The most important thing about
    Robolectric is that it does not need an emulator/device.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**Robolectric** 是一个测试框架，它模拟了Android框架的一部分，并允许在JUnit 4框架的帮助下直接在**Java虚拟机**（**JVM**）上运行测试用例。关于Robolectric最重要的是，它不需要模拟器/设备。'
- en: '![Robolectric](img/8010OS_05_01.jpg)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![Robolectric](img/8010OS_05_01.jpg)'
- en: Robolectric contains the shallow Android objects that behave like objects present
    in the Android SDK.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Robolectric包含浅层的Android对象，这些对象的行为类似于Android SDK中存在的对象。
- en: 'Let''s see the difference between Robotium and Robolectric in the following
    table:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过下表了解Robotium和Robolectric之间的区别：
- en: '| Features | Robotium | Robolectric |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| 功能 | Robotium | Robolectric |'
- en: '| --- | --- | --- |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Emulator/Device | Robotium needs either an emulator or a device to execute
    tests. | Robolectric does not need any emulator/device to execute tests. This
    is why it is much faster than Robotium. |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| 模拟器/设备 | Robotium需要模拟器或设备来执行测试。 | Robolectric不需要任何模拟器/设备来执行测试。这就是它比Robotium快得多的原因。
    |'
- en: '| Build server | It needs an emulator or a device on the build server to run
    test cases; otherwise, the test project can''t be added to the build process.
    | It can be configured easily on the build server. |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 构建服务器 | 它需要在构建服务器上有一个模拟器或设备来运行测试用例；否则，测试项目无法添加到构建过程中。 | 它可以轻松地在构建服务器上配置。
    |'
- en: '| Test-driven development | It is used to test on an actual Android device
    and the API edges that are not simulated by Robolectric. | It helps to speed up
    the test driven development cycle more than Robotium. |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| 测试驱动开发 | 它用于在实际的Android设备上测试，以及测试Robolectric无法模拟的API边缘情况。 | 它比Robotium更能加快测试驱动开发周期的速度。
    |'
- en: '| Instrumentation | It uses JUnit 3 instrumentation testing. | It uses JUnit
    4 non instrumentation testing. |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| 测试工具 | 它使用JUnit 3的仪器化测试。 | 它使用JUnit 4的非仪器化测试。 |'
- en: UI Automator
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UI Automator
- en: UI Automator is a Java library used to create customized-UI test cases for an
    android application and it provides an execution engine to automate and run test
    cases.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: UI Automator是一个Java库，用于创建针对Android应用程序的自定义UI测试用例，并提供一个执行引擎来自动化和运行测试用例。
- en: 'Let''s see the difference between Robotium and UI Automator in the following
    table:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过下表了解Robotium和UI Automator之间的区别：
- en: '| Features | Robotium | UI Automator |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| 功能 | Robotium | UI Automator |'
- en: '| --- | --- | --- |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Cross-application package | Robotium can''t cross the application package
    boundary. | UI Automator can cross application package boundaries. For example,
    if your application opens the gallery and clicks on any album, this can be achieved
    using UI Automator. The gallery is another application package and clicking on
    an album inside the gallery is a cross-application operation. |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| 跨应用包 | Robotium无法跨越应用包边界。 | UI Automator可以跨越应用包边界。例如，如果你的应用打开图库并点击任何相册，这可以通过使用UI
    Automator实现。图库是另一个应用包，而在图库内部点击相册是跨应用的操作。 |'
- en: '| API set | Robotium has an enormous API set, containing methods for clicking
    on views, getting views, and so on. Due to this, Robotium provides more control
    over testing than UI Automator. | UI Automator contains methods to click and get
    views, but implements a different access to these views. |'
  id: totrans-35
  prefs: []
  type: TYPE_TB
  zh: '| API集合 | Robotium拥有庞大的API集合，包含点击视图、获取视图等方法。因此，Robotium比UI Automator提供了更多的测试控制。
    | UI Automator包含点击和获取视图的方法，但对这些视图的访问实现不同。 |'
- en: '| API-level support | Robotium supports API level 4 and above. | UI Automator
    supports devices with only API level 16 (or above) and doesn''t go back to support
    older API levels; thus, there is no backward compatibility. |'
  id: totrans-36
  prefs: []
  type: TYPE_TB
  zh: '| API级别支持 | Robotium支持API级别4及以上。 | UI Automator仅支持API级别16（或更高）的设备，并且不支持更旧的API级别，因此不具备向后兼容性。
    |'
- en: '| Integration with IDE | Robotium integrates smoothly with Eclipse IDE. | UI
    Automator integration with IDE is cumbersome as you need to manually add the JUnit
    library with `Android.jar` and `uiautomator.jar`, and build it using Ant. |'
  id: totrans-37
  prefs: []
  type: TYPE_TB
  zh: '| 集成开发环境 | Robotium与Eclipse IDE平滑集成。 | UI Automator与IDE的集成比较繁琐，因为你需要手动添加JUnit库与`Android.jar`和`uiautomator.jar`，并使用Ant构建。
    |'
- en: '| Web support | Robotium has full support for Web Elements in the application.
    | UI Automator lacks this feature. |'
  id: totrans-38
  prefs: []
  type: TYPE_TB
  zh: '| 网页支持 | Robotium完全支持应用程序中的Web元素。 | UI Automator缺少这一功能。 |'
- en: Calabash
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Calabash
- en: Calabash is the cross-platform that enables you to write automated-functional
    acceptance tests for mobile applications, supporting Android and iOS Native apps.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Calabash是一个跨平台工具，可让你为移动应用程序编写自动化功能验收测试，支持Android和iOS原生应用。
- en: 'Let''s see the difference between Robotium and Calabash in the following table:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过下表了解Robotium和Calabash之间的区别：
- en: '| Features | Robotium | Calabash |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| 功能 | Robotium | Calabash |'
- en: '| --- | --- | --- |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| Language | Robotium test cases are written in Java | You don''t need to write
    your tests in Java, you can use a more flexible language **Ruby**, which fits
    better |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| 编程语言 | Robotium的测试用例用Java编写 | 你不需要用Java编写测试，可以使用更灵活的**Ruby**语言，这更适合 |'
- en: '| Control | Robotium tests need to be controlled from a device | Calabash tests
    can be controlled from a computer instead of a device |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| 控制方式 | Robotium测试需要从设备上进行控制 | Calabash测试可以从计算机而非设备上进行控制 |'
- en: '| Rotation | Robotium can set the device orientation to Landscape or Portrait
    | Calabash-Android doesn''t mimic the phone rotation to Landscape or Portrait
    |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| 旋转功能 | Robotium可以将设备方向设置为横屏或竖屏 | Calabash-Android不能模拟手机旋转到横屏或竖屏 |'
- en: So, which is better? Robotium or Calabash? I think both are good. They are still
    being improved and more versions are being released.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，哪个更好？Robotium还是Calabash？我认为两者都不错。它们仍在不断改进，并且会有更多版本发布。
- en: You can always use the `android.test.ActivityInstrumentationTestCase2` class
    when neither satisfies your needs.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 当以上两种方法都无法满足你的需求时，你总是可以使用`android.test.ActivityInstrumentationTestCase2`类。
- en: As discussed, each framework has its pros and cons and is available for different
    needs of the automation testers. As we have seen from the previous comparison,
    Robotium and Calabash are quite popular and are leading all the way in automated
    UI testing.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所讨论的，每个框架都有其优缺点，并适用于自动化测试人员的不同需求。从前面的比较中我们可以看出，Robotium和Calabash相当受欢迎，并且在自动化UI测试中一路领先。
- en: Summary
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we compared Robotium with different testing frameworks based
    on different factors and came to the conclusion that all the frameworks are used
    according to different needs. No framework is perfect, there are always some pros
    and cons associated with it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们根据不同的因素将Robotium与不同的测试框架进行了比较，并得出结论：所有框架都是根据不同的需求来使用的。没有完美的框架，总会有一些优缺点与之相关联。
- en: In the next chapter, we will look into the remote control feature and its usage
    in Robotium.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨Robotium中的远程控制功能及其使用方法。
