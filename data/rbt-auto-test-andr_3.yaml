- en: Chapter 3. Robotium APIs
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三章. Robotium APIs
- en: This chapter will introduce you to the `Solo` class and information about the
    APIs present in the framework. Once this is completed, we will consider the Resource
    ID test case, which briefs us on how to achieve internationalization using Robotium.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将向你介绍`Solo`类以及框架中存在的API信息。完成这部分后，我们将考虑资源ID测试用例，它简要介绍了如何使用Robotium实现国际化。
- en: By the end of this chapter, you will get to know most of the APIs in the framework
    and test case evaluation.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将了解到框架中和测试用例评估的大部分API。
- en: Solo
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Solo
- en: The `Solo` class is a main class provided in the Robotium framework, which consists
    of APIs to write test cases in a project. Robotium can be used in conjunction
    with Android test classes, such as `ActivityInstrumentationTestCase2` and `SingleLaunchActivityTestCase`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '`Solo`类是Robotium框架提供的一个主要类，它包含了编写项目测试用例的API。Robotium可以与Android测试类结合使用，例如`ActivityInstrumentationTestCase2`和`SingleLaunchActivityTestCase`。'
- en: 'The `Solo` class has the following two constructors:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`Solo`类有两个构造函数：'
- en: '`Solo (android.app.Instrumentation instrumentation)`: This constructor takes
    in instrumentation as a parameter'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Solo (android.app.Instrumentation instrumentation)`: 这个构造函数接收instrumentation作为参数'
- en: '`Solo(android.app.Instrumentation instrumentation, android.app.Activity activity)`:
    This constructor takes in instrumentation, as well as activity'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Solo(android.app.Instrumentation instrumentation, android.app.Activity activity)`:
    这个构造函数接收instrumentation和activity作为参数'
- en: API calls
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API调用
- en: There are many APIs present inside the Robotium framework and they cover most
    of the features available in Android. The method count increases, based on user
    feedback and suggestions. If any Robotium test case developer working on a test
    project finds that there are some methods (referring to a particular useful functionality)
    that can be added as a part of the Robotium framework, then it can help people
    in their respective projects.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium框架内部有许多API，它们涵盖了Android中大部分可用的功能。随着用户反馈和建议的增加，方法数量也在增加。如果任何在测试项目中工作的Robotium测试用例开发者发现，有些方法（指的是某个特别有用的功能）可以作为Robotium框架的一部分添加，那么这将有助于他们在各自的项目中。
- en: '![API calls](img/8010OS_03_01.jpg)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![API调用](img/8010OS_03_01.jpg)'
- en: The Robotium developer team analyzes these new requirements based on priority.
    Some of them are implemented and get added/deleted as a part of the next release.
    If any API support gets discontinued in the next release version, updating your
    test project Robotium lib could be troublesome.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium开发团队会根据优先级分析这些新需求。其中一些会被实施，并作为下一个版本的一部分添加/删除。如果下一个版本中停止支持任何API，更新你的测试项目Robotium库可能会遇到麻烦。
- en: 'All these methods are available online at the following links:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些方法都可以在以下链接中找到：
- en: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html)'
- en: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html](http://robotium.googlecode.com/svn/doc/com/jayway/android/robotium/solo/Solo.html)'
- en: You can either study the Javadoc for the API set, or you can browse through
    the source code available at
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以研究API集的Javadoc，也可以浏览在以下链接中可用的源代码
- en: '[https://github.com/jayway/robotium/tree/master/robotium-solo](https://github.com/jayway/robotium/tree/master/robotium-solo)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/jayway/robotium/tree/master/robotium-solo](https://github.com/jayway/robotium/tree/master/robotium-solo)'
- en: 'The brief insight on Robotium, including the total commits, LOC, project model,
    and technology stack is represented in the following figure:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了Robotium的简要信息，包括总的提交数、代码行数、项目模型和技术栈：
- en: '![API calls](img/8010OS_03_02.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![API调用](img/8010OS_03_02.jpg)'
- en: Snapshot from ohloh.net
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 来自ohloh.net的快照
- en: Resource ID in Robotium
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Robotium中的资源ID
- en: In Robotium, you don't need to import the **Application Under Test** (**AUT**)
    resources to the test project in order to use the Resource ID.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在Robotium中，你无需将**被测应用**（**AUT**）的资源导入到测试项目中，就可以使用资源ID。
- en: '![Resource ID in Robotium](img/8010OS_03_03.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![Robotium中的资源ID](img/8010OS_03_03.jpg)'
- en: You can do it without importing the resource folder. All you need is to get
    the Resource ID by passing the name and type of the view to the `getIdentifier()`
    method and then passing the obtained ID to the `getView()` method to get the respective
    view object.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以不导入资源文件夹就做到这一点。你需要做的是通过向`getIdentifier()`方法传递视图的名称和类型来获取资源ID，然后将获得的ID传递给`getView()`方法以获取相应的视图对象。
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'It works with the string parameter as well; for example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 它同样适用于字符串参数；例如：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Understanding internationalization
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解国际化
- en: '![Understanding internationalization](img/8010OS_03_04.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![理解国际化](img/8010OS_03_04.jpg)'
- en: You might be wondering as to what internationalization is. Well, it is the means
    of adapting an application to various languages or regions. This might be confused
    with the concept of localization, but both concepts are slightly different. Localization
    means adapting the application to any region or language, thereby using locale
    components and translating the text.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想知道国际化是什么。其实，它是将应用程序适应到各种语言或地区的方法。这可能会与本地化的概念混淆，但这两个概念略有不同。本地化意味着将应用程序适应到任何地区或语言，因此使用地区组件并翻译文本。
- en: Consider an application that can have multiple language support. If you want
    to test this application, you can't hardcode any text in any language as a part
    of your test case. To generalize this, it's recommended that you should add strings
    inside the `res/values/strings.xml` file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑一个可能有多语言支持的应用程序。如果你想测试这个应用程序，你不能将任何语言的文本硬编码为测试用例的一部分。为了概括这一点，建议你应在`res/values/strings.xml`文件中添加字符串。
- en: Let's see how the internationalization test case is implemented using the following
    simple example.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下简单示例来看看如何实现国际化测试用例。
- en: 'An application consists of the **Connect** toggle button, which when clicked
    on, toggles itself to the **Disconnect** button. Below it, there is a TextView
    that displays all the connection logs generated by the application. The UI looks
    like the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序包含一个**Connect**切换按钮，点击后会切换到**Disconnect**按钮。它下面是一个TextView，显示应用程序生成的所有连接日志。UI看起来如下截图所示：
- en: '![Understanding internationalization](img/8010OS_03_05.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![理解国际化](img/8010OS_03_05.jpg)'
- en: Once the Connect button is clicked on, **Successful** is displayed in the Textview
    below it.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦点击了连接按钮，**Successful**就会显示在它下方的TextView中。
- en: 'Instead of adding any hardcoded values for the text in the toggle button, we
    can internationalize it to use values specified in the `res/values/string.xml`
    file as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用`res/values/string.xml`文件中指定的值来国际化切换按钮中的文本，而不是为切换按钮中的文本添加任何硬编码值，如下所示：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The values specified in the `string.xml` file are as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '`string.xml`文件中指定的值如下：'
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The following is the code of the test project `TestInterApp`, which has a test
    case named `testInterAppBlackBox` that clicks on the **Connect** button and toggles
    it to the **Disconnect** button. It then searches for the **Successful** text
    in the connection-log Textview present below the toggle button.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是测试项目`TestInterApp`的代码，该项目有一个名为`testInterAppBlackBox`的测试用例，点击**Connect**按钮并将其切换到**Disconnect**按钮。然后它在切换按钮下方的连接日志TextView中搜索**Successful**文本。
- en: '[PRE4]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The following screenshot shows the test case result in the Junit console:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了在Junit控制台中测试用例的结果：
- en: '![Understanding internationalization](img/8010OS_03_06.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![理解国际化](img/8010OS_03_06.jpg)'
- en: Test case and result
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 测试用例及结果
- en: As a result of internationalization, if any user wants to change the language
    region-wise, there is no need to modify the Robotium test case. Instead, just
    change the variable value in the region language inside the `string.xml` file
    and the test case will work the same for all the regions and languages.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 由于国际化的影响，如果任何用户希望按地区更改语言，则无需修改Robotium测试用例。只需在`string.xml`文件中的地区语言内部更改变量值，测试用例将为所有地区和语言工作。
- en: Summary
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have seen most of the Robotium API calls with their descriptions
    and how to use internationalization in Robotium. In the next chapter, you will
    learn how to access different web elements of the web view in an Android application
    using Robotium.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经看到了大多数Robotium API调用及其描述，以及如何在Robotium中使用国际化。在下一章中，你将学习如何使用Robotium访问Android应用程序中web视图的不同web元素。
