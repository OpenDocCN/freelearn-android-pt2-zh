- en: Chapter 1. Getting Started with Robotium
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章. 开始使用Robotium
- en: Automated testing helps us to maintain high software quality and provides a
    facility to capture if any code changes affect the actual use case. This chapter
    introduces the Robotium framework, its different features, and its benefits in
    the world of automated testing. By the end of this chapter, we will have a complete
    setup of the Android Environment in Eclipse IDE to get started with Robotium.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 自动化测试帮助我们保持高质量的软件，并提供了一种捕获代码更改是否影响实际用例的设施。本章介绍了Robotium框架，它的不同特性以及在自动化测试世界中的好处。在本章结束时，我们将在Eclipse
    IDE中完成Android环境的完整设置，开始使用Robotium。
- en: Robotium framework
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Robotium框架
- en: Robotium is an open source automation testing framework that is used to write
    a robust and powerful black box for Android applications (the emphasis is mostly
    on black box test cases). It fully supports testing for native and hybrid applications.
    Native apps are live on the device, that is, designed for a specific platform
    and can be installed from the Google Play Store, whereas Hybrid apps are partly
    native and partly web apps. These can also be installed from the app store, but
    require the HTML to be rendered in the browser.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium是一个开源自动化测试框架，用于编写针对Android应用程序的健壮且强大的黑盒测试（主要侧重于黑盒测试用例）。它完全支持原生和混合应用程序的测试。原生应用程序在设备上是实时的，即专为特定平台设计，可以从Google
    Play商店安装；而混合应用程序部分是原生的，部分是Web应用。这些也可以从应用商店安装，但需要在浏览器中渲染HTML。
- en: Robotium is mostly used to automate UI test cases and internally uses run-time
    binding to **Graphical User Interface** (**GUI**) components.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium主要用于自动化UI测试用例，并在内部使用运行时绑定到**图形用户界面**（**GUI**）组件。
- en: Robotium is released under the Apache License 2.0\. It is free to download and
    can be easily used by individuals and enterprises and is built on Java and JUnit
    3\. It will be more appropriate to call Robotium an extension of the Android Test
    Unit Framework, available at [http://developer.android.com/tools/testing/testing_android.html](http://developer.android.com/tools/testing/testing_android.html).
    Robotium can also work without the application, under the test's source code.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium遵循Apache License 2.0发布。它是免费下载的，个人和企业都可以轻松使用，并建立在Java和JUnit 3之上。更准确地说，Robotium是Android
    Test Unit Framework的扩展，可在[http://developer.android.com/tools/testing/testing_android.html](http://developer.android.com/tools/testing/testing_android.html)找到。Robotium也可以在没有应用程序的情况下工作，在测试源代码之下。
- en: The test cases written using Robotium can either be executed on the Android
    Emulator (**Android Virtual Device** (**AVD**))—we will see how to create an AVD
    during installation in the following section—or on a real Android device. Developers
    can write function, system, and acceptance test scenarios across multiple activities.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Robotium编写的测试用例可以在Android模拟器（**Android Virtual Device** (**AVD**))上执行——我们将在下一节安装过程中看到如何创建AVD——或者在实际的Android设备上执行。开发者可以跨多个活动编写功能、系统和验收测试场景。
- en: 'It is currently the world''s leading Automation Testing Framework, and many
    open source developers are contributing to introduce more and more exciting features
    in subsequent releases. The following screenshot is of the git repository website
    for the Robotium project:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 它目前是全球领先的自动化测试框架，许多开源开发者正在贡献，以在后续版本中引入更多激动人心的功能。以下屏幕截图是Robotium项目的git仓库网站：
- en: '![Robotium framework](img/8010OS_01_01.jpg)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![Robotium框架](img/8010OS_01_01.jpg)'
- en: 'As Robotium is an open source project, anyone can contribute for the purpose
    of development and help in enhancing the framework with many more features. The
    Robotium source code is maintained at GitHub and can be accessed using the following
    link:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 由于Robotium是一个开源项目，任何人都可以为了开发目的做出贡献，帮助增强框架，加入更多功能。Robotium的源代码在GitHub上维护，可以通过以下链接访问：
- en: '[https://github.com/jayway/robotium](https://github.com/jayway/robotium)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/jayway/robotium](https://github.com/jayway/robotium)'
- en: 'You just need to fork the project. Make all your changes in a clone project
    and click on **Pull Request** on your repository to tell core team members which
    changes to bring in. If you are new to the git environment, you can refer to the
    GitHub tutorial at the following link:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 你只需克隆项目。在克隆的项目中做出所有更改，并在你的仓库上点击**Pull Request**，告诉核心团队成员哪些更改需要合并。如果你不熟悉git环境，可以参考以下链接的GitHub教程：
- en: '[https://help.github.com/](https://help.github.com/)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://help.github.com/](https://help.github.com/)'
- en: Robotium is like Selenium but for Android. This project was started in January
    2010 by *Renas Reda*. He is the founder and main developer for Robotium. The project
    initiated with v1.0 and continues to be followed up with new releases due to new
    requirements. It has support for Android features such as activities, toasts,
    menus, context menus, web views, and remote controls.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium类似于Selenium，但适用于Android。这个项目是由*Renas Reda*在2010年1月启动的。他是Robotium的创始人兼主要开发者。项目从v1.0开始，由于新需求的出现，继续推出新版本。它支持Android功能，如活动、Toasts、菜单、上下文菜单、Web视图和远程控制。
- en: '![Robotium framework](img/8010OS_01_02.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![Robotium框架](img/8010OS_01_02.jpg)'
- en: Let's see most of the Robotium features and benefits for Android test case developers.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看Robotium为Android测试用例开发者提供的功能和好处。
- en: Features and benefits
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 功能和好处
- en: 'Automated testing using Robotium has many features and benefits. The triangularization
    workflow diagram between the user, Robotium, and the Android device clearly explains
    use cases between them:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Robotium进行自动化测试具有许多功能和好处。用户、Robotium和Android设备之间的三角工作流程图清楚地解释了它们之间的用例：
- en: '![Features and benefits](img/8010OS_01_03.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![功能和好处](img/8010OS_01_03.jpg)'
- en: 'The features and benefits of Robotium are as follows:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Robotium的功能和好处如下：
- en: Robotium helps us to quickly write powerful test cases with minimal knowledge
    of the application under test.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium可以帮助我们快速编写强大的测试用例，而无需对被测应用程序有太多了解。
- en: Robotium offers APIs to directly interact with UI controls within the Android
    application such as EditText, TextView, and Button.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium提供API，可以直接与Android应用程序内的UI控件交互，如EditText、TextView和Button。
- en: Robotium officially supports Android 1.6 and above versions.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium正式支持Android 1.6及以上版本。
- en: The Android platform is not modified by Robotium.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium不会修改Android平台。
- en: The Robotium test can also be executed using command prompt.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium测试也可以使用命令提示符执行。
- en: Robotium can be integrated smoothly with Maven or Ant. This helps to add Robotium
    to your project's build automation process.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium可以平滑地与Maven或Ant集成。这有助于将Robotium添加到你的项目构建自动化过程中。
- en: Screenshots can be captured in Robotium (an example screenshot is shown as follows):![Features
    and benefits](img/8010OS_01_04.jpg)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在Robotium中可以捕获屏幕截图（以下是一个示例截图）：![功能和好处](img/8010OS_01_04.jpg)
- en: The test application project and the application project run on the same JVM,
    that is, **Dalvik Virtual Machine** (**DVM**).
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试应用程序项目和应用程序项目在同一个JVM上运行，即**Dalvik虚拟机**（**DVM**）。
- en: It's possible to run Robotium without a source code.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可以在没有源代码的情况下运行Robotium。
- en: Robotium can work with other code coverage measurement tools, such as Cobertura
    and Emma.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium可以与其他代码覆盖率测量工具配合使用，例如Cobertura和Emma。
- en: Robotium can detect the messages that are shown on the screen (Toasts).
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium可以检测屏幕上显示的消息（Toasts）。
- en: Robotium supports Android features such as activities, menu, and context menu.
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium支持Android的活动、菜单和上下文菜单功能。
- en: Robotium automated tests can be implemented quickly. Robotium is built on JUnit,
    because of which it inherits all JUnit's features. The Robotium framework automatically
    handles multiple activities in an Android application.
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium自动化测试可以快速实现。Robotium基于JUnit构建，因此它继承了JUnit的所有功能。Robotium框架可以自动处理Android应用程序中的多个活动。
- en: Robotium test cases are prominently readable, in comparison to standard instrumentation
    tests.
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与标准的instrumentation测试相比，Robotium测试用例的可读性更强。
- en: Scrolling activity is automatically handled by the Robotium framework.
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 滚动活动由Robotium框架自动处理。
- en: Recent versions of Robotium support hybrid applications. Hybrid applications
    use WebViews to present the HTML and JavaScript files in full screen, using the
    native browser rendering engine.
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Robotium的最新版本支持混合应用程序。混合应用程序使用WebViews以全屏显示HTML和JavaScript文件，使用本地浏览器渲染引擎。
- en: Setting up an Android environment
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置Android环境
- en: 'You can set up an Android environment in Eclipse, which is the primary step
    to use Robotium for creating a test project, as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Eclipse中设置Android环境，这是使用Robotium创建测试项目的基本步骤，如下所示：
- en: Requirements
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 需求
- en: 'Before the actual setup of the Android environment for Robotium, you will need
    to check all the following required elements:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在为Robotium设置Android环境之前，你需要检查以下所有必需的元素：
- en: The **Java Development Kit** (**JDK**) must be installed (you can install it
    from [http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html))
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须安装**Java 开发工具包**（**JDK**）（你可以从[http://www.oracle.com/technetwork/java/javase/downloads/index.html](http://www.oracle.com/technetwork/java/javase/downloads/index.html)安装）
- en: Eclipse IDE must be installed
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 必须安装 Eclipse IDE
- en: Standard Eclipse IDE ([http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/))
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标准 Eclipse IDE ([http://www.eclipse.org/downloads/](http://www.eclipse.org/downloads/))
- en: Eclipse IDE with built-in **Android Developer Tools** (**ADT**) ([http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html))
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内置**Android 开发工具**（**ADT**）的 Eclipse IDE ([http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html))
- en: For Robotium for Android Starter, we will use Standard Eclipse IDE, which is
    mostly used by tech enthusiasts and developers across industries. Eclipse IDE
    with built-in ADT has an Android plugin and there is no need to set up the Android
    SDK. Only one of the two Eclipse IDEs is needed.
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Robotium for Android Starter，我们将使用标准 Eclipse IDE，这是各行各业的技术爱好者和开发人员广泛使用的。内置
    ADT 的 Eclipse IDE 有一个 Android 插件，无需设置 Android SDK。两种 Eclipse IDE 中只需选择一种。
- en: To use standard Eclipse IDE for Android Development and setup a new SDK, you
    need to download SDK tools and select the additional SDK packages to install.
    In the existing version of Eclipse IDE, add ADT plugin
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 要使用标准 Eclipse IDE 进行 Android 开发并设置新的 SDK，你需要下载 SDK 工具并选择要安装的附加 SDK 包。在现有版本的
    Eclipse IDE 中，添加 ADT 插件
- en: Downloading the Android SDK
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载 Android SDK
- en: The easiest way to download the Android SDK is by getting a compressed ADT package
    from [http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 下载 Android SDK 最简单的方法是从[http://developer.android.com/sdk/index.html](http://developer.android.com/sdk/index.html)获取一个压缩的
    ADT 包。
- en: The Android SDK provides libraries and developer tools to build, test, and debug
    Android applications.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Android SDK 提供了库和开发工具，用于构建、测试和调试 Android 应用程序。
- en: Unpack it to a safe location on your system. We will use this package in the
    following steps.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 将其解压到系统上的安全位置。在以下步骤中我们将使用这个包。
- en: Installing ADT
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装 ADT
- en: 'You can install ADT by following the listed steps:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以按照列出的步骤安装 ADT：
- en: In Eclipse IDE, Kepler, click on the **Help** menu and then on the **Install
    New Software** option. You will get the following screen, which shows the available
    software depending on the website URL provided in the **Work with:** combo box.
    The **Install New Software** wizard allows you to add new software to your installation,
    as shown in the following screenshot:![Installing ADT](img/8010OS_01_05.jpg)
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Eclipse IDE（Kepler 版本）中，点击**帮助**菜单，然后选择**安装新软件**选项。你会看到以下屏幕，它会根据**工作区间：**组合框中提供的网站
    URL 显示可用软件。**安装新软件**向导允许你将新软件添加到你的安装中，如下截图所示：![安装 ADT](img/8010OS_01_05.jpg)
- en: Using the **Work with:** combo box, you can always select any website to browse
    its contents. You can also browse through all the software from these sites. This
    is useful when you know the software name, but not the actual location.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用**工作区间：**组合框，你可以随时选择任何网站浏览其内容。你也可以浏览这些网站上的所有软件。当你知道软件名称但不知道实际位置时，这很有用。
- en: Click on the **Add** button in the **Install New Software** window that will
    open the **Add Repository** window, which looks like the following screenshot.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**安装新软件**窗口中点击**添加**按钮，这将打开**添加仓库**窗口，如下截图所示。
- en: In this window, enter a name in the **Name** field and the following URL in
    the **Location** field and click on the **Ok** button to download the Android
    ADT:![Installing ADT](img/8010OS_01_06.jpg)
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在此窗口中，在**名称**字段中输入名称，在**位置**字段中输入以下 URL，然后点击**确定**按钮以下载 Android ADT：![安装 ADT](img/8010OS_01_06.jpg)
- en: Eclipse will now search for all the available tools from this location and enlist
    them as follows:![Installing ADT](img/8010OS_01_07.jpg)
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Eclipse 现在将从这个位置搜索所有可用的工具，并将它们列出来，如下所示：![安装 ADT](img/8010OS_01_07.jpg)
- en: Select all the tools and click on **Next.** This will open up a window, shown
    in the following screenshot, with a list of all the components that will be installed
    as a plugin in Eclipse:![Installing ADT](img/8010OS_01_08.jpg)
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所有工具并点击**下一步**。这将打开一个窗口，如下截图所示，列出所有将作为 Eclipse 插件安装的组件：![安装 ADT](img/8010OS_01_08.jpg)
- en: Click on the **Next** button present in the **Install Details** window. It will
    start downloading all the mentioned tools after the license verification is done.
    After successful installation, you will be asked to restart Eclipse IDE. Restart
    it!
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 **安装详情** 窗口中点击 **下一步** 按钮。在完成许可验证后，它将开始下载所有提到的工具。成功安装后，系统会提示你重启 Eclipse IDE。重启它！
- en: Adding the Android SDK location
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加 Android SDK 位置
- en: 'To add the Android SDK to Eclipse, follow the listed steps:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 要将 Android SDK 添加到 Eclipse，请按照列出的步骤操作：
- en: In Eclipse, under the **Window** menu, click on **Preferences** (Mac OS X users
    may find **Preferences** under the **Eclipse** menu). Check the **Android** tab
    (The presence of this tab clearly indicates that the Android ADT plugin is successfully
    installed.) and a window, as shown in the following screenshot, will appear. The
    SDK location informs Eclipse where the Android SDK is located in the system.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Eclipse 中，从 **窗口** 菜单下，点击 **首选项**（Mac OS X 用户可能在 **Eclipse** 菜单下找到 **首选项**）。检查
    **Android** 选项卡（此选项卡的存在清楚地表明 Android ADT 插件已成功安装）并会出现如下截图所示的窗口。SDK 位置告诉 Eclipse
    Android SDK 在系统中的位置。
- en: If the SDK location is not present, browse to the `SDK` unzipped directory and
    click on **OK**. The list of SDK targets will be reloaded only when the proper
    SDK location is provided and the **Apply** or **OK** button is clicked on. These
    targets are taken from the SDK itself.
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 SDK 位置不存在，浏览到解压后的 `SDK` 目录并点击 **确定**。只有在提供了正确的 SDK 位置并点击了 **应用** 或 **确定**
    按钮后，SDK 目标列表才会重新加载。这些目标来自 SDK 本身。
- en: 'If you still don''t get any entry in the list of targets, this means your Android
    SDK is not installed properly. Install the Android SDK as mentioned in step 3
    and check for the SDK target in the list:'
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果你仍然在目标列表中没有看到任何条目，这意味着你的 Android SDK 没有正确安装。按照步骤 3 所述安装 Android SDK，并在列表中检查
    SDK 目标：
- en: '![Adding the Android SDK location](img/8010OS_01_09.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![添加 Android SDK 位置](img/8010OS_01_09.jpg)'
- en: Installing the latest SDK version
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装最新 SDK 版本
- en: 'Before actually creating the virtual device, you need to install the latest
    version of SDK. Go to **Android SDK Manager** from the **Window** menu, and a
    window, as shown in the following screenshot, will appear. Select the latest version
    of the SDK installed. You can select any version based on your choice and click
    on **Install Packages…**. Once installed, restart Eclipse if the package''s installation
    changes are not reflected:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际创建虚拟设备之前，你需要安装最新版本的 SDK。从 **窗口** 菜单中进入 **Android SDK 管理器**，会出现如下截图所示的窗口。选择已安装的最新
    SDK 版本。你可以根据你的选择选择任何版本，并点击 **安装包…**。安装完成后，如果包安装更改没有反映出来，请重启 Eclipse：
- en: '![Installing the latest SDK version](img/8010OS_01_10.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![安装最新 SDK 版本](img/8010OS_01_10.jpg)'
- en: Setting up the AVD
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置 AVD
- en: The initial configuration of the Android Environment is almost done. Now, we
    are only left with the set up of the AVD.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Android 环境的初始配置几乎完成。现在，我们只需要设置 AVD。
- en: An AVD is used to run Android applications. It is recommended that you use an
    Android device to run applications. But within the scope of this book, we will
    only use AVD (Android Emulator) to run apps.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: AVD 用于运行 Android 应用程序。建议你使用 Android 设备来运行应用程序。但在本书的范围内，我们将只使用 AVD（Android 模拟器）来运行应用。
- en: You can create a new AVD from the **AVD Manager** option, present under the
    **Window** menu in Eclipse. Click on **New** in the AVD screen and you will see
    a window like the following screenshot. Fill in the following details and click
    on **OK**.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以从 Eclipse 中 **窗口** 菜单下的 **AVD 管理器** 选项中创建一个新的 AVD。在 AVD 屏幕上点击 **新建**，你会看到一个如下截图所示的窗口。填写以下详细信息并点击
    **确定**。
- en: '![Setting up the AVD](img/8010OS_01_11.jpg)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![设置 AVD](img/8010OS_01_11.jpg)'
- en: Once it is created, it is shown under the Android SDK and the AVD manager screen.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 创建后，它将显示在 Android SDK 和 AVD 管理器屏幕下。
- en: 'To run the created AVD, right-click on the project and navigate to **Run As**
    | **Android Application**. A **Deployment Target Selection Mode** window will
    pop up, asking you to select an AVD or a connected Android device to run your
    application; select either one of them and the application gets installed on the
    selected device/AVD. The following screenshot is of the **Deployment Target Selection
    Mode** window:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行创建的 AVD，请右键点击项目并导航到 **运行方式** | **Android 应用程序**。将会弹出一个 **部署目标选择模式** 窗口，要求你选择一个
    AVD 或连接的 Android 设备来运行你的应用程序；选择其中任何一个，应用程序就会安装在所选设备/AVD 上。以下截图是 **部署目标选择模式** 窗口：
- en: '![Setting up the AVD](img/8010OS_01_12.jpg)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![设置 AVD](img/8010OS_01_12.jpg)'
- en: By this point, you should have a working setup of the Android Environment to
    start with Robotium's test case writing and execution. You are free to play around
    and discover more about it.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你应该已经拥有了一个可以工作的 Android 环境来开始使用 Robotium 编写和执行测试用例。你可以自由地探索并了解更多相关信息。
- en: Summary
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we've learnt about the Robotium framework and what are the
    different steps you need to perform to make your Android Environment ready to
    get started with the framework.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了 Robotium 框架以及需要执行哪些不同的步骤来让你的 Android 环境准备好使用这个框架。
- en: In the next chapter, we'll start implementing our first test project using Robotium.
    So, keep reading if you want to learn about test case implementation.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始使用 Robotium 实现我们的第一个测试项目。如果你想要学习关于测试用例实现的内容，请继续阅读。
