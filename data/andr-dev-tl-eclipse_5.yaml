- en: Chapter 5. Adding RadioButton, CheckBox, Menu, and Preferences
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第5章. 添加单选按钮、复选框、菜单和首选项
- en: 'Are you excited enough? If not, you should be; we are half way through and
    ready to explore some more of the widgets that are commonly used and have a lot
    of significance in any application. The things to be covered in this chapter are
    adding a menu, check box, radio button, and preference to the application. We
    will make use of these widgets and create the `DistanceConverter` application
    .The main objective of this application is to convert distance entered in km/m
    to mile/foot and yards. The following are the steps that we cover in this chapter
    to successfully create the `DistanceConverter` application:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否足够兴奋？如果没有，你应该感到兴奋；我们已经完成了一半，准备探索更多常用并且在任何应用程序中都有重要意义的组件。本章将要介绍的是向应用程序添加菜单、复选框、单选按钮和首选项。我们将使用这些组件并创建`DistanceConverter`应用程序。该应用程序的主要目标是转换输入的公里/米到英里/英尺和码。以下是我们在本章中涵盖的步骤，以成功创建`DistanceConverter`应用程序：
- en: 'Creating a project: `DistanceConverter`'
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建项目：`DistanceConverter`
- en: Adding a RadioGroup.RadioButton
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加单选组.单选按钮
- en: Adding a CheckBox
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加复选框
- en: Adding a menu
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 添加菜单
- en: Defining the Strings
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义字符串
- en: Defining the Preferences screen
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义首选项屏幕
- en: Hook up
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接
- en: Binding menu and Preference
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 绑定菜单和首选项
- en: Getting values from Preference
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从首选项获取值
- en: Running the application
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: Creating a new project
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建新项目
- en: 'The `DistanceConverter` application will allow users to input distance in km/m
    and convert them to miles, feet, and yards simultaneously. We have already covered
    creating a new project in the earlier chapters, hence we will keep it very short
    here. Let''s create a new project by navigating to **File** | **New** | **Others**
    | **Android Application Project**. Enter the fitting data from the following table
    in the corresponding wizards:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '`DistanceConverter`应用程序将允许用户输入公里/米，并将它们同时转换为英里、英尺和码。我们已经在之前的章节中介绍了如何创建新项目，因此这里我们会简短说明。让我们通过导航到**文件**
    | **新建** | **其他** | **Android应用程序项目**来创建一个新项目。在相应的向导中输入以下表格中的合适数据：'
- en: '| Property | Value |'
  id: totrans-14
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 值 |'
- en: '| --- | --- |'
  id: totrans-15
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| Application name | `DistanceCon` |'
  id: totrans-16
  prefs: []
  type: TYPE_TB
  zh: '| 应用程序名称 | `DistanceCon` |'
- en: '| Project Name | `DistanceCon` |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 项目名称 | `DistanceCon` |'
- en: '| Package Name | `com.packt.ch05.distancecon` |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| 包名称 | `com.packt.ch05.distancecon` |'
- en: '| Template | `BlankActivity` |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| 模板 | `BlankActivity` |'
- en: '| Activity | `MainActivity` |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| 活动 | `MainActivity` |'
- en: '| Layout | `activity_main` |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| 布局 | `activity_main` |'
- en: 'The following screen shows some data being filled in the wizard as per the
    preceeding table:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 以下屏幕显示了一些根据前表在向导中填写的数据：
- en: '![Creating a new project](img/1103OS_05_01.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![创建新项目](img/1103OS_05_01.jpg)'
- en: Adding a RadioGroup, RadioButton, and a TextField
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加单选组、单选按钮和文本字段
- en: Android SDK provides two types of radio controls to be used in conjunction,
    where only one control can be chosen at a given time. RadioGroup (`android.widget.RadioGroup`)
    is used to encapsulate a set of RadioButton controls for this purpose.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓SDK提供了两种单选控件，用于同时使用，在任何给定时间只能选择一个控件。单选组（`android.widget.RadioGroup`）用于封装一组单选按钮（RadioButton）控件，以达到此目的。
- en: 'Before we add the RadioGroup and RadioButton control, let''s add the label
    `Distance` and the TextField to allow users to provide inputs. Open `the activity_main.xml`
    file, and add following entries:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们添加单选组和单选按钮控件之前，让我们添加标签`Distance`和文本字段以允许用户输入。打开`activity_main.xml`文件，并添加以下条目：
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s get back and add the RadioGroup and RadioButtons in it. Add the following
    entries to the same file:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到同一文件中添加单选组和单选按钮。添加以下条目：
- en: '[PRE1]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We have made `android:checked="true"` to be checked by default. After this step
    we would see some errors, don't worry about them as we are yet to define these
    strings.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经设置为默认选中`android:checked="true"`。完成这一步后，我们可能会看到一些错误，但不用担心，因为我们还没有定义这些字符串。
- en: 'The following screenshot is what we may see after adding the preceeding code
    in the XML file:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图是我们在XML文件中添加上述代码后可能看到的内容：
- en: '![Adding a RadioGroup, RadioButton, and a TextField](img/1103OS_05_02.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![添加单选组、单选按钮和文本字段](img/1103OS_05_02.jpg)'
- en: Adding a CheckBox
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加复选框
- en: 'We will use CheckBox to allow users to have a conversion facility available
    for multiple types of conversions, at once. To add a CheckBox, add the following
    code in `activity_main.xml`. We will have three checkboxes for each: Mile, Foot,
    and Yard; the same can be achieved using:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用复选框（CheckBox）让用户一次性选择多种转换设施。要添加复选框，请在`activity_main.xml`中添加以下代码。我们将有三个复选框，分别对应：英里、英尺和码；使用以下方法可以实现同样的效果：
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Also add a button, such that upon clicking on it the conversion kicks off:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 还需添加一个按钮，点击它时启动转换：
- en: '[PRE3]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The resulting screen should appear as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 结果屏幕应如下所示：
- en: '![Adding a CheckBox](img/1103OS_05_03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![添加复选框](img/1103OS_05_03.jpg)'
- en: Adding a menu
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加菜单
- en: 'We will invoke the `Preference` screen from the menu. There are essentially
    three different types of menus available: Options menu, Context menu, and Pop
    up Menu. Here, we will use the Options menu for our purpose. To add the menu under
    `res/menu` create a new file named `prefsetting.xml`. Add the menu item, using
    the `<item></item>` element by adding the following code:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从菜单中调用`Preference`屏幕。实际上有三种不同的菜单可供选择：选项菜单、上下文菜单和弹出菜单。这里，我们将使用选项菜单来实现目的。在`res/menu`下添加菜单，创建一个名为`prefsetting.xml`的新文件。使用`<item></item>`元素添加以下代码来添加菜单项：
- en: '[PRE4]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The name of the menu item is set as `android:title="Preferences"`. The `android:showAsAction`
    keyword indicates how an item should appear in the action bar. For more menu options
    and attributes please refer to the following URLs:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 菜单项的名称设置为`android:title="Preferences"`。`android:showAsAction`关键字表示项目应如何在操作栏中显示。更多菜单选项和属性请参考以下URL：
- en: '[http://developer.android.com/guide/topics/ui/menus.html](http://developer.android.com/guide/topics/ui/menus.html)'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/guide/topics/ui/menus.html](http://developer.android.com/guide/topics/ui/menus.html)'
- en: '[http://developer.android.com/guide/topics/resources/menu-resource.html](http://developer.android.com/guide/topics/resources/%E2%80%A8menu-resource.html)'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/guide/topics/resources/menu-resource.html](http://developer.android.com/guide/topics/resources/menu-resource.html)'
- en: Defining the Strings
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义字符串
- en: 'Under the **res/values** tab, open `strings.xml` and add the following entries:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在**res/values**标签下，打开`strings.xml`并添加以下条目：
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: After this step all the previous verbose errors should disappear.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 完成此步骤后，之前的所有冗余错误应消失。
- en: Defining the Preference screen
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义偏好设置屏幕
- en: 'Preferences are an important aspect of the android applications. It allows
    users to have the choice to modify and personalize it. Preferences can be set
    two ways: the first method is to create the `preferences.xml` file in the `res/xml`
    directory and the second method is to set the preferences from the code. We will
    use the former, also the easier one, by creating the `preferences.xml` file as
    follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 偏好设置是安卓应用的重要方面。它允许用户选择修改和个性化设置。偏好设置可以通过两种方式设置：第一种是在`res/xml`目录中创建`preferences.xml`文件，第二种是从代码中设置偏好设置。我们将使用前者，也就是更简单的方法，通过创建`preferences.xml`文件，如下所示：
- en: 'Create the `xml` directory, if it does not exit, and add the `preferences.xml`
    file. Every preference needs the following attributes, as shown in the table:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不存在，则创建`xml`目录，并添加`preferences.xml`文件。每个偏好设置都需要以下属性，如下表所示：
- en: '| Property | Description |'
  id: totrans-53
  prefs: []
  type: TYPE_TB
  zh: '| 属性 | 描述 |'
- en: '| --- | --- |'
  id: totrans-54
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `android:key` | Used to get the preference value |'
  id: totrans-55
  prefs: []
  type: TYPE_TB
  zh: '| `android:key` | 用于获取偏好设置值 |'
- en: '| `android:title` | To specify the android title |'
  id: totrans-56
  prefs: []
  type: TYPE_TB
  zh: '| `android:title` | 指定安卓标题 |'
- en: '| `android:summary` | Summary about preferences |'
  id: totrans-57
  prefs: []
  type: TYPE_TB
  zh: '| `android:summary` | 关于偏好设置的摘要 |'
- en: '| `android:defaultValue` | Optional, used to set the default values |'
  id: totrans-58
  prefs: []
  type: TYPE_TB
  zh: '| `android:defaultValue` | 可选，用于设置默认值 |'
- en: 'Usually, there are five different preference views, as listed in the following
    table:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 通常，有以下五种不同的偏好设置视图，如下表所示：
- en: '| Views | Description |'
  id: totrans-60
  prefs: []
  type: TYPE_TB
  zh: '| 视图 | 描述 |'
- en: '| --- | --- |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `CheckBoxPreference` | Simple checkbox returns true/false |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| `CheckBoxPreference` | 简单的复选框，返回true/false |'
- en: '| `ListPreference` | Shows RadioGroup, only 1 item selected |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| `ListPreference` | 显示RadioGroup，仅选中1个条目 |'
- en: '| `EditTextPreference` | Shows dialog box edit TextView, returns String |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| `EditTextPreference` | 显示对话框编辑TextView，返回字符串 |'
- en: '| `RingTonePreference` | RadioGroup that shows ringtone |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| `RingTonePreference` | 显示铃声的RadioGroup |'
- en: '| `PreferenceCategory` | Is a category with preferences |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '| `PreferenceCategory` | 带有偏好设置的类别 |'
- en: 'We will make use of `CheckBoxPreference`, `ListPreference`, and `PreferenceCategory`
    in our application. Let''s add these preferences view in the `preferences.xml`
    file we have created. Add the following entries:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在应用中使用`CheckBoxPreference`、`ListPreference`和`PreferenceCategory`。现在在已创建的`preferences.xml`文件中添加这些偏好设置视图。添加以下条目：
- en: '[PRE6]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This will result in spitting a lot of errors, however we will now solve this
    by defining strings. `ListPreference` provides a list and allows the selection
    of only one item, and hence, contains `android:entries,` and `android:entryValues`
    takes array. Now we will provide an array declaration for the same, to do that
    under `res/values`, if it does not exist, create the file `arrays.xml` and add
    the following entries:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这将导致出现很多错误，但是我们现在将通过定义字符串来解决这些问题。`ListPreference`提供一个列表，并且只允许选择一个项目，因此包含`android:entries,`和`android:entryValues`取数组。现在我们将为同样的内容提供数组声明，为此，在`res/values`下，如果不存在，创建`arrays.xml`文件并添加以下条目：
- en: '[PRE7]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Define the following strings that are used in the `preferences.xml` file in
    the `strings.xml` file.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在`strings.xml`文件中定义以下字符串，这些字符串在`preferences.xml`文件中使用。
- en: '[PRE8]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Now that we are done defining the Preference screen, let''s do some work to
    show it. The Preference framework comes with the activity class `android.preference`.
    `PreferenceActivity` needs to be overridden with our class. Create a class `UserSettings.java`
    under the `com.packt.ch05.distnacecon` package and write the following code:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了偏好设置屏幕，让我们做一些工作来展示它。偏好设置框架带有`android.preference`的活动类。需要用我们的类覆盖`PreferenceActivity`。在`com.packt.ch05.distnacecon`包下创建一个`UserSettings.java`类，并编写以下代码：
- en: '[PRE9]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '`addPreferencesFromResources()` loads the Preference screen from the `preferences.xml`
    file.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '`addPreferencesFromResources()`从`preferences.xml`文件加载偏好设置屏幕。'
- en: Hook up
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进行连接
- en: After doing all the hard work of defining and putting things in place, let's
    get in to do some action by hooking up everything with the main screen (Main Activity).
    Open the `MainActivity.java` file and let's binds things in now.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义并放置好所有东西之后，让我们开始通过将所有内容与主屏幕（主活动）连接起来进行一些操作。打开`MainActivity.java`文件，现在让我们绑定东西。
- en: 'Initialize the widgets as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 按以下方式初始化小部件：
- en: '[PRE10]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'The `onCreate` method is first called to fetch the instances of widgets as
    follows:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 首先调用`onCreate`方法来获取小部件的实例，如下所示：
- en: '[PRE11]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Binding the menu and Preference
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绑定菜单和偏好设置
- en: 'We specify our earlier defined menu from the resources file `prefesetting.xml`,
    by `getMenuInflater().inflate(R.menu.prefsetting, menu)` command as follows:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们通过`getMenuInflater().inflate(R.menu.prefsetting, menu)`命令从资源文件`prefesetting.xml`中指定我们之前定义的菜单，如下所示：
- en: '[PRE12]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'On the menu item select the `override` method as follows:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在菜单项选择以下`override`方法：
- en: '[PRE13]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '`onActivityResult` is called receiving the result from the following code,
    so perform the operation needed here:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '`onActivityResult`在以下代码接收结果时被调用，因此在这里执行所需的操作：'
- en: '[PRE14]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Getting values from Preferences
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从偏好设置中获取值
- en: Now, we want to reflect the value set in the Preference screen onto the main
    screen to show personalization.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们想要将偏好设置屏幕中设定的值反映到主屏幕上，以展示个性化设置。
- en: We get the values from the Preference screen and set it back to the main screen
    in `showPreferenceSettings()`. We get the preferences values via `PreferenceManager`.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们从偏好设置屏幕获取值，并在`showPreferenceSettings()`中将其设置回主屏幕。我们通过`PreferenceManager`获取偏好设置值。
- en: '[PRE15]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: On clicking the **Calculate** button, the conversion should happen and the result
    should be shown. To show the result we make use of the ToastView command here.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击**计算**按钮时，应进行转换并显示结果。为了显示结果，我们在这里使用ToastView命令。
- en: 'The `onClick` function is called when the button is clicked, we then get the
    RadioButton values and the checked CheckBox values and call the corresponding
    convert functions which is then shown via ToastView with the following code:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 当点击按钮时，会调用`onClick`函数，然后我们获取单选按钮的值和选中的复选框的值，并调用相应的转换函数，然后通过以下代码通过ToastView显示：
- en: '[PRE16]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Let''s add the conversion method for each type as follows:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们按照以下方式为每种类型添加转换方法：
- en: '[PRE17]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Add the other conversion method for the others as well.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 为其他选项也添加其他的转换方法。
- en: Finally, add the following tag which denotes an activity in the `AndroidManifest.xml`
    file.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，在`AndroidManifest.xml`文件中添加以下标签，表示一个活动。
- en: '[PRE18]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: The complete code and resources are available in a downloadable source code.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 完整的代码和资源可以在可下载的源代码中获得。
- en: Run the application
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: 'When we run the application, the following screen should appear where the first
    screen accepts the input and the output appears as ToastView popup on clicking
    the **Calculate** button:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们运行应用程序时，应该出现以下屏幕，其中第一个屏幕接受输入，点击**计算**按钮时输出作为ToastView弹出显示：
- en: '![Run the application](img/1103OS_05_04.jpg)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/1103OS_05_04.jpg)'
- en: 'The following screenshot shows the Preference screen:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了偏好设置屏幕：
- en: '![Run the application](img/1103OS_05_05.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/1103OS_05_05.jpg)'
- en: Summary
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本章小结
- en: In this chapter we have learned about how to get going with widgets, such as
    CheckBox, RadioButton together with RadioButton, menu, and creating custom Preferences
    view and getting values from it. Also, using these concepts we have created the
    `DistanceConverter` application.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了如何开始使用诸如复选框（CheckBox）、单选按钮（RadioButton）以及与其配合使用的菜单、创建自定义偏好设置视图并从中获取值等小部件。此外，我们使用这些概念创建了`DistanceConverter`应用程序。
- en: In the next chapter, we will learn how to handle the various screen types and
    orientations for this application.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何处理这个应用程序的各种屏幕类型和方向。
