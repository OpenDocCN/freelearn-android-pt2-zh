- en: Chapter 2. Important Features of the IDE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二章. IDE的重要特性
- en: 'This chapter describes several important features in Eclipse and an ADT Environment
    useful to develop an Android app. It is separated into the following topics:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本章介绍Eclipse和ADT环境中的几个重要特性，这些特性对于开发Android应用非常有用。它分为以下主题：
- en: Project explorer
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 项目浏览器
- en: Code editor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代码编辑器
- en: Graphical user interface designer
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图形用户界面设计师
- en: Properties window
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 属性窗口
- en: Debugging pane
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 调试窗格
- en: Dalvik Debug Monitor Server (DDMS)
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Dalvik调试监控服务器（DDMS）
- en: SDK manager
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: SDK管理器
- en: Android virtual device manager
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android虚拟设备管理器
- en: Running an application
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 运行应用
- en: Getting help
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 获取帮助
- en: Project explorer
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 项目浏览器
- en: 'The project explorer is a tool to view all folders and files under a project.
    By double-clicking the item, one can open and edit the file. When we create a
    new project, which will be discussed thoroughly in [Chapter 3](ch03.html "Chapter 3. Creating
    a New Android Project"),*Creating a New Project*, the ADT will automatically create
    all these default folders and files, as shown in the following screenshot. Depending
    on the project, we may ignore or modify all these files. These are brief descriptions
    of the default folders and files in your Android project:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 项目浏览器是一个工具，用于查看项目下的所有文件夹和文件。通过双击项目，可以打开和编辑文件。当我们创建一个新项目时，将在[第三章](ch03.html "第三章.
    创建一个新的Android项目")*创建新项目*中详细讨论，ADT将自动创建所有这些默认的文件夹和文件，如下面的截图所示。根据项目，我们可能忽略或修改所有这些文件。以下是Android项目中默认文件夹和文件的简要说明：
- en: '![Project explorer](img/1103OS-02-01.jpg)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![项目浏览器](img/1103OS-02-01.jpg)'
- en: Project explorer
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 项目浏览器
- en: 'The table that follows contains the brief description of the important folders
    and files available in the project tree:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 下表包含了项目树中可用的重要文件夹和文件的简要描述：
- en: '| Folder | Functions |'
  id: totrans-17
  prefs: []
  type: TYPE_TB
  zh: '| 文件夹 | 功能 |'
- en: '| --- | --- |'
  id: totrans-18
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `/src` | the Java codes are here |'
  id: totrans-19
  prefs: []
  type: TYPE_TB
  zh: '| `/src` | 这里存放Java代码 |'
- en: '| `/gen` | generated automatically |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| `/gen` | 自动生成 |'
- en: '| `/assets` | put your fonts, videos, sounds here. Is more like a file system
    and can also place css, javascript files and so on. |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| `/assets` | 放置字体、视频、声音等。更像是一个文件系统，也可以放置CSS、JavaScript文件等。 |'
- en: '| `/libs` | external library (normally in JAR) |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| `/libs` | 外部库（通常为JAR格式） |'
- en: '| `/res` | images, layout, and global variables |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| `/res` | 存放图像、布局和全局变量 |'
- en: '| `/drawable-xhdpi` | for extra high specification devices (for examples Tablet,
    Galaxy SIII, HTC One X) |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| `/drawable-xhdpi` | 针对超高性能设备（例如平板电脑、Galaxy SIII、HTC One X） |'
- en: '| `/drawable-hdpi ` | for high specification phones (Examples: SGSI, SGSII)
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| `/drawable-hdpi` | 针对高性能手机（例如：SGSI、SGSII） |'
- en: '| `/drawable-mdpi` | for medium specification phones (Examples: Galaxy W, HTC
    Desire) |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| `/drawable-mdpi` | 针对中等性能手机（例如：Galaxy W、HTC Desire） |'
- en: '| `/drawable-ldpi ` | for low specification phones (Examples: Galaxy Y, HTC
    WildFire ) |'
  id: totrans-27
  prefs: []
  type: TYPE_TB
  zh: '| `/drawable-ldpi` | 针对低性能手机（例如：Galaxy Y、HTC WildFire） |'
- en: '| `/layout ` | all XML files for the screen(s) layout |'
  id: totrans-28
  prefs: []
  type: TYPE_TB
  zh: '| `/layout` | 所有屏幕布局的XML文件 |'
- en: '| `/menu` | XML files for the screen menu |'
  id: totrans-29
  prefs: []
  type: TYPE_TB
  zh: '| `/menu` | 屏幕菜单的XML文件 |'
- en: '| `/values` | global constants |'
  id: totrans-30
  prefs: []
  type: TYPE_TB
  zh: '| `/values` | 全局常量 |'
- en: '| `/values-v11` | template style definitions for devices with Honeycomb (Android
    API level 11) |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| `/values-v11` | 针对Honeycomb（Android API级别11）设备的模板样式定义 |'
- en: '| `/values-v14` | template style definitions for devices with ICS (Android
    API level 14) |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| `/values-v14` | 针对ICS（Android API级别14）设备的模板样式定义 |'
- en: '| `AndroidManifest.xml` | One of the important files to define the apps. This
    is the first file located by the Android OS in order to run the app. It contains
    the app''s properties, activity declarations and list of permissions. |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| `AndroidManifest.xml` | 定义应用的重要文件之一。这是Android OS为了运行应用而首先定位的文件。它包含应用的属性、活动声明和权限列表。
    |'
- en: Code editor
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码编辑器
- en: 'This is the tool where the programming is cooked. Several important features
    of the Eclipse code editor (programmers love to have) are intelligence and the
    error marker (refer screenshot to follow). Code completion suggests objects, methods
    or variables available to be incorporated in our code, while the error marker
    will notify any syntax error immediately without having to compile the code. These
    features help a lot for faster programming:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这是编程的“烹饪”工具。Eclipse代码编辑器（程序员喜欢拥有的）的几个重要特性是智能感知和错误标记（参考截图以了解）。代码补全建议将可用的对象、方法或变量整合到我们的代码中，而错误标记会在不编译代码的情况下立即通知任何语法错误。这些特性对于快速编程非常有帮助：
- en: '![Code editor](img/1103OS-02-02.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![代码编辑器](img/1103OS-02-02.jpg)'
- en: The code editor
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 代码编辑器
- en: 'The code editor''s appearance is customizable to suit your style and preference.
    To change the editor''s environment, such as the background color or the code''s
    font styles, right-click on the editor and choose **Preferences**, and then navigate
    to **General** | **Appearance** | **Colors and Fonts**. Then click on **Edit**
    to customize, refer the following screenshot:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 代码编辑器的外观可以根据您的风格和偏好进行自定义。要更改编辑器环境（如背景色或代码字体样式），请在编辑器上右键单击并选择**首选项**，然后导航到**常规**
    | **外观** | **颜色和字体**。然后点击**编辑**来自定义，参考以下截图：
- en: '![Code editor](img/1103OS-02-03.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![代码编辑器](img/1103OS-02-03.jpg)'
- en: Customizing the Code Editor's appearance
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 自定义代码编辑器的外观
- en: 'There are also several other XML code editors that help during design and development.
    They come in two flavors: GUI based; where things can be manipulated with a GUI
    interface, useful for someone who is uncomfortable editing the XML code manually;
    Source based: where XML codes can be manually edited. Some of the editors are
    listed as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些其他的XML代码编辑器，在设计和开发过程中提供帮助。它们分为两种类型：基于GUI的，可以通过GUI界面操作，适合不习惯手动编辑XML代码的人；基于源代码的：可以手动编辑XML代码。以下列出了一些编辑器：
- en: Graphical layout editor
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图形布局编辑器
- en: Edit and design your XML layout files with a drag and drop interface. The layout
    editor renders your interface as well, offering you a preview as you design your
    layouts.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 使用拖放界面编辑和设计你的XML布局文件。布局编辑器还能渲染你的界面，让你在设计布局时预览效果。
- en: Android manifest editor
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Android清单编辑器
- en: Edit Android manifests with a simple graphical interface. This editor is invoked
    when you open an `AndroidManifest.xml` file.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单的图形界面编辑Android清单。当你打开一个`AndroidManifest.xml`文件时，会调用此编辑器。
- en: Menu editor
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 菜单编辑器
- en: Edit menu groups and items with a simple graphical interface. This editor is
    invoked when you open an XML file with a `<menu>` declared (usually located in
    the `res/menu` folder).
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单的图形界面编辑菜单组和条目。当你打开一个声明了`<menu>`的XML文件时（通常位于`res/menu`文件夹中），会调用此编辑器。
- en: Resources editor
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源编辑器
- en: Edit resources with a simple graphical interface. This editor is invoked when
    you open an XML file with a `<resources>` tag declared.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单的图形界面编辑资源。当你打开一个声明了`<resources>`标签的XML文件时，会调用此编辑器。
- en: XML resources editor
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML资源编辑器
- en: Edit XML resources with a simple graphical interface. This editor is invoked
    when you open an XML file.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用简单的图形界面编辑XML资源。当你打开一个XML文件时，会调用此编辑器。
- en: Graphical user interface designer
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图形用户界面设计师
- en: 'This is the interface designer. It functions as the GUI editor for controls
    or a **widget** to the application screen. There are three sections of this GUI
    designer, the palette, configuration chooser and the screen layout preview, as
    shown in the following screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这是界面设计师。它作为应用程序屏幕上的控件或**小部件**的GUI编辑器。此GUI设计师分为三个部分：调色板、配置选择器和屏幕布局预览，如下面的屏幕截图所示：
- en: '![Graphical user interface designer](img/1103OS-02-04.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图形用户界面设计师](img/1103OS-02-04.jpg)'
- en: The ADT's GUI designer
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: ADT的GUI设计师
- en: 'The **Palette** contains all the GUI controls (widgets) that can help us design
    the interface. The available controls depend upon the API level we choose during
    creation of the project. Some of the common controls are: button, text field,
    radio button, check box, multimedia controls and so on.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**调色板**包含了所有可以帮助我们设计界面的GUI控件（小部件）。可用的控件取决于我们在创建项目时选择的API级别。一些常见的控件有：按钮、文本字段、单选按钮、复选框、多媒体控件等等。'
- en: The configuration chooser
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置选择器
- en: It lets you decide the appearance of your app view across different screen sizes,
    orientation, densities and themes.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 它让你决定你的应用视图在不同屏幕尺寸、方向、密度和主题下的外观。
- en: The screen layout designer
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 屏幕布局设计师
- en: It is a canvas to put things up and try out different designs. It is a designing
    workspace. Also, it provides a preview of how the screen may appear in a device.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它是一个放置物品并尝试不同设计的画布。它是一个设计工作区。同时，它还提供了屏幕在设备中可能出现的预览。
- en: Properties window
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 属性窗口
- en: 'It helps in editing properties of the widgets. All the properties corresponding
    to widgets can be viewed and edited via this window visually. Though the properties
    can be edited directly by editing the XML file, this GUI interface eases it. All
    the changes made are persisted to XML file instantly and automatically. The following
    screenshot shows the **Properties** window:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 它帮助编辑小部件的属性。所有与小部件对应的属性都可以通过这个窗口可视化地查看和编辑。尽管可以通过编辑XML文件直接编辑属性，但这个GUI界面简化了操作。所有更改都会立即自动保存到XML文件中。以下截图展示了**属性**窗口：
- en: '![Properties window](img/1103OS-02-05.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![属性窗口](img/1103OS-02-05.jpg)'
- en: The Properties window
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 属性窗口
- en: Debugging pane
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试窗格
- en: 'In the debugging perspective, we see the syntax errors, warning, console messages,
    run-time errors, variable transition (if breakpoint is used) and **LogCat.** **LogCat**
    is useful to trace any activity happening inside the device or emulator. The following
    screenshot shows the window to list all code problems, such as warnings or syntax
    errors:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在调试视图中，我们可以看到语法错误、警告、控制台消息、运行时错误、变量过渡（如果使用了断点）以及**LogCat。** **LogCat**有助于追踪设备或模拟器内发生的任何活动。以下截图展示了列出所有代码问题（如警告或语法错误）的窗口：
- en: '![Debugging pane](img/1103OS-02-06.jpg)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![调试窗格](img/1103OS-02-06.jpg)'
- en: Problems warnings or code syntax errors
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 问题警告或代码语法错误
- en: 'A sample of console messages from the ADB is listed in the following screenshot.
    As a java person, we would be tempted to use `System.out.println()` to split out
    message and objects'' values; which are shown in the **LogCat** view, however
    it is advisable to use `Log` class for this purpose, reason being we can filter,
    print different colors and define log types. This could be one way of debugging
    your program, by displaying variables'' values or parameters. To use `Log`, import
    `android.util.Log`, and use one of the following methods to print messages to
    **LogCat**:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图展示了一个来自ADB的控制台消息示例。作为Java开发者，我们可能想使用`System.out.println()`来输出消息和对象值；这些在**LogCat**视图中显示，然而建议为此目的使用`Log`类，因为我们可以过滤、打印不同颜色并定义日志类型。这可以是调试程序的一种方式，通过显示变量值或参数。要使用`Log`，请导入`android.util.Log`，并使用以下方法之一将消息打印到**LogCat**：
- en: '[PRE0]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![Debugging pane](img/1103OS-02-07.jpg)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![调试窗格](img/1103OS-02-07.jpg)'
- en: The Android Debug Bridge console (displays ADB activities)
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: Android调试桥接控制台（显示ADB活动）
- en: '**LogCat** is used to view the internal log of the Android system, as shown
    in the following screenshot. It is useful to trace any activity happening inside
    the device or emulator through the ADB (Android Debug Bridge). ADB is a tool to
    connect your PC with the virtual device or actual device. Without it, the developer
    cannot directly transmit the APK file to an Android device/emulator:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '**LogCat**用于查看Android系统的内部日志，如下截图所示。通过ADB（Android调试桥）追踪设备或模拟器内的任何活动非常有效。ADB是一个将你的PC与虚拟设备或实际设备连接的工具。没有它，开发者不能直接将APK文件传输到Android设备/模拟器：'
- en: '![Debugging pane](img/1103OS-02-08.jpg)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![调试窗格](img/1103OS-02-08.jpg)'
- en: The LogCat (tracedump of all device/emulator activities)
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: LogCat（追踪所有设备/模拟器活动的跟踪转储）
- en: Dalvik Debug Monitor Server (DDMS)
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Dalvik调试监控服务器（DDMS）
- en: 'DDMS is a must have tool to view the emulator/device activities. To access
    DDMS in the Eclipse, navigate to **Windows** | **Open Perspective** | **Other**
    and then choose **DDMS**. By default it is available in the Android SDK (it''s
    inside the folder `android-sdk/tools` by the file `ddms`). From this perspective
    the following aspects are available:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: DDMS是查看模拟器/设备活动的必备工具。要在Eclipse中访问DDMS，请导航到**窗口** | **打开透视图** | **其他**，然后选择**DDMS**。默认情况下，它可在Android
    SDK中找到（位于`android-sdk/tools`文件夹中的`ddms`文件）。从这个透视图，以下方面可用：
- en: '**Devices**: The list of the devices and AVDs that are connected to ADB'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**设备**：连接到ADB的设备和AVD列表'
- en: '**Emulator Control**: It helps to carry out device functions'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟器控制**：它帮助执行设备功能'
- en: '**LogCat**: It views real time system log messages'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LogCat**：它查看实时系统日志消息'
- en: '**Threads**: It gives an idea of currently running threads within a VM'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**线程**：它给出了VM中当前运行线程的概念'
- en: '**Heap**: It shows heap usage by application'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**堆**：它显示应用程序的堆使用情况'
- en: '**Allocation Tracker**: It provides information on memory allocation of objects'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**分配追踪器**：它提供有关对象内存分配的信息'
- en: '**File Explorer**: It explores the device file system'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文件资源管理器**：它浏览设备文件系统'
- en: 'The following image shows important aspects of DDMS:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了DDMS的重要方面：
- en: '![Dalvik Debug Monitor Server (DDMS)](img/1103OS-02-09.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![Dalvik调试监控服务器（DDMS）](img/1103OS-02-09.jpg)'
- en: Dalvik Debug Monitor Server (DDMS)
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: Dalvik调试监控服务器（DDMS）
- en: SDK manager
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: SDK管理器
- en: 'SDK Manager is the tool to update Android SDK and manage the download of Android
    OS system images, documentations, and APIs. The icon appears, as shown in the
    following screenshot:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: SDK管理器是用于更新安卓SDK和管理安卓操作系统映像、文档和API下载的工具。图标如下截图所示：
- en: '![SDK manager](img/1103OS-02-10.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![SDK管理器](img/1103OS-02-10.jpg)'
- en: The SDK manager icon
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: SDK管理器图标
- en: The next screen to follow, as shown in the screenshot has a very long list.
    We need to be very decisive about what API level we need and select accordingly
    as the download may take significant time, depending upon the Internet speed.
    If not sure then choose the latest API level.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如截图所示，接下来出现的屏幕有一个非常长的列表。我们需要明确我们需要哪个API级别，并据此选择，因为下载可能需要相当长的时间，这取决于互联网速度。如果不确定，那么选择最新的API级别。
- en: Expand the API level we want to issue and check the SDK platform. This download
    consists of the API for the corresponding level and the Android OS system image.
    By default, the system image is based on the ARM's architecture. However to run
    Android OS system image faster on an Intel architecture machine, just tick the
    **Intel Atom x86 System Image** option.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 展开我们想要发布的API级别并检查SDK平台。这次下载包括相应级别的API和安卓操作系统映像。默认情况下，系统映像是基于ARM架构的。然而，为了在Intel架构机器上更快地运行安卓操作系统映像，只需勾选**Intel
    Atom x86系统映像**选项。
- en: Tick the **Samples for SDK** if you need to learn from the samples. If your
    app needs to incorporate the Google special API (such as the Google Maps), then
    you might need to download the Google API. The rest of the list is about the device
    specific APIs. Unless you are planning to optimize your app for a certain device,
    then do not download.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果需要从样本学习，请勾选**SDK的样本**。如果你的应用程序需要整合谷歌特殊API（如谷歌地图），那么你可能需要下载谷歌API。列表的其余部分是关于特定设备的API。除非你打算为特定设备优化你的应用程序，否则不要下载。
- en: 'Once you have finished selecting the necessary APIs, then click on the **Install
    package** button. Should you have any connection reset problem while downloading,
    navigate to **Tools** | **Options**. Uncheck the **Force https://...** sources
    to be fetched using **http://...** and try again:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 完成必要API的选择后，点击**安装包**按钮。如果在下载过程中遇到连接重置问题，请导航到**工具** | **选项**。取消勾选**强制使用https://...**源，改为使用**http://...**获取，然后重试：
- en: '![SDK manager](img/1103OS-02-11.jpg)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![SDK管理器](img/1103OS-02-11.jpg)'
- en: The Android SDK Manager window
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓SDK管理器窗口
- en: Android virtual device manager
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安卓虚拟设备管理器
- en: Android virtual device is a virtual mobile device (emulator) that runs on your
    computer. The emulator lets you test an Android application without using a physical
    device. Although, it's not the best testing approach, as it just mimics the device,
    but at least you have something to test in case you cannot afford an actual Android
    device.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓虚拟设备是在你的计算机上运行的虚拟移动设备（模拟器）。模拟器允许你在不使用物理设备的情况下测试安卓应用程序。尽管这并不是最佳的测试方法，因为它只是模仿设备，但至少在你负担不起实际安卓设备的情况下，你还有东西可以测试。
- en: When the emulator is running, you can interact with the emulated mobile device
    just as you would in an actual mobile device, except that you use your mouse pointer
    to touch the touchscreen and you are able to use some keyboard keys to invoke
    certain keys on the device.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 当模拟器运行时，你可以像操作真实移动设备一样与模拟的移动设备互动，不同之处在于你使用鼠标指针触碰触摸屏，并且可以使用某些键盘按键来调用设备上的特定按键。
- en: The Android emulator mimics all of the hardware and software features of a typical
    mobile device, except that it cannot place actual phone calls. It provides a variety
    of navigation and control keys, which you can "tap" using your mouse or keyboard
    to generate events for your application. It also provides a screen in which your
    application is displayed, together with any other running Android applications.
    For some features we may have to be aware of hot keys and details are at [http://developer.android.com/tools/help/emulator.html#KeyMapping](http://developer.android.com/tools/help/emulator.html#KeyMapping)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 安卓模拟器模仿了典型移动设备的所有硬件和软件功能，唯独不能进行实际电话通话。它提供了多种导航和控制按键，你可以使用鼠标或键盘“点击”来为你的应用程序生成事件。它还提供了一个屏幕，显示你的应用程序以及任何其他正在运行的安卓应用程序。对于某些功能，我们可能需要了解热键，具体信息可以在[http://developer.android.com/tools/help/emulator.html#KeyMapping](http://developer.android.com/tools/help/emulator.html#KeyMapping)找到。
- en: 'Click on the button as shown in the following screenshot, to open the Android
    SDK and **AVD Manager** window. **AVD** is **Android Virtual Device**:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 点击如下截图所示的按钮，打开Android SDK和**AVD管理器**窗口。**AVD**即**Android虚拟设备**：
- en: '![Android virtual device manager](img/1103OS-02-12.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![Android虚拟设备管理器](img/1103OS-02-12.jpg)'
- en: The AVD icon
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: AVD图标
- en: 'The **AVD Manager** is shown in the following screenshot. First, click on **New…**
    to set a new emulator, as seen in the screenshot. Enter a name (for example, `nexus`),
    choose a target (make sure the Android OS system image has been downloaded for
    the selected target), and for simplicity choose the device, and all other fields
    will be auto-populated. We can also edit if you want something different. Also,
    choose **CPU** as **ARM (armeabi-v7a)** and click on **Create AVD**:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '**AVD管理器**如下截图所示。首先，点击**新建…**来设置一个新的模拟器，如截图所示。输入一个名称（例如，`nexus`），选择一个目标（确保为所选目标下载了Android
    OS系统镜像），为了简单起见选择设备，其他字段将会自动填充。如果我们想要不同的设置，也可以进行编辑。同时，选择**CPU**为**ARM (armeabi-v7a)**，然后点击**创建AVD**：'
- en: '![Android virtual device manager](img/1103OS_02_13.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![Android虚拟设备管理器](img/1103OS_02_13.jpg)'
- en: Creating a new AVD
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新的AVD
- en: Click on the new AVD that is already created, and start the AVD using the **Start**
    button. Use the default setting and click on the **Launch** button.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 点击已经创建好的新AVD，然后使用**启动**按钮启动AVD。使用默认设置，并点击**启动**按钮。
- en: '![Android virtual device manager](img/1103OS_02_14.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![Android虚拟设备管理器](img/1103OS_02_14.jpg)'
- en: If we have a lower specification of processor and memory, you will notice that
    its emulator boot-up is really slow. I would like to advise you to have at least
    3GB of RAM to make it faster.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们的处理器和内存规格较低，你会注意到它的模拟器启动非常慢。我想建议你至少有3GB的RAM来使其更快。
- en: 'Wait until the left screen displays a nice picture with icons, as shown in
    the following screenshot. The left component is your device (smartphone) screen
    and the right component is the physical smartphone keypad:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 等待直到左侧屏幕显示如下截图所示的带有图标的漂亮图片。左边的组件是你的设备（智能手机）屏幕，而右边的组件是物理智能手机键盘：
- en: '![Android virtual device manager](img/1103OS-02-15.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![Android虚拟设备管理器](img/1103OS-02-15.jpg)'
- en: The Android emulator
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: Android模拟器
- en: Running the Application
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行应用程序
- en: 'The project with no error will be able to be executed and sent to the AVD.
    To run a project, click on the **Run** button as, shown on the following image.
    If your system is already running several emulators, Eclipse will ask which version
    of the emulator to use:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 没有错误的项目将能够被执行并发送到AVD。要运行一个项目，请点击如下所示图片中的**运行**按钮。如果你的系统已经运行了几个模拟器，Eclipse将会询问你要使用哪个版本的模拟器：
- en: '![Running the Application](img/1103OS-02-16.jpg)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![运行应用程序](img/1103OS-02-16.jpg)'
- en: The Run application button
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 运行应用程序按钮
- en: Getting help
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 获取帮助
- en: Go to **Help** in the menu, and choose **Search**
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在菜单中选择**帮助**，然后选择**搜索**
- en: 'Eclipse help: [http://help.eclipse.org/juno/index.jsp](http://help.eclipse.org/juno/index.jsp)'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Eclipse帮助：[http://help.eclipse.org/juno/index.jsp](http://help.eclipse.org/juno/index.jsp)
- en: 'ADT help: [http://developer.android.com/tools/help/adt.html](http://developer.android.com/tools/help/adt.html)'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ADT帮助：[http://developer.android.com/tools/help/adt.html](http://developer.android.com/tools/help/adt.html)
- en: 'Android developer''s official reference: [http://developer.android.com](http://developer.android.com)'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android开发者官方参考：[http://developer.android.com](http://developer.android.com)
- en: 'ADT update: regularly check the ADT update from the menu, **Help** | **Check
    for Updates**'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ADT更新：定期从菜单中检查ADT更新，**帮助** | **检查更新**
- en: 'More on DDMS: [http://developer.android.com/tools/debugging/ddms.html](http://developer.android.com/tools/debugging/ddms.html)'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于DDMS的信息：[http://developer.android.com/tools/debugging/ddms.html](http://developer.android.com/tools/debugging/ddms.html)
- en: Summary
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed several important tools available in the Eclipse
    and the ADT, such as the project explorer, code editor, graphical user interface
    designer, properties window, debugging pane, Dalvik debug monitor, SDK manager,
    AVD manager, and the run application facilities. The next chapter will discuss
    how to create a new Android application project.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了Eclipse和ADT中提供的几个重要工具，如项目浏览器、代码编辑器、图形用户界面设计器、属性窗口、调试窗格、Dalvik调试监控、SDK管理器、AVD管理器和运行应用程序设施。下一章将讨论如何创建一个新的Android应用程序项目。
