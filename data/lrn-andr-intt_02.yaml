- en: Chapter 2. Introduction to Android Intents
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2章. Android意图介绍
- en: Revising the previous lesson—Android Activity is the visual representation of
    controls, widgets and many other things with which the user interacts. An Android
    application is a combination of many activities which interact with each other
    in order to perform a single or multiple tasks for which the application is dedicated
    to. Mostly, there is only a single activity that is shown on the screen at a particular
    time. Some actions (like button tap or a gesture) may result in navigating from
    the current activity to a new one on the top of the Activity Stack.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 复习上节课的内容——Android活动是控件、小部件以及用户交互的许多其他事物的可视化表示。一个Android应用是由许多相互交互的活动组合而成，以便执行一个或多个应用所专门指定的任务。大多数情况下，在特定时间屏幕上只显示一个活动。某些操作（如按钮点击或手势）可能导致从当前活动导航到活动堆栈上的一个新活动。
- en: Android Intents help developers to perform interaction between two activities,
    yet this is not the only thing that an intent does. This interaction includes
    moving from one activity to another, pushing data from one activity to another
    and bringing results after the closure of any particular activity. In short, it
    can be said that intent is an abstract term in android referring to any task that
    is to be performed. There are various other things which will be explored with
    the passage of time as you read through this book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Android意图帮助开发者执行两个活动之间的交互，但这并不是意图唯一的功能。这种交互包括从一个活动移动到另一个活动，从一个活动向另一个活动推送数据，以及在任何特定活动关闭后带回结果。简而言之，可以说意图是Android中一个抽象的术语，指的是需要执行的任务。随着你阅读这本书，随着时间的推移，我们将探索其他各种事物。
- en: 'This chapter includes the following topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章包括以下主题：
- en: Role of intents in an Android Application
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意图在Android应用中的作用
- en: Intent – a technical overview
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意图——技术概览
- en: Structure of an intent
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 意图的结构
- en: Tip
  id: totrans-7
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: The concepts of Android Activity, Activity Lifecycle, and Activity Stack, as
    discussed in the previous chapter, are the prerequisites for understanding this
    chapter and the chapters ahead. If you don't have the basic concept of these things,
    we would recommend that you read [Chapter 1](ch01.html "Chapter 1. Understanding
    Android"), *Understanding Android*, in order to move forward.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一章所讨论的Android活动、活动生命周期和活动堆栈的概念，是理解本章及后续章节的前提。如果你对这些基础知识没有概念，我们建议你先阅读[第1章](ch01.html
    "第1章. 理解Android")《理解Android》，以便继续前进。
- en: Role of intents in an Android Application
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 意图在Android应用中的作用
- en: In this section, we will see what the scope of Android Intents is. Till now,
    we have a complete view of why the activities are required and why it is necessary
    to maintain and trace the flow from one activity to another.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解Android意图的范围。到目前为止，我们已经完全了解了为什么需要活动，以及为什么有必要维护和跟踪从一个活动到另一个活动的流程。
- en: '![Role of intents in an Android Application](img/9639_02_01.jpg)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![意图在Android应用中的作用](img/9639_02_01.jpg)'
- en: Navigation between different activities on button tap (using intents) and its
    representation by an activity stack
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮点击（使用意图）在不同活动之间的导航及其通过活动堆栈的表示
- en: 'It can be said that this portion of the book is the summary of the benefits
    that we can take from the Android Intents. The scope lies in the various factors
    of Android Activities, services, data transfer, and many other things. We will
    see this in the following list:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 可以说，这部分书籍是我们从Android意图中获得好处的总结。其范围涉及Android活动、服务、数据传输以及许多其他因素。我们将在以下列表中看到这一点：
- en: Activity transition from one activity to another
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个活动过渡到另一个活动
- en: Data transfer from one activity to another
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从一个活动向另一个活动传输数据
- en: Making connection with Wi-Fi and Bluetooth
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与Wi-Fi和蓝牙建立连接
- en: Accessing Android Camera
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 访问Android摄像头
- en: GPS sensor to get current location
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用GPS传感器获取当前位置
- en: Sending SMS and MMS
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送短信和彩信
- en: Customizing mobile calls
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义移动通话
- en: Sending e-mails and social media posts
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送电子邮件和社交媒体帖子
- en: Starting and controlling Android Services
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 启动和控制Android服务
- en: Handling broadcast messages
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理广播消息
- en: Changing time zones
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改时区
- en: Notification bar alerts
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通知栏提醒
- en: And many more
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 以及更多内容
- en: We will now take a look at each of the key roles of Android Intents. A short
    description on these main features of Android Intents is given in the following
    sections.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将看看Android意图的每个关键角色。以下各节给出了关于Android意图这些主要特性的简短描述。
- en: Role of intents in Android Activities
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图在Android活动中的作用
- en: The most important and extensive use of intents can be seen in Android Activities.
    The Android Application consists of many activities and to transit between those
    activities, we need to use Android Intents. In the previous figure, you can see
    that in **Activity 1** (on the left-hand side) when the content is filled and
    the user taps the **Enter Data** button, Android will use an intent to navigate
    to the **Activity 2** (on the right-hand side).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: Intents最重要的广泛应用是在Android活动中。Android应用程序由许多活动组成，要在这些活动之间过渡，我们需要使用Android Intents。在之前的图中，你可以看到在**活动1**（左侧）内容填写完毕，用户点击**输入数据**按钮后，Android将使用Intents导航到**活动2**（右侧）。
- en: Apart from the previously mentioned role of intent, it can also be used to call
    other applications such as a browser (with a certain website from your activity)
    and an e-mail client (such as Gmail or any other with proper subject and e-mail
    body from the activity, by sending it in a bundle).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 除了之前提到的Intents的作用外，还可以用来调用其他应用程序，例如浏览器（从你的活动中打开特定网站）和电子邮件客户端（如Gmail或其他，通过发送捆绑信息，带上合适的主题和邮件正文）。
- en: Role of intents in data transfer between activities
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intents在活动间数据传输中的作用
- en: It is now clear that we use intents to navigate from one activity to another.
    But as we all know the huge role of data in an Android Application, where the
    user needs to fetch, manipulate, and show data in order to perform a certain task.
    The handling of that data and its secure transfer from one activity to another
    is yet another purpose of Android Intents.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在很清楚，我们使用Intents从一个活动导航到另一个活动。但正如我们都知道数据在Android应用程序中的巨大作用，用户需要获取、操作和显示数据以执行特定任务。处理这些数据，并确保其安全地在活动之间传输，也是Android
    Intents的另一个目的。
- en: In the previous figure, once the user has filled the form in Activity 1, on
    tapping the **Enter Data** button, intents will perform two tasks. One task is
    to take the user from one activity to another and second task is to transfer the
    filled data to the next activity in order to show/calculate the result.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在之前的图中，一旦用户在活动1中填写了表单，点击**输入数据**按钮后，Intents将执行两项任务。一项是将用户从一个活动带到另一个活动，第二个任务是传输填写的数据到下一个活动，以便显示/计算结果。
- en: Role of intents in Wi-Fi and Bluetooth transfer
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intents在Wi-Fi和蓝牙传输中的作用
- en: While inside the application, if you want to implement a feature which gives
    a facility to change the current Wi-Fi/Bluetooth connection, you need to use Android
    Intents. With Android Intents, you can easily provide the internal interface which
    will let the user switch between the Wi-Fi and Bluetooth connection while remaining
    inside the application.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用程序内部，如果你想实现一个功能，让用户能够更改当前的Wi-Fi/蓝牙连接，你需要使用Android的Intents。通过Android Intents，你可以轻松地提供内部接口，让用户在停留在应用内的同时，切换Wi-Fi和蓝牙连接。
- en: Role of intents in Android Camera
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intents在Android相机中的作用
- en: Android hardware can be of a huge importance when you talk about Android Application.
    The use of these components can be a fundamental part of your Android Application.
    Suppose the example of a 1D or 2D bar code reader, the application needs to scan
    the bar code and decode it in order to extract the information. This action can
    only be performed by opening the camera from inside the application. The opening
    of camera is also handled by Android Intents.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当谈论Android应用程序时，Android硬件可能非常重要。这些组件的使用可能是你Android应用程序的基本部分。以1D或2D条形码阅读器为例，应用程序需要扫描条形码并解码以提取信息。这个操作只能通过从应用程序内部打开相机来完成。相机的开启同样由Android
    Intents处理。
- en: Role of intents in GPS Sensor
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intents在GPS传感器中的作用
- en: The Android Application market is doing marvel in many categories. Various kinds
    of Android Applications are present in the market today, this includes location-based
    applications which perform various tasks by tracking the location of the user.
    Through intents a developer can easily extract the current location of the user
    as required for calculations.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: Android应用程序市场在许多类别中都取得了惊人的成绩。如今市场上存在各种类型的Android应用程序，包括基于位置的应用程序，它们通过追踪用户的位置执行各种任务。开发者可以通过Intents轻松获取用户当前的地理位置，以满足计算需求。
- en: Role of intents in sending SMS/MMS
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intents在发送短信/彩信中的作用
- en: Android Intents can be used in order to enable your application for sending
    SMS/MMS. This task can be done by setting the SMS/MMS body from your activity
    and set it in bundle to call the native built-in application for sending SMS/MMS
    of the mobile. This SMS/MMS sending functionality can then be enhanced by implementing
    a Broadcast Receiver, which enables your activity to know when the message was
    sent or when it was delivered.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Android意图可以用来使你的应用程序能够发送短信/彩信。这个任务可以通过从你的活动中设置短信/彩信正文并将其设置在捆绑包中，以调用发送短信/彩信的本机内置应用程序来完成。然后可以通过实现广播接收器来增强此短信/彩信发送功能，这使得你的活动能够知道消息何时已发送或何时已投递。
- en: Role of intents in Mobile Calls
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图在移动呼叫中的作用
- en: Any condition that will initiate a mobile call in an application can be fulfilled
    by Android Intents. The Android Application will use the built-in application
    to start the call to any particular number that will be provided in the form of
    data in an intent.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 应用程序中触发移动呼叫的任何条件都可以通过Android意图实现。Android应用程序将使用内置应用程序拨打意图中以数据形式提供的任何特定号码。
- en: Role of intents in e-mail and social network posts
  id: totrans-44
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图在电子邮件和社交网络帖子中的作用
- en: Accessing Gmail to send e-mail from your application is managed by Android Intents.
    There is an intent call in which we put the recipient's e-mail, attachments, body,
    and subject of the e-mail and start the intent on the activity. This will open
    the native Gmail application with those parameters filled and the user can send
    this to the desired recipient.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 从你的应用程序访问Gmail发送电子邮件是由Android意图管理的。有一个意图调用，我们在其中放入收件人的电子邮件、附件、邮件正文和主题，并在活动上启动意图。这将打开带有这些参数填充的本机Gmail应用程序，用户可以将其发送给期望的收件人。
- en: 'Similarly, we can send various social network updates such as Facebook, Twitter,
    and Google+ through an intent. This task is done using Share Intent. We put the
    content in the form of text or bundle and send it via Android Intent. Android
    then opens all the available sharing applications (as shown in the previous figure)
    and gives access to the user in order to pick the best application for sharing.
    The only condition is that there should be a preinstalled application through
    which the Android Intent interacts and sends the desired post is given as follows:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，我们可以通过意图发送各种社交网络更新，如Facebook、Twitter和Google+。这个任务是通过使用共享意图完成的。我们将内容以文本或捆绑包的形式放入，并通过Android意图发送。然后Android打开所有可用的共享应用程序（如前图所示），并让用户选择最佳的共享应用程序。唯一条件是，需要有预先安装的应用程序，以便Android意图与之交互并发送所需的帖子，如下所示：
- en: '[PRE0]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Note
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Android Intent does not disclose any other feature of social networking apart
    from posting on the wall or tweeting it to the timeline. To observe the complete
    set of features there are many third party APIs present on the Internet as free-license
    software or paid.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Android意图除了在墙上发帖或推送到时间线之外，没有透露社交网络的任何其他功能。要观察完整的功能集，互联网上有许多作为免费许可软件或付费的第三方API。
- en: '![Role of intents in e-mail and social network posts](img/9639_02_02.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![电子邮件和社交网络帖子中意图的作用](img/9639_02_02.jpg)'
- en: Using intent to share posts on various platforms using Share Intents
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 使用共享意图在各种平台上分享帖子的意图
- en: 'The next screenshot shows what happens when you give a functionality to the
    user and for example, the user wants to share it via Gmail. In this case, the
    screen appears with your content in it and will look as shown in the following
    screenshot:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个屏幕截图显示了当您向用户提供了某个功能，例如用户想要通过Gmail分享时会发生什么。在这种情况下，屏幕将显示您的内容，并如下所示：
- en: '![Role of intents in e-mail and social network posts](img/9639_02_02_01.jpg)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![电子邮件和社交网络帖子中意图的作用](img/9639_02_02_01.jpg)'
- en: Gmail interface after passing the data from Share Intent
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 通过共享意图传递数据后的Gmail界面
- en: Role of intents in Android Services
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 意图在Android服务中的作用
- en: Same as Android Activity, intents are used to initiate **Android Services**.
    Android Services are basically the long-running tasks done by the Android Application
    without affecting the user interface. This background task can continue running
    even after the user switches the application. In other words, services can or
    cannot be bound from the activity. The services can work independently in order
    to perform a task. However in each case, an intent is used to initiate the services.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 与 Android 活动（Activity）类似，intents 也用于启动**Android 服务（Services）**。Android 服务基本上是
    Android 应用在不对用户界面产生影响的情况下执行的长运行任务。即使用户切换应用，这一后台任务也可以继续运行。换句话说，服务可以与活动绑定，也可以独立运行以执行任务。不过，在所有情况下，都会使用
    intent 来启动服务。
- en: Role of intent in Broadcast Receiver
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intent 在广播接收器中的作用
- en: Intent has a wide usage with Broadcast Receiver. Broadcast Receiver is used
    to respond to the broadcast messages initiated by any other application or even
    the system. In this context, we catch the Android message and extract the data
    in order to show it in our application. For example, `Intent.ACTION_BOOT_COMPLETED`
    is used when we need to receive a signal when the system boot is completed. Similarly,
    many other intent values and intent objects can be used at different points of
    application in order to perform various tasks related to Broadcast Receiver.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Intent 在广播接收器中有着广泛的应用。广播接收器用于响应任何其他应用甚至系统发起的广播消息。在这个背景下，我们捕获 Android 消息并提取数据，以便在我们的应用中显示。例如，当我们需要接收系统启动完成信号时，会使用
    `Intent.ACTION_BOOT_COMPLETED`。同样，许多其他的 intent 值和 intent 对象可以在应用的不同位置使用，以便执行与广播接收器相关的各种任务。
- en: Another example can be sending the SMS/MMS where you can make a Broadcast Receiver
    in order to see whether the sending is completed or the message is delivered or
    not.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个例子可以是发送短信/彩信，你可以创建一个广播接收器来查看发送是否完成或消息是否已投递。
- en: Role of intent in time zones
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intent 在时区中的作用
- en: It is possible that your application might do something that is related to the
    time zone. Once the time zone has changed while you are traveling, you want your
    application to behave differently. In such cases, we can use Broadcast Receiver
    to detect the change of the time zone, get data from the intent in order to access
    the current time zone, and perform a certain task. This is a very handy way to
    maintain your application structure and data according to your time zone.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 你的应用可能需要做与时区相关的操作。一旦你在旅行中遇到时区变化，你可能希望应用能做出不同的响应。在这种情况下，我们可以使用广播接收器来检测时区的变化，从
    intent 中获取数据以访问当前时区，并执行特定任务。这是一种非常方便的方法，可以根据你的时区来维护应用结构和数据。
- en: Role of intent in Status Bar
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Intent 在状态栏中的作用
- en: Android Status Bar is used to provide instant notification to a user without
    occupying too much space on the screen. The notification panel that slides from
    top to bottom has many features in it, such as some quick access items like wireless
    connection manager (currently available in few mobile phones only) and other things.
    We can put a notification in that bar in order to inform the user about anything.
    Android Intents are used in order to place the content and provide a status bar
    notification in it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Android 状态栏用于向用户提供即时通知，同时不会占用屏幕过多空间。从上至下滑动的通知面板包含许多功能，例如一些快速访问项，如无线连接管理器（目前仅在少数手机上可用）等。我们可以将通知放在状态栏中，以告知用户任何信息。Android
    Intents 用于放置内容，并在其中提供状态栏通知。
- en: '![Role of intent in Status Bar](img/9639_02_03.jpg)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![Intent 在状态栏中的作用](img/9639_02_03.jpg)'
- en: Android Notification Panel and Notifications
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: Android 通知面板和通知
- en: Intent – a technical overview
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Intent – 技术概览
- en: We have been through the theoretical overview of Android Intents in the past
    couple of topics. Let's take a deeper look at the technicalities of this feature
    of Android. In this portion, we will see the bigger picture of Android Intents
    which includes the example code and its explanation.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在前几节课中，我们已经对 Android Intents 进行了理论上的概述。现在让我们深入了解一下这一 Android 特性的技术细节。在本部分，我们将从更宏观的角度来看待
    Android Intents，包括示例代码及其解释。
- en: 'Technically, Android Intent consists of two components and both of them work
    independently. These two components are as follows:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，Android Intent 由两个组件组成，这两个组件都可以独立工作。这两个组件如下：
- en: The Coding component
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编码组件
- en: The XML component
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: XML 组件
- en: The Coding component
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码组件
- en: Android Intents are implemented in the Java code while writing a class. Normally
    in an Android project, we have a separate package for handling the activities.
    As it was mentioned earlier, in order to put a complete trace of application,
    there is an `AndroidManifest.xml` file in which the record of every activity,
    service, permission, and other things should be included.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写类时，会在Java代码中实现Android Intents。通常在Android项目中，我们会为处理活动(activity)创建一个单独的包。如前所述，为了记录应用程序的完整追踪，有一个`AndroidManifest.xml`文件，其中应包含每个活动(activity)、服务(service)、权限(permission)以及其他内容的记录。
- en: Tip
  id: totrans-73
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: While implementing the code, we need to take care that all of the activities
    should be declared in the `AndroidManifest.xml` file in order to access them from
    the code. Otherwise, Android will throw an error of `ActivityNotFoundException`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在实现代码时，我们需要确保所有活动(activity)都在`AndroidManifest.xml`文件中声明，以便从代码中访问它们。否则，Android将抛出`ActivityNotFoundException`错误。
- en: 'The implementation of Android Intents for activities, services, and Broadcast
    Receivers is the same. While implementing Android Intents in an activity, we need
    to take care of the following things:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 为活动(activity)、服务(service)和广播接收器(Broadcast Receivers)实现Android Intents的方式是相同的。在活动(activity)中实现Android
    Intents时，我们需要注意以下事项：
- en: Importing the `android.content` package before implementing the intent (this
    is the parent package of Android in which the intent class is present).
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在实现intent之前导入`android.content`包（这是Android的父包，其中包含intent类）。
- en: The intent constructor should be under the context of Android Activity. If not,
    it should have the object of context in order to determine on which activity the
    intent is called.
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Intent构造函数应该在Android活动的上下文中。如果不是，它应该具有上下文对象，以确定在哪个活动中调用intent。
- en: The destination activity class should be imported (if it is under any other
    package of the source activity).
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应导入目标活动类（如果它位于源活动所在包的其他包中）。
- en: You can only call the `startActivity()` method if the intent is in the context
    of Android Activity or if the context of that source activity is present in the
    context object.
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 只有在intent处于Android活动的上下文中，或者如果源活动的上下文存在于上下文对象中，你才能调用`startActivity()`方法。
- en: The XML component
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: XML组件
- en: The second and the most important component on which the intent depends is in
    the `AndroidManifest.xml` file. Giving a recap about what this file includes—`AndroidManifest`
    is the file which contains all the information regarding the application. It contains
    all names of activities, services, permissions, version codes, sdk versions, and
    many other things.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: intent依赖的第二个也是最重要的组件位于`AndroidManifest.xml`文件中。回顾一下这个文件包含的内容——`AndroidManifest`是包含有关应用程序所有信息的文件。它包含所有活动(activity)、服务(service)、权限(permission)、版本代码(version
    codes)、sdk版本等许多其他信息。
- en: 'Similarly, there are Intent Filters that are also mentioned inside this file.
    At this time, we just want to cover the main use of Intent Filters. The brief
    introduction of an Intent Filter can be found in the following list:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，此文件中也提到了Intent Filters。此时，我们只想涵盖Intent Filters的主要用途。以下是Intent Filter的简要介绍：
- en: Intent Filters have some conditions that have to be fulfilled in order to process
    the Android Intents
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Intent Filters有一些条件，必须满足这些条件才能处理Android Intents。
- en: Intent Filters have additional information regarding the data and category of
    the Android Intent
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Intent Filters包含有关Android Intent的数据和类别(category)的额外信息。
- en: A shorter definition may be that an Intent Filter describes how the Android
    System will identify what behavior to adopt on a certain Android Intent.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，Intent Filter描述了Android系统如何识别在特定Android Intent上应采用的行为。
- en: '[PRE1]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tip
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can include many Intent Filters inside a single activity in `AndroidManifest.xml`.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在`AndroidManifest.xml`中的单个活动中包含许多Intent Filters。
- en: As shown in the previous code, it is clearly mentioned that the tags of `<intent-filter>`
    contain the information regarding the category and the action. These tags are
    an essential part of the activity in `AndroidManifest` when the application tries
    to do a task which is unknown to the system.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，明确指出`<intent-filter>`标签包含有关类别(category)和动作(action)的信息。当应用程序尝试执行系统未知任务时，这些标签是`AndroidManifest`中活动(activity)的重要组成部分。
- en: 'To understand why `<category>` appears in the previous code of an Intent Filter,
    take an example: we make an application in which there are two activities. If
    we do not mention to the system which is the first activity to start the application
    with; the system will get confused and show the error `No Launcher Activity Found`
    and it will not start the application. So, in order to achieve this task, we need
    to put the category of any of the one activity as `android.intent.category.LAUNCHER`.
    This will help the system to recognize the base activity from which the application
    starts and the flow continues.'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要理解为什么在Intent Filter的代码中会出现`<category>`，可以举个例子：我们开发一个应用，其中有两个活动。如果我们没有告诉系统哪个是启动应用时的第一个活动；系统就会混淆并显示错误`No
    Launcher Activity Found`，并且不会启动应用。因此，为了完成这项任务，我们需要将其中一个活动的类别设置为`android.intent.category.LAUNCHER`。这将帮助系统识别应用启动的基础活动，并继续流程。
- en: Implementation of Android Intents for Activity Navigation
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现Android Intents进行活动导航
- en: In this section, we will take a look at the implementation of the Android Intent.
    Let's get started.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一节中，我们将看看Android Intent的实现。让我们开始吧。
- en: In order to start this example, you need to build an Android project. You can
    use Android Studio or Eclipse (as per your convenience) but make sure that if
    you are using Eclipse, you should have correctly installed JDK, ADT, and the Android
    SDK, along with their compatibility packages. If you don't know the difference
    between these IDEs, you can refer to [Chapter 1](ch01.html "Chapter 1. Understanding
    Android"), *Understanding Android*, of this book.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始这个示例，你需要构建一个Android项目。你可以使用Android Studio或Eclipse（根据你的方便），但如果你使用Eclipse，确保你已经正确安装了JDK、ADT和Android
    SDK，以及它们的兼容性包。如果你不知道这些IDE之间的区别，可以参考本书的[第1章](ch01.html "第1章. 理解Android")，《理解Android》。
- en: Creating a project in Android Studio was covered in the previous chapter. Repeating
    those steps will help you to create a complete Android project with some predefined
    files and folders.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在Android Studio中创建项目的内容在上一章已经介绍过。重复这些步骤可以帮助你创建一个带有一些预定义文件和文件夹的完整Android项目。
- en: 'In order to get started with the implementation of Android Intents, you need
    to perform the following steps:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始实现Android Intents，你需要执行以下步骤：
- en: Create a new Android project or choose any existing project in which you want
    to implement Android Intents.
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新的Android项目，或者选择任意一个现有的你想要在其中实现Android Intents的项目。
- en: Open the source activity in which you want to implement the intent.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开你想要实现意图的源活动。
- en: Note
  id: totrans-98
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Just a reminder that intents are called when there is an event-call taking place
    in an activity. For example, on tapping the button, the next activity should appear.
    So the button-tap is the event.
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 提醒一下，当活动中有事件调用发生时，会调用意图。例如，点击按钮时，下一个活动应该出现。所以按钮点击就是事件。
- en: 'Implement the following code in order to achieve this result:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现以下代码以实现此结果：
- en: '[PRE2]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Run the project and a button will appear. Tap the button in order to navigate
    to the next activity through intents.
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行项目，会出现一个按钮。点击按钮，通过意图导航到下一个活动。
- en: '![Implementation of Android Intents for Activity Navigation](img/9639_02_04.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![实现Android意图进行活动导航](img/9639_02_04.jpg)'
- en: Indicates the flow of application from the first activity to the second activity
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 指示应用从第一个活动到第二个活动的流程
- en: Understanding the flow
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解流程
- en: The previous code is described in five parts; we will describe them one by one.
    Keep in mind that these parts are referring to five different files in the Android
    project. Knowing the fact that you will use this code inside a predefined project,
    we will describe it from the scenario of a newly created project in order to make
    it elaborative and clear.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码分为五个部分；我们将逐一描述它们。请记住，这些部分指的是Android项目中的五个不同文件。考虑到你将在这个预定义项目中使用这些代码，我们将从新创建项目的角度来描述，以便使其更加详尽和清晰。
- en: Part one – MainActivity.java
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第一部分 – MainActivity.java
- en: '`MainActivity.java` is the first class that is made while creating a project.
    Since it is an Android Activity, it comes with an `onCreate` method which is called
    once the activity has been created (as discussed in [Chapter 1](ch01.html "Chapter 1. Understanding
    Android"), *Understanding Android*, *Android Activity Life Cycle*). The layout
    attached with this Activity is named as `activity_main.xml`. Hence in the `onCreate()`
    method, the line `setContentView(R.layout.activity_main)` refers to that XML and
    is used to set the view of that activity in accordance with the layout present
    in `activity_main.xml`.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '`MainActivity.java`是在创建项目时生成的第一个类。由于它是一个Android活动，因此它带有一个`onCreate`方法，该方法在活动创建后立即被调用（如[第1章](ch01.html
    "第1章. 理解Android")，*理解Android*，*Android活动生命周期*所述）。与此活动关联的布局名为`activity_main.xml`。因此，在`onCreate()`方法中，行`setContentView(R.layout.activity_main)`指的是那个XML，并用于根据`activity_main.xml`中的布局设置该活动的视图。'
- en: Now, in the second step, the button present in the `activity_main.xml` layout
    with the ID of `button1` is fetched in the code by using the `findViewById(int
    id)` method present in the `Activity` class. It will return the object of the
    `View` class, so we can easily cast it over the button in order to have a button
    object.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在第二步中，通过在`Activity`类中使用`findViewById(int id)`方法，在代码中获取`activity_main.xml`布局中具有ID
    `button1`的按钮。它将返回`View`类的对象，因此我们可以轻松地将其转换为按钮以获得按钮对象。
- en: Once the button object is extracted, we implement the `setOnClickListener()`
    method on it. The `setOnClickListener()` method belongs to the `View` class which
    takes an argument of `View.OnClickListener` (an interface). This interface requires
    us to override the `onClick()` functionality to be implemented. This event is
    triggered whenever the button is tapped in the UI.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦提取了按钮对象，我们就在其上实现`setOnClickListener()`方法。`setOnClickListener()`方法属于`View`类，它需要一个`View.OnClickListener`（一个接口）作为参数。这个接口要求我们重写`onClick()`功能以实现。每当在UI中点击按钮时，都会触发这个事件。
- en: Inside this `onClick()` method, the real implementation of intent will take
    place. Since we want to call our intent on tapping the button, we will do all
    of the stuff related to the intent in this method. Declare the intent object with
    the constructor taking the argument of context and the destination class. The
    `MySecondActivity.class` file is the destination activity on which we want to
    navigate while we are accessing the context of the current activity by taking
    `MainActivity` (or you can use the `getContext()` method which basically returns
    the same context of the activity). This is because we are currently in the context
    of `OnClickListener`.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个`onClick()`方法内部，将进行意图的实际实现。由于我们希望在点击按钮时调用我们的意图，因此我们将在该方法中处理所有与意图相关的操作。使用带有上下文和目标类参数的构造函数声明意图对象。`MySecondActivity.class`文件是我们想要导航到的目标活动，而我们通过获取`MainActivity`（或者你可以使用`getContext()`方法，它基本上返回相同的活动上下文）来访问当前活动的上下文。这是因为我们现在处于`OnClickListener`的上下文中。
- en: At this moment we have the object of intent. We could do much more with this
    object but at the moment, our task is to only navigate it to the next activity.
    This is why we call the method `startActivity`() and pass this intent as an argument.
    This will navigate the application to the next activity which will appear from
    the top in the activity stack, while the previous activity will go underneath
    it.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在此阶段，我们拥有了意图对象。我们可以用这个对象做更多的事情，但目前我们的任务是仅将其导航到下一个活动。这就是为什么我们要调用`startActivity()`方法并将此意图作为参数传递。这将把应用导航到下一个活动，该活动将从活动堆栈顶部出现，而前一个活动将位于其下方。
- en: Part two – MySecondActivity.java
  id: totrans-113
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第二部分 – MySecondActivity.java
- en: The activity `MySecondActivity.java` is the destination activity for the intent.
    This is the simple activity which contains an `onCreate()` method which is setting
    the content view on the screen. Just after the creation of the layout, we are
    showing a toast message on the screen through the `show()` method in order to
    recognize that the second activity has been loaded and is displaying the message
    `The intent has been called`.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`MySecondActivity.java`活动是意图的目标活动。这是一个简单的活动，其中包含一个`onCreate()`方法，该方法在屏幕上设置内容视图。在布局创建后，我们通过`show()`方法在屏幕上显示一个吐司消息，以便识别第二个活动已被加载并在显示消息`The
    intent has been called`。'
- en: Note
  id: totrans-115
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: A toast message is a simple message which appears in a box for a few seconds
    and goes away. By default, this message contains text, but one can easily make
    a custom toast in order to include pictures and many other things.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 吐司消息是一个简单的消息框，显示几秒钟后消失。默认情况下，这个消息包含文本，但可以轻松定制吐司以包含图片和其他许多内容。
- en: Part three – activity_main.xml
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第三部分 – activity_main.xml
- en: This XML file is the layout for the `MainActivity.java` class. As you can see,
    we tried to bring the reference of the button from the layout. That button is
    declared inside this `activity_main` file with the ID used to extract it from
    the XML.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这个XML文件是`MainActivity.java`类的布局。如您所见，我们试图从布局中获取按钮的引用。这个按钮在`activity_main`文件中声明，并带有用于从XML中提取的ID。
- en: Note
  id: totrans-119
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: The references of all the layouts declared in the XML files are put inside the
    R file, which is used by the Java code/classes to get the object in the code.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 所有在XML文件中声明的布局引用都放在R文件中，Java代码/类通过它来在代码中获取对象。
- en: Describing the `activity_main.xml` file, there is a Linear Layout with certain
    parameters regarding its length, width, and orientation. Inside the tags of Linear
    Layout, you can see that the button which is brought into the code of Java is
    declared. This tag also comes with certain parameters about height, width, ID,
    and text that will appear in the layout.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 描述`activity_main.xml`文件，有一个带有关于其长度、宽度和方向的某些参数的线性布局。在线性布局的标签内，你可以看到被带入Java代码中的按钮声明。这个标签还带有关于高度、宽度、ID以及将在布局中显示的文本的某些参数。
- en: Note
  id: totrans-122
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Take precautionary measures in order to give the ID to any view. All of these
    IDs are present in the R file which handles everything inside a single class.
    Try to customize your ID in order to avoid confusing the view of one activity
    with that of another.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 为了给任何视图分配ID，请采取预防措施。所有这些ID都存在于R文件中，该文件在一个类中处理所有内容。尝试自定义你的ID，以避免将一个活动的视图与另一个混淆。
- en: Part four – activity_two_layout.xml
  id: totrans-124
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第四部分 – activity_two_layout.xml
- en: This is a simple layout file containing the parent Linear Layout in order to
    make a simple blank activity. This layout file is assigned to the second activity
    on which the intent brings the user after tapping the button and on which the
    toast message is shown.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个简单的布局文件，包含父级线性布局，以创建一个简单的空白活动。这个布局文件被分配给第二个活动，用户点击按钮后意图会带用户到这个活动，并在这里显示吐司消息。
- en: Part five – AndroidManifest.xml
  id: totrans-126
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 第五部分 – AndroidManifest.xml
- en: 'No project is complete without the `AndroidManifest.xml` file because it contains
    all the information regarding the application. In this XML file, there is a parent
    tag of manifest which contains the three most important properties regarding the
    project:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 没有完整的`AndroidManifest.xml`文件，因为该文件包含有关应用程序的所有信息。在这个XML文件中，有一个manifest父标签，其中包含关于项目的三个最重要的属性：
- en: '**Package Name**: This is the name of the project from which the application
    will go to Google Play (or any other market). This name should be uniquely defined
    for the whole application and it should not match any other package name in the
    market.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**包名**：这是项目的名称，应用程序将由此名称进入谷歌应用市场（或其他任何市场）。这个名称应该为整个应用程序唯一定义，并且不应与市场上其他任何包名匹配。'
- en: '**Version Code**: This is an integer value which represents the version number
    compared to the previous version of the application.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本代码**：这是一个整数值，表示与之前版本应用程序相比的版本号。'
- en: '**Version Name**: This is a string value which is used to display for the user.
    It is the release version name of the application.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本名称**：这是一个字符串值，用于向用户显示。它是应用程序的发布版本名称。'
- en: Inside the `Manifest` tag, there is a tag named `<uses-sdk>` which, in its attributes,
    defines the minimum and maximum API version of Android on which the application
    is accessible. After this there is an application tag in which the information
    related to application is stored which contains icon, label, and theme for the
    application.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在`Manifest`标签内，有一个名为`<uses-sdk>`的标签，在其属性中定义了应用程序可访问的最低和最高Android API版本。在此之后是一个应用程序标签，其中存储有关应用程序的信息，包含图标、标签和应用程序的主题。
- en: In the main tag, which describes the activities in an application, there are
    the `<activity>` tags. It should be equal to the number of activities used in
    the application. As you can see the XML component of intent is present in the
    first activity, namely `<intent-filter>`, which is telling the system that `MainActivity.java`
    is the class that should be used as a Launcher Activity. Unlike the first activity,
    the second activity does not contain the tag for Intent Filter. You can analyze
    that there is no need for the second activity to contain those tags because it
    is in the flow with the first activity.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在主标签中，描述了应用程序中的活动，有`<activity>`标签。它的数量应与应用程序中使用的活动数量相等。如你所见，意图的XML组件存在于第一个活动中，即`<intent-filter>`，它告诉系统`MainActivity.java`是应该用作启动器的活动类。与第一个活动不同，第二个活动不包含意图过滤器的标签。你可以分析出，第二个活动无需包含这些标签，因为它与第一个活动在流程中是一致的。
- en: From the first activity, the second activity should come on the foreground intent.
    That is why there is no need for it to contain the tags `<category>` and `<action>`.
    The application will work fine without it as well.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 从第一个活动到第二个活动，前景意图应该是连续的。这就是为什么它不需要包含`<category>`和`<action>`标签的原因。即使没有这些，应用程序也能正常工作。
- en: Future considerations
  id: totrans-134
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 未来的考量
- en: We will see in detail what more we can do with intents in this book. Till now
    we have only covered the basic intent functionality with its flow in the activity
    stack. You will encounter a lot of content on the way.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们将详细了解我们还可以用意图做些什么。到目前为止，我们只介绍了意图的基本功能以及它在活动栈中的流程。在接下来的内容中，你将遇到很多相关知识。
- en: Other constructors of the android.content.Intent class
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: android.content.Intent类的其他构造函数
- en: The Intent class comes with a variety of constructors which help developers
    in various scenarios. In the previous section, we used only one type of constructor.
    Other polymorphic forms of the constructor are also available on Google.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: Intent类提供了多种构造函数，帮助开发者在各种场景中。在上一节中，我们只使用了一种构造函数类型。其他构造函数的多态形式在Google上也是可用的。
- en: Various kinds of constructors are explained in the following sections.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 以下各节将解释各种构造函数。
- en: Intent()
  id: totrans-139
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Intent()
- en: This is the default constructor which returns an empty intent object. However,
    by empty it does not mean that it is a null object.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 这是默认构造函数，它返回一个空的意图对象。但是，这里的“空”并不意味着它是一个null对象。
- en: Intent(intent o)
  id: totrans-141
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Intent(intent o)
- en: This constructor is used to make a clone of an existing intent. We pass the
    intent object which we want to clone and put it in the argument of the constructor.
    In this condition, the intent returned is the copy of the original one. It will
    also map each and every value (extras) put in the original one and returns a copy
    of that intent.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 这个构造函数用于创建一个现有意图的克隆。我们传递想要克隆的意图对象，并将其作为构造函数的参数。在这种情况下，返回的意图是原始意图的副本。它还将映射原始意图中放入的每个值（额外数据）并返回该意图的副本。
- en: Intent(Context c, Class<?> cls)
  id: totrans-143
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Intent(Context c, Class<?> cls)
- en: 'This is the constructor that we used in our example before. It basically takes
    two arguments: a source context and the destination class. The source context
    is the context of the activity you are currently using, while the second parameter
    is the class to which you want to navigate to.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们在前面示例中使用的构造函数。它基本上接收两个参数：源上下文和目标类。源上下文是你当前正在使用的活动的上下文，而第二个参数是你想要导航到的类。
- en: Intent(String action)
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Intent(String action)
- en: The constructor with the action is used to make an intent object in which the
    action is written. The proper use and definition of the action, as used in intents,
    will be covered in the upcoming chapters. Also keep in mind that this constructor
    is used to broadcast actions.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 带有动作的构造函数用于创建一个写入动作的意图对象。动作的正确使用和定义，如在意图中的使用，将在接下来的章节中介绍。还要记住，这个构造函数用于广播动作。
- en: Intent(String action, URI uri)
  id: totrans-147
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Intent(String action, URI uri)
- en: 'This constructor is used to create an intent with the desired action as well
    as some data URL. For example, we pass the argument `new Intent(Intent.ACTION_VIEW,
    Uri.parse("http://www.google.com"));`. The constructor clearly means that the
    intent will facilitate the action that is used for viewing and with the other
    parameter, we are parsing the URI of the URL [http://www.google.com](http://www.google.com).
    This will open the browser in which Google''s website will be loaded. Take another
    example of this constructor: `new Intent(Intent.ACTION_DIAL, Uri.parse("tel: (+1)
    123456789"));`. By writing this statement, we are clearly mentioning that we want
    to make an intent which is used to activate the phone dialer and pass the value
    of URI in order to perform the call function through intents.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '这个构造函数用于创建一个带有期望动作以及一些数据URL的意图。例如，我们传递参数`new Intent(Intent.ACTION_VIEW, Uri.parse("http://www.google.com"));`。这个构造函数清楚地表示意图将支持用于查看的动作，并通过另一个参数解析URL的URI
    [http://www.google.com](http://www.google.com)。这将打开浏览器，其中将加载Google的网站。再看一个这种构造函数的例子：`new
    Intent(Intent.ACTION_DIAL, Uri.parse("tel: (+1) 123456789"));`。通过编写这个语句，我们清楚地表明我们想要创建一个用于激活电话拨号器的意图，并通过URI的值来执行通过意图拨打电话的功能。'
- en: Note
  id: totrans-149
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: This form of constructor is mostly used for calling implicit intents. More information
    about the code can be found at [http://developer.android.com/reference/android/content/Intent.html](http://developer.android.com/reference/android/content/Intent.html).
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这种形式的构造函数主要用于调用隐式意图。关于代码的更多信息可以在[http://developer.android.com/reference/android/content/Intent.html](http://developer.android.com/reference/android/content/Intent.html)找到。
- en: Getting results from Android Intents
  id: totrans-151
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从Android Intent获取结果
- en: As we have seen previously, Android Intents were used to navigate from one activity
    to another but in real scenarios there are many things that are required with
    this navigation. One of the most important features of Android Intents is going
    to be discussed here. What we will see here is the response that the source activity
    will get once the destination activity is closed.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们之前所见，Android Intent用于从一个活动导航到另一个活动，但在实际场景中，这种导航需要许多其他东西。这里将讨论Android Intent最重要的特性之一。我们将在这里看到的是，一旦目标活动关闭，源活动将获得什么响应。
- en: 'To further explain the previous statement, we have a scenario in which:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步解释前面的陈述，我们有一个场景：
- en: There is a source activity (from which the navigation will start)
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有一个源活动（将从这里开始导航）
- en: A destination activity (to which the navigation will be done)
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个目标活动（将进行导航的地方）
- en: On the closure of the destination activity, it will return a result back to
    the source activity
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标活动关闭时，它将向源活动返回一个结果。
- en: This is a very handy option in Android Intents for bringing back the result
    from an activity. We will discuss this feature in a great detail with an example
    code.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这是Android Intent中一个非常方便的选项，用于从活动中带回结果。我们将通过示例代码详细讨论这个特性。
- en: Understanding with an example
  id: totrans-158
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过示例理解
- en: In this example, we will look at the scenario in which there are two activities.
    Activity one will be used as the launcher activity. Activity two will be used
    as the destination activity which will also return some result back to the first
    activity. The first activity will catch the result and on the basis of that code,
    it will decide what kind of task was finished or failed in the second activity.
    In the end some dialog message will be shown on the first activity in accordance
    with the result that is given back.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们将查看有两个活动的情况。第一个活动将作为启动活动。第二个活动将作为目标活动，它还将向第一个活动返回一些结果。第一个活动将捕获结果，并根据该代码决定第二个活动中完成了或失败的任务类型。最后，根据返回的结果，在第一个活动中显示一些对话框消息。
- en: Going deep into the example
  id: totrans-160
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 深入示例
- en: 'Again, the following code is in five parts. It is the modification of the last
    example in which the normal use of intents was described. In order to implement
    this example, perform the following steps:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 再次，以下代码分为五部分。这是上一个示例的修改，其中描述了意图的正常使用。为了实现这个示例，请执行以下步骤：
- en: Create a new project or open any existing project in which you want to make
    the changes.
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新项目或打开任何现有项目，以便进行更改。
- en: Open the source activity in which you want to implement the intent.
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开源活动，在其中实现意图。
- en: 'Implement the following code:'
  id: totrans-164
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 实现以下代码：
- en: '[PRE3]'
  id: totrans-165
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Run the project and a button will appear. Tap the button in order to navigate
    to the next activity through intents.
  id: totrans-166
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 运行项目，会出现一个按钮。点击按钮，通过意图导航到下一个活动。
- en: After successful execution of the intent, the new activity will appear. Click
    on the back key of the emulator or Android phone on which you are testing and
    the system will bring you back to the first activity.
  id: totrans-167
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当意图成功执行后，新的活动将会出现。点击模拟器或你正在测试的Android手机上的返回键，系统将会带你回到第一个活动。
- en: After coming back to first activity it will show the toast in order to communicate
    the result from the destination activity.![Going deep into the example](img/9639_02_05.jpg)
  id: totrans-168
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回第一个活动后，它会显示吐司通知，以便从目标活动中传达结果。![深入示例](img/9639_02_05.jpg)
- en: Indicates the flow of application from the first activity to the second activity
    and getting the result back to the first activity
  id: totrans-169
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 指示应用程序从第一个活动到第二个活动，并将结果返回到第一个活动的流程
- en: Explaining the code
  id: totrans-170
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 解释代码
- en: In this example, as mentioned before, we will understand how to get back the
    result in order to verify (on the first activity) whether the task performed in
    the second activity is successfully done or not.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，如前所述，我们将了解如何获取结果，以验证（在第一个活动中）在第二个活动中执行的任务是否成功完成。
- en: Before going further, keep in mind that this is an extension of the previously
    defined example; so the things that we went through previously will not be explained
    in this example. Kindly read the previous example if you find anything difficult
    in here.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，请记住这是之前定义例子的扩展；因此，我们之前讨论过的内容在这个例子中不会解释。如果你在这里发现任何难以理解的内容，请阅读之前的例子。
- en: Let's get started, step by step.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们一步一步开始。
- en: Part one – MainActivity.java
  id: totrans-174
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第一部分 – MainActivity.java
- en: Similar to before, this is the first activity from which the navigation will
    start on tapping the button. Most part of this activity is same as that of the
    previous example, but if you take a deeper look, you will notice that the `startActivityForResult()`
    method is used in order to start the activity. That is because the activity that
    we are starting will return a result after the second activity is closed.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前一样，这是在点击按钮后开始导航的第一个活动。这个活动的大部分内容与之前的例子相同，但如果你仔细观察，会发现使用了`startActivityForResult()`方法来启动活动。这是因为我们启动的活动将在第二个活动关闭后返回一个结果。
- en: The `startActivityForResult()` method has two arguments. First is the intent
    which is similar to that of the `startActivity()` method described before. Let's
    check out what the second argument is. Take a scenario where the first activity
    invokes more than one activity which will return some result. Now at the time
    of catching that result, we need to be sure which activity it is coming from.
    So this is why we assign a request code which will return the result when the
    intent gets back the user to the first activity. We will then put a check to know
    which activity the result is coming from.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`startActivityForResult()`方法有两个参数。第一个是意图，与之前描述的`startActivity()`方法类似。让我们看看第二个参数是什么。设想一个场景，第一个活动调用了多个将返回结果的活动。现在，在捕捉结果时，我们需要确定它来自哪个活动。因此，我们分配一个请求码，当意图将用户带回第一个活动时，它将返回结果。然后我们将进行检查，以了解结果来自哪个活动。'
- en: Moving on, if you look carefully in the code, there is an overridden method
    named `onActivityResult()`. This method will be called when the closure of the
    second activity occurs. It has three arguments as you can see in the code. The
    first is `requestCode` which will be in accordance to the activity which is sending
    the result back. Apart from that we have `resultCode` which will tell whether
    the task in the second activity was performed successfully or not. Thirdly, we
    have an intent which is basically the object which is causing the activity to
    move back to the first one. We can also send some data back to the first activity
    through this intent.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，如果你仔细查看代码，会发现有一个被重写的方法名为`onActivityResult()`。当第二个活动关闭时，这个方法将被调用。正如你在代码中所见，它有三个参数。第一个是`requestCode`，它与发送结果返回的活动相符合。除此之外，我们还有`resultCode`，它会告诉你在第二个活动中执行的任务是否成功。第三，我们有意图，基本上是这个对象导致活动返回到第一个活动。我们还可以通过这个意图将一些数据发送回第一个活动。
- en: Part two – MySecondActivity.java
  id: totrans-178
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第二部分 – MySecondActivity.java
- en: This is same as the first example; rather, it carries two objects of check boxes
    in the layout file and these are used to make a result in the second activity.
    We find the view using the ID and on the basis of the selected check box, we see
    which one is enabled. When the button is pressed, it will see which check box
    is enabled and on the basis of the enabled priority, it calls the `setResult()`
    function. This function sets a result to the intent which will help the activity
    to move back to the first activity.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这与第一个示例相同；实际上，它包含了布局文件中的两个复选框对象，这些对象用于在第二个活动中生成结果。我们通过ID找到视图，并根据选中的复选框判断哪个是启用的。当按下按钮时，它会检查哪个复选框被启用，并根据启用的优先级调用`setResult()`函数。这个函数为意图设置一个结果，这将帮助活动返回到第一个活动。
- en: After setting the result, we will finish the second activity and it will move
    back to the first activity with the result. Just after the activity has finished,
    the `onActivityResult()` method from the first activity will be executed in order
    to see the result which is sent by the second activity.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 设置结果后，我们将结束第二个活动，并带着结果返回到第一个活动。在活动结束后，第一个活动的`onActivityResult()`方法将被执行，以便查看由第二个活动发送的结果。
- en: Part three – activity_main.xml
  id: totrans-181
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第三部分 – activity_main.xml
- en: This part of the code is similar to the first example; kindly refer to the first
    example for an explanation.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分代码与第一个示例相似；请参考第一个示例的解释。
- en: Part four – activity_two_layout.xml
  id: totrans-183
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第四部分 – activity_two_layout.xml
- en: This layout file refers to the second activity. We have put two checkboxes,
    on the basis of which it will be decided which result is to be sent back to the
    first activity. There are some attributes that are the same as the ones in the
    previous example and hence, that example can be referred to.
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 这个布局文件指的是第二个活动。我们放置了两个复选框，根据这些复选框的决定，将决定要发送哪个结果返回到第一个活动。有一些属性与上一个示例中的相同，因此可以参考那个示例。
- en: Part five – AndroidManifest.xml
  id: totrans-185
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 第五部分 – AndroidManifest.xml
- en: Again, this file is untouched and is same as the first example. Kindly refer
    to the first simple example of intent.
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，此文件未作修改，与第一个示例相同。请参考第一个意图的简单示例。
- en: Future considerations
  id: totrans-187
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 未来考虑事项
- en: There are two scenarios which we can focus on as a future consideration. The
    first is how two or more activities can be handled while all of them are sending
    the result back. This is of course with the help of the `requestCode` argument.
    The second most important thing is, in the scenario where we are sending back
    only the response code, there might be a need to also send back some strings,
    int values, or some custom objects as a result. In that case, we will need some
    other methods to send those objects back to the first one via intents.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以关注两种未来考虑的场景。第一种是当所有活动都在发送结果回来时如何处理两个或更多活动。这当然是通过`requestCode`参数的帮助。第二重要的是，在只发送响应码的场景中，可能还需要发送一些字符串、整数值或自定义对象作为结果。在这种情况下，我们需要其他方法通过意图将这些对象发送回第一个活动。
- en: Note
  id: totrans-189
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: In [Chapter 5](ch05.html "Chapter 5. Data Transfer Using Intents"), *Data Transfer
    Using Intents*, we will have a complete look into how we can transfer different
    kinds of data inside an intent.
  id: totrans-190
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第五章](ch05.html "第五章. 使用意图进行数据传输")，*使用意图进行数据传输*，我们将全面了解如何在意图中传输不同类型的数据。
- en: Structure of an intent
  id: totrans-191
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 意图的构造
- en: In this section, we will study the structure of an intent object as used in
    Android. An intent is the bundle of information in which there are multiple things
    to facilitate. It has information about the actions that should be taken while
    the intent is executed. Similarly, it also has information about the category
    which is going to handle the intent. Data plays a vital role in intents. So an
    intent has information of the data in the form of a URI that has to be executed.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将研究在Android中使用的意图对象的结构。意图是包含多个事物以方便的信息包。它包含了在执行意图时应采取的操作信息。同样，它也包含了将处理意图的类别信息。数据在意图中起着至关重要的作用。因此，意图具有以URI形式执行的数据信息。
- en: Note
  id: totrans-193
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: 'Due to limited space here, we cannot explain every constant in every component.
    In order to get a complete list of constants that Android uses, you can take a
    look here:'
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这里空间有限，我们无法解释每个组件中的每个常量。为了获取Android使用的完整常量列表，您可以在这里查看：
- en: '[http://developer.android.com/reference/android/content/Intent.html](http://developer.android.com/reference/android/content/Intent.html)'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: '[http://developer.android.com/reference/android/content/Intent.html](http://developer.android.com/reference/android/content/Intent.html)'
- en: We will now go through each one of the components in order to see what they
    really mean.
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将逐一了解这些组件，以了解它们的真正含义。
- en: Component
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 组件
- en: 'This will explain which component will get affected or handle the execution
    of a particular intent. For example, there is an intent that is responsible for
    making an action which is related to the activity in which it is called. Similarly,
    there is an intent which is handled by Broadcast Receiver and reports when a certain
    system-related task is performed. If the component name is not set, it will self-recognize
    the component with other information. The following table shows the different
    kinds of components that are used in Android Intents:'
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 这将解释哪个组件将受到特定意图执行的影响或处理。例如，有一个负责执行与调用它的活动相关的动作的意图。同样，有一个由广播接收器处理的意图，在执行某些与系统相关的任务时会报告。如果没有设置组件名称，它将使用其他信息自行识别组件。下表显示了在Android意图中使用的不同类型的组件：
- en: '| Constants | Description |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 常量 | 描述 |'
- en: '| --- | --- |'
  id: totrans-200
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| `CATEGORY_BROWSABLE` | Describes that the intent can be safely executed by
    the browser to display the data. |'
  id: totrans-201
  prefs: []
  type: TYPE_TB
  zh: '| `CATEGORY_BROWSABLE` | 表示该意图可以安全地由浏览器执行以显示数据。 |'
- en: '| `CATEGORY_LAUNCHER` | Tells that the activity should be executed as the launcher
    while the application starts. |'
  id: totrans-202
  prefs: []
  type: TYPE_TB
  zh: '| `CATEGORY_LAUNCHER` | 表示在应用程序启动时，该活动应作为启动器执行。 |'
- en: '| `CATEGORY_GADGET` | The activity can be put inside another activity that
    starts from any gadget. |'
  id: totrans-203
  prefs: []
  type: TYPE_TB
  zh: '| `CATEGORY_GADGET` | 活动可以放入从任何小工具启动的另一活动中。 |'
- en: Actions
  id: totrans-204
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作
- en: Actions basically state what action this intent will cause. For example, if
    we initiate an intent object with the action named `ACTION_CALL`, this intent
    will start the call functionality with the data string passed with the `ACTION_CALL`
    action in the form of URI. Taking another example of `ACTION_BATTERY_LOW`, which
    is related to the Broadcast Receiver component. By placing this action in the
    Intent Filter, it will fire the event (or in short a low battery pop-up) if the
    battery goes lower than that of the threshold value.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 操作基本上指明了这个意图将引发什么动作。例如，如果我们初始化一个名为`ACTION_CALL`的动作的意图对象，这个意图将通过以URI形式传递带有`ACTION_CALL`动作的数据字符串来启动通话功能。再以`ACTION_BATTERY_LOW`为例，它与广播接收器组件相关。将此动作放在意图过滤器中，如果电池电量低于阈值，它将触发事件（或简而言之，弹出低电量提示）。
- en: 'There are various kinds of actions present in Android. The following table
    shows some of the intent actions and their description:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: Android中存在各种类型的操作。下表显示了一些意图操作及其描述：
- en: '| Constants | Component | Description |'
  id: totrans-207
  prefs: []
  type: TYPE_TB
  zh: '| 常量 | 组件 | 描述 |'
- en: '| --- | --- | --- |'
  id: totrans-208
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- | --- |'
- en: '| `ACTION_CALL` | Activity | Start the phone call |'
  id: totrans-209
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_CALL` | 活动 | 开始电话通话 |'
- en: '| `ACTION_EDIT` | Activity | Display the data of the user to edit |'
  id: totrans-210
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_EDIT` | 活动 | 显示用户数据以进行编辑 |'
- en: '| `ACTION_MAIN` | Activity | Start as the initial activity with no data |'
  id: totrans-211
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_MAIN` | 活动 | 作为初始活动启动，无数据 |'
- en: '| `ACTION_SYNC` | Activity | Sync the data present on the server with the mobile
    device |'
  id: totrans-212
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_SYNC` | 活动 | 将服务器上的数据与移动设备同步 |'
- en: '| `ACTION_BATTERY_LOW` | Broadcast Receiver | Shows the battery low warning
    |'
  id: totrans-213
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_BATTERY_LOW` | 广播接收器 | 显示电池电量低警告 |'
- en: '| `ACTION_HEADSET_PLUG` | Broadcast Receiver | Shows an alert when the headset
    is plugged in or unplugged |'
  id: totrans-214
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_HEADSET_PLUG` | 广播接收器 | 当插入或拔出耳机时显示警告 |'
- en: '| `ACTION_SCREEN_ON` | Broadcast Receiver | Triggered when the screen is turned
    on |'
  id: totrans-215
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_SCREEN_ON` | 广播接收器 | 当屏幕开启时触发 |'
- en: '| `ACTION_TIMEZONE_CHANGED` | Broadcast Receiver | When the setting of the
    time zone is changed |'
  id: totrans-216
  prefs: []
  type: TYPE_TB
  zh: '| `ACTION_TIMEZONE_CHANGED` | 广播接收器 | 当时区设置更改时 |'
- en: Data
  id: totrans-217
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: 'This should not be considered as the separate component; rather, it is used
    to facilitate the action component. As described previously, there are certain
    components which require some data to be passed. For example, the `ACTION_CALL`
    function requires a data value by which it recognizes on which telephone number
    calling should be performed. In this particular scenario, we need the `tel: xxxxxxxxxxx`
    URI to be put in the data and forwarded to the action. Similarly, when the `ACTION_EDIT`
    or `ACTION_VIEW` actions are performed, they need to be provided with a document
    or a HTTP URL in order to complete the action. The data is given to the intent
    in the form of **URI** (**Universal Resource Identifier**).'
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: '这不应被视为独立的组件；相反，它是用来辅助动作组件的。如前所述，有些组件需要传递一些数据。例如，`ACTION_CALL`函数需要通过一个数据值来识别应该拨打哪个电话号码。在这种特定情况下，我们需要将`tel:
    xxxxxxxxxxx` URI放入数据中，并将其转发给动作。同样，当执行`ACTION_EDIT`或`ACTION_VIEW`动作时，它们需要提供一个文档或HTTP
    URL以完成动作。数据以**URI**（**通用资源标识符**）的形式提供给意图。'
- en: Extras
  id: totrans-219
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附加信息
- en: These are basically the key-value pairs of the additional data that is required
    by the Android Intent. We can take these values from the code (when we make an
    object of the intent) and transfer that data to the next activity. Talking with
    respect to the actions, there are some actions which require additional data to
    fulfill the task. For example, the `ACTION_TIMEZONE_CHANGED` action needs an extra
    time zone which describes the new time zone on the basis of which further tasks
    can be performed.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这些基本上是Android Intent所需的附加数据的键值对。我们可以从代码中获取这些值（当我们创建意图对象时），并将这些数据传递到下一个活动。就动作而言，有些动作需要额外的数据来完成任务。例如，`ACTION_TIMEZONE_CHANGED`动作需要一个额外的时区，该时区描述了新的时区，基于此可以执行进一步的任务。
- en: Summary
  id: totrans-221
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we discussed the introduction of intents with its role, technical
    overview, the basic implementation in an Android Application, and the structure
    of intent based on which, we will further explore different kinds of tasks that
    can be performed. The chapter also provides two very important implementations
    of Android Intents in which the navigation from one activity to another took place,
    while in the second one, the result corresponding to any particular activity is
    sent back to the first activity. The concept discussed in this chapter is the
    key tool to understand the advanced concepts of Android Intent which will be discussed
    later in this book. In the next chapter, we will learn about the categorization
    of Android Intents and its Its theory and implementation in the light of various
    handy examples which can be implemented easily in your Eclipse environment.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们讨论了意图的介绍及其角色、技术概览、在Android应用程序中的基本实现，以及基于意图的结构，我们将进一步探索可以执行的不同类型的任务。本章还提供了两个非常重要的Android
    Intent实现，其中一个是活动到另一个活动的导航，而在第二个中，将特定活动的结果发送回第一个活动。本章讨论的概念是理解Android Intent高级概念的关键工具，这将在本书的后面讨论。在下一章中，我们将学习关于Android
    Intent的分类及其理论，以及在各种实用示例中的实现，这些示例可以轻松地在Eclipse环境中实现。
